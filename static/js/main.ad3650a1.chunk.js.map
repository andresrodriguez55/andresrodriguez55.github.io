{"version":3,"sources":["Pages/Post/markdown-styles.module.css","Pages/About/markdown-styles.module.css","Tools/Images/personAndGuitar.jpg","Tools/Header/Header.js","Tools/Footer/Footer.js","Tools/PrefixURLBackend/PrefixURLBackend.js","Pages/Blog/Blog.js","Pages/Post/Post.js","Pages/About/ContentAbout.md","Pages/About/taza.jpg","Pages/About/About.js","Pages/PanelAdmin/PanelAdmin.js","Pages/Admin/Admin.js","App.js","index.js"],"names":["module","exports","Header","history","useHistory","redirect","category","push","className","src","logo","onClick","Footer","href","target","prefixURLBackend","Blog","initialCategory","useLocation","pathname","React","useState","selectedCategory","setSelectedCategory","categories","setCategories","posts","setPosts","areTherePosts","setAreTherePosts","numberOfVisiblePosts","setNumberOfVisiblePosts","useEffect","a","loadPosts","loadCategories","URLToFetch","fetch","then","information","text","data","json","JSON","parse","catch","e","alert","length","showMorePosts","val","id","onChange","selected","document","getElementById","value","options","selectedIndex","updateSelectedCategory","map","c","NameOfCategory","printCategories","slice","post","Category","ID","title","toString","Title","replace","CoverPhotoLink","stringDate","PostDate","Date","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","style","display","fontSize","fontWeight","align","Post","informationUrl","split","urlID","urlTitle","setPost","doesPostExist","setDoesPostExist","comments","setComments","clientIP","setClientIP","loadPost","updateClientIP","loadComments","method","ipAddress","markdownCodeThemeComponent","props","railscasts","language","substring","children","convertStringDateTimezoneToClient","submitComment","preventDefault","formData","FormData","append","window","location","replaceAll","body","response","result","scrollTo","scrollHeight","rehypePlugins","rehypeRaw","remarkGfm","rehypeKatex","components","code","remarkPlugins","remarkMath","Content","reactMarkDown","onSubmit","name","type","placeholder","autoComplete","required","minLength","maxLength","comment","Nick","CommentDate","About","setMarkdown","ContentAbout","content","PanelAdmin","user","userComments","setUserComments","newPostContent","setNewPostContent","loadUserComments","updatedComment","newData","row","field","Username","Password","parseInt","UserCommentNick","UserCommentContent","deleteUserComment","updatedCategory","deleteCategory","nameOfCategory","postCategory","deletePost","postID","setNewPostID","newID","postOrUpdatePost","newPostSection","disabled","onKeyDown","keyCode","element","start","selectionStart","end","selectionEnd","Button","backgroundColor","width","padding","marginTop","marginRight","variant","height","marginBottom","columns","headerName","sortable","disableColumnMenu","flex","editable","renderCell","info","rows","pageSize","onCellEditCommit","PostTitle","PostContent","PostCategory","PostCoverPhotoLink","Admin","commentsCountries","setCommentsCountries","commentsCountriesCount","setCommentsCountriesCount","commentsDate","setCommentsDate","commentsDateCount","setCommentsDateCount","setUser","isSessionActive","setIsSessionActive","loadCommentsCountriesInfo","loadCommentsMonthsInfo","tempCommentsCountries","tempCommentsCountriesCount","Country","CommentsCount","tempCommentsMonths","tempCommentsMonthsCount","number","getMonthName","CommentsMonth","submit","autocomplete","labels","datasets","len","colors","temp","getLoopColorsByLength","responsive","maintainAspectRatio","plugins","legend","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ad3650a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__sUiWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__3ULgc\"};","export default __webpack_public_path__ + \"static/media/personAndGuitar.24374079.jpg\";","import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\nimport logo from '../../Tools/Images/personAndGuitar.jpg';\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n                break;\r\n\r\n            default :\r\n                history.push(\"/admin\");  \r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src={logo}/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"admin\")}}>\r\n                                Admin\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const prefixURLBackend =\"https://personalblog55.herokuapp.com/\";","import React from 'react';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Blog.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Blog()\r\n{\r\n    const history=useHistory();\r\n    function redirect(ID, title)\r\n    {\r\n        history.push(\"post/\"+ID+\"/\"+title.replace(\" \", \"%20\"));\r\n    };\r\n\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory]= React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [areTherePosts, setAreTherePosts] = React.useState(true);\r\n    const [numberOfVisiblePosts, setNumberOfVisiblePosts]=React.useState(4);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadPosts();\r\n        if(initialCategory==\"All\")\r\n            loadCategories();\r\n    }, []);\r\n\r\n    const loadCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"Category/ReadCategoriesOfPosts.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert(URLToFetch));\r\n    };\r\n\r\n    const loadPosts=async()=>\r\n    {\r\n        let URLToFetch=prefixURLBackend+\"Post/ReadByCategory.php\"+\r\n            ( (selectedCategory==\"All\")?\"\":(\"?Category=\"+selectedCategory) );\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setPosts(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n\r\n        if(posts.length==0)\r\n            setAreTherePosts(false);\r\n    };\r\n\r\n    const showMorePosts=()=>\r\n    {\r\n        setNumberOfVisiblePosts((val)=>val+4);\r\n    };\r\n\r\n    const ifIsNecesaryHideMoreButton=()=>\r\n    {\r\n        if(posts.length<=numberOfVisiblePosts && posts.length!=0)\r\n            document.getElementById('morePostsButton').style.display = 'none';\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const printCategories=()=>\r\n    {\r\n        if(initialCategory!=\"All\")\r\n            return;\r\n\r\n        return(\r\n            <div className=\"displayCategories\">\r\n                <select id=\"selectedCategory\" \r\n                    onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.NameOfCategory}>\r\n                                    {c.NameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n        return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n            day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n            hour12: false });\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        if(posts.length>0)\r\n        {   \r\n            return( \r\n                <div>\r\n                    <div  className=\"posts\">\r\n                    {\r\n                        posts.slice(0, numberOfVisiblePosts).map((post)=>\r\n                        {\r\n                            if(selectedCategory==\"All\" || post.Category==selectedCategory)\r\n                            {\r\n                                return(\r\n                                    <div className=\"postGrid\" \r\n                                        onClick={()=>{redirect(post.ID.toString(), post.Title)}}>\r\n                                        <img className=\"postGridImage\" src={post.CoverPhotoLink}/>\r\n                                        <div className=\"postGridInformation\">\r\n                                            <h2 className=\"postGridTitle\">{post.Title}</h2>\r\n                                            <p className=\"postGridCategory\">{\"Category: \"+post.Category}</p>\r\n                                            <p className=\"postGridDate\">{convertStringDateTimezoneToClient(post.PostDate)}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        })\r\n                    }{ifIsNecesaryHideMoreButton()}\r\n                    </div>\r\n                    \r\n                    <div className=\"morePostsButtonArea\">\r\n                        <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                            onClick={showMorePosts}>More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(areTherePosts)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return (\r\n                <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n            );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"blogScreen\">\r\n            <Header/>\r\n            <div>{printCategories()}{printPosts()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n    const urlTitle=informationUrl[3];\r\n\r\n    const [post, setPost] = React.useState([]);\r\n    const [doesPostExist, setDoesPostExist] = React.useState(true);\r\n    const [comments, setComments]=React.useState([]);\r\n    const [clientIP, setClientIP]=React.useState(\"0.0.0.0\");\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadPost();\r\n        await updateClientIP();\r\n        await loadComments();\r\n    }, []);\r\n\r\n    const updateClientIP=async()=>\r\n    {\r\n        if(doesPostExist)\r\n        {\r\n            await fetch(\"https://api.db-ip.com/v2/free/self\", {method:\"GET\"}).then(\r\n                async(information)=> await information.json()\r\n                .then( data=>{ setClientIP(data.ipAddress) }))\r\n                .catch(e=>alert(\"Fatal error...\"));\r\n        }\r\n    };\r\n\r\n    const loadPost=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"Post/ReadConcrete.php?ID=\"+urlID.toString()).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then((data)=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                setPost(json);\r\n            })\r\n        }).catch(e => alert('Post content error! Database connection error...'));\r\n\r\n        if(post.length==0)\r\n            setDoesPostExist(false);\r\n    };\r\n\r\n    const loadComments=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"UserComment/ReadForConcretePost.php?PostID=\"+urlID.toString())\r\n            .then(async(information)=>\r\n            { \r\n                await information.text()\r\n                .then(data=>\r\n                    {\r\n                        const json=JSON.parse(data);\r\n                        setComments(json);\r\n                    })\r\n            })\r\n            .catch(e => alert('Comments error! Database connection error...'));\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n        return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n            day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n            hour12: false });\r\n    };\r\n\r\n    const printComments=()=>\r\n    {\r\n        return(\r\n            comments.map(comment=>\r\n            {\r\n                return(\r\n                    <div className=\"userCommentArea\">\r\n                        <h4 className=\"userCommentNick\">{comment.Nick}</h4>\r\n                        <p className=\"userCommentContent\">{comment.Content}</p>\r\n                        <p className=\"userCommentDate\">\r\n                        {\r\n                            convertStringDateTimezoneToClient(comment.CommentDate)\r\n                        }\r\n                        </p>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    const submitComment=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Nick\", document.getElementById(\"Nick\").value);\r\n        formData.append(\"Content\", document.getElementById(\"Content\").value);\r\n        formData.append(\"PostID\", urlID);\r\n        formData.append(\"IP\", clientIP);\r\n        formData.append(\"ClientURL\", window.location.href);\r\n        formData.append(\"CommentDate\", \r\n            (new Date()).toLocaleString(\"es-ES\", {timeZone: \"Europe/Istanbul\"}).replaceAll(\"/\", \"-\"));\r\n\r\n        await fetch((prefixURLBackend+\"UserComment/Create.php\"),\r\n        {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then(async(response)=>{await response.text()\r\n        .then(async(result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else \r\n                window.scrollTo(0,document.body.scrollHeight);\r\n        })});     \r\n        \r\n        document.getElementById(\"Nick\").value=\"\";\r\n        document.getElementById(\"Content\").value=\"\";\r\n        loadComments();\r\n    };\r\n\r\n    const printCommentsSection= ()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\">\r\n                <form  onSubmit={(e)=>submitComment(e)} className=\"commentsForm\">\r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Nick</label>\r\n                        <input className=\"nickInput\" name=\"Nick\" id=\"Nick\" \r\n                            type=\"text\" placeholder=\"Enter a nick...\" \r\n                            autoComplete=\"off\" required={true} minLength={3}/>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Comment</label>\r\n                        <input className=\"commentInput\" name=\"Content\" id=\"Content\" \r\n                            type=\"text\" placeholder=\"Enter your comment...\" \r\n                            autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                    </div>\r\n        \r\n                    <div>\r\n                        <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                            type=\"submit\" value=\"Post\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"usersCommentsArea\">{printComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const printPostAndCommentsSection=()=>\r\n    {\r\n        if(post && post.Title===urlTitle.replace(\"%20\", \" \"))\r\n        {\r\n            return(\r\n                <div>\r\n                    <div className=\"PostArea\">\r\n                        <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                            components={{code: markdownCodeThemeComponent}}\r\n                            remarkPlugins={[remarkMath]}\r\n                            children={\"<div className='postInfo'><img className='postImage' src='\"+post.CoverPhotoLink+\"'/>\"+\r\n                            \"<div className='postHeaderText'><h1 className='postTitle' align='center'>\"+post.Title+\"</h1>\"+\r\n                            \"<h6 className='postDate' align='center'>\"+convertStringDateTimezoneToClient(post.PostDate)+\"</h6></div></div>\"+\r\n                            post.Content} \r\n                            className={style.reactMarkDown} />\r\n                    </div>\r\n                    <div>{printCommentsSection()}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(doesPostExist)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">POST NOT EXIST...</h6>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"postScreen\">\r\n            <Header/>\r\n            <div>{printPostAndCommentsSection()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );   \r\n}","export default __webpack_public_path__ + \"static/media/ContentAbout.9247f78b.md\";","export default __webpack_public_path__ + \"static/media/taza.1fa020a4.jpg\";","import { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport ContentAbout from \"./ContentAbout.md\";\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport logo from './taza.jpg';\r\n\r\nimport \"./About.css\";\r\n\r\nexport default function About()\r\n{\r\n    const [markdown, setMarkdown]=useState(\"\");\r\n    fetch(ContentAbout).then(content => content.text()).then(text => setMarkdown(text));\r\n\r\n    return(\r\n        <div className=\"aboutScreen\">\r\n            <Header/>\r\n            <div className=\"aboutArea\">\r\n                <img className=\"aboutPic\" src={logo}/>\r\n                <br/>\r\n                <span >\r\n                    Welcome to my mind! This is my personal space. Here I write any experience, thought or thing that I have just learned.\r\n                    <br/>\r\n                    <br/>\r\n                    I am a Spanish, I was born in 1999 and I study computer engineering at Ege University located in Turkey. I love to learn new things, work hard, play the guitar and socialize with foreigners.\r\n                </span>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\n\r\nimport \"./PanelAdmin.css\"\r\n\r\nexport default function PanelAdmin({user})\r\n{\r\n    const [userComments, setUserComments] = React.useState([]);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n    const [newPostContent, setNewPostContent] = React.useState(\"\");\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadCategories();\r\n        await loadUserComments();\r\n        await loadPosts();\r\n    }, []);\r\n\r\n    const loadCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadCategoriesInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadUserComments=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadUserCommentsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setUserComments(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadPosts=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadPostsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setPosts(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const updatedComment=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(row)\r\n            row[newData.field]=newData.value;\r\n        else \r\n        {    \r\n            loadUserComments();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", parseInt(row.id));\r\n        data.append(\"Nick\", row.UserCommentNick);\r\n        data.append(\"Content\", row.UserCommentContent);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadUserComments();\r\n    };\r\n\r\n    const deleteUserComment=async(id)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", id);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadUserComments();\r\n    };\r\n\r\n    const commentsSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 320, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"PostTitle\", headerName:\"Title of Post\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field:\"UserCommentNick\", headerName:\"Nick of User\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"UserCommentContent\", headerName:\"Content of Comment\", sortable:false, disableColumnMenu:true,  editable:true, flex:1},\r\n                        {field:\"UserCountry\", headerName:\"Country\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field:\"CommentDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteUserComment(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={userComments}\r\n                    pageSize={4}\r\n                    onCellEditCommit={updatedComment}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const updatedCategory=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(!row)\r\n        {\r\n            loadCategories();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"CurrentNameOfCategory\", row.NameOfCategory);\r\n        data.append(\"NewNameOfCategory\", newData.value);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const deleteCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadCategories();\r\n    };\r\n\r\n    const postCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/PostCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n                document.getElementById(\"NewCategory\").value=\"\";\r\n        })});      \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const categoriesSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 320, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"NameOfCategory\", headerName:\"Name\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"NumberOfPosts\", headerName:\"Number of Posts\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteCategory(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={categories}\r\n                    pageSize={4}\r\n                    onCellEditCommit={updatedCategory}/>\r\n\r\n                    <label>New: </label>\r\n                    <input type=\"text\" id=\"NewCategory\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() => postCategory(document.getElementById(\"NewCategory\").value)}\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const deletePost=async(postID)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", postID);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeletePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    };\r\n\r\n    const setNewPostInfoWithExistingPostInfo=(post)=>\r\n    {\r\n        setNewPostID(post.id);\r\n        document.getElementById(\"PostTitle\").value=post.PostTitle;\r\n        document.getElementById(\"PostContent\").value=post.PostContent;\r\n        setNewPostContent(post.PostContent);\r\n        document.getElementById(\"PostDate\").value=post.PostDate.replace(\" \", \"T\");\r\n        document.getElementById(\"PostCategory\").value=post.PostCategory;\r\n        document.getElementById(\"PostCoverLink\").value=post.PostCoverPhotoLink;\r\n    };\r\n\r\n    const setNewPostID=(newID)=>\r\n    {\r\n        document.getElementById(\"PostID\").value=newID;\r\n    };\r\n\r\n    const postsSection=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div style={{ height: 320, width: '100%', marginBottom:\"20px\", }}>\r\n                    <DataGrid \r\n                        columns={\r\n                        [\r\n                            {field:\"PostTitle\", headerName:\"Title\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"PostCategory\", headerName:\"Category\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"PostDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"NumberOfComments\", headerName:\"Number of Comments\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (info) => \r\n                                (\r\n                                    <>\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#ffcc00\",\r\n                                            width:\"48%\",\r\n                                            marginRight: \"4%\",\r\n                                            padding: \"3px 35px\"\r\n                                            }}\r\n\r\n                                            onClick={() => setNewPostInfoWithExistingPostInfo(info.row)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Edit\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#e8605d\",\r\n                                            width:\"48%\",\r\n                                            padding: \"3px 35px\",\r\n                                            }}\r\n\r\n                                            onClick={() => deletePost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Delete\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        ]}\r\n                        rows={posts}\r\n                        pageSize={4}/>  \r\n                </div>\r\n                {newPostSection()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const postOrUpdatePost=async()=>\r\n    {\r\n        if(!document.getElementById(\"PostID\"))\r\n            return;\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n\r\n        data.append(\"ID\", parseInt(document.getElementById(\"PostID\").value));\r\n        data.append(\"Title\", document.getElementById(\"PostTitle\").value.replaceAll(\"\\\"\", \"\\'\"));\r\n        data.append(\"Content\", document.getElementById(\"PostContent\").value.replaceAll(\"\\\"\", \"\\'\"));\r\n        data.append(\"Category\", document.getElementById(\"PostCategory\").value);\r\n        data.append(\"PostDate\", document.getElementById(\"PostDate\").value.replace(\"T\", \" \").replaceAll(\"-\",\".\"));\r\n        data.append(\"CoverPhotoLink\", document.getElementById(\"PostCoverLink\").value);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/PostOrUpdatePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                document.getElementById(\"PostID\").value=\"\";\r\n                document.getElementById(\"PostTitle\").value=\"\";\r\n                document.getElementById(\"PostContent\").value=\"\";\r\n                document.getElementById(\"PostCoverLink\").value=\"\";\r\n                setNewPostContent(\"\");\r\n            }\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    }\r\n\r\n    const newPostSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"markdownEditor\">\r\n                <label >ID: </label>\r\n                <input className=\"IDLabel\" type=\"number\" id=\"PostID\" disabled/>\r\n                <button onClick={()=>setNewPostID(posts.length)}>Set For New Post</button>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Title: </label>\r\n                <input type=\"text\" id=\"PostTitle\" />\r\n                <div className=\"break\"/>\r\n\r\n                <label>Date: </label>\r\n                <input type=\"datetime-local\" id=\"PostDate\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Category: </label>\r\n                <select id=\"PostCategory\" >\r\n                {\r\n                    categories.map(c=>\r\n                    {\r\n                        return(\r\n                            <option value={c.NameOfCategory}>\r\n                                {c.NameOfCategory}\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n                </select>\r\n\r\n                <div className=\"break\"/>\r\n\r\n                <label>Cover Link: </label>\r\n                <input type=\"text\" id=\"PostCoverLink\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <textarea className=\"textArea\" id=\"PostContent\" \r\n                    onKeyDown={(e)=>\r\n                    {\r\n                        if(e.keyCode == 9) \r\n                        { \r\n                            e.preventDefault();\r\n\r\n                            const element=document.getElementById(\"PostContent\");\r\n\r\n                            const start = element.selectionStart;\r\n                            const end = element.selectionEnd;\r\n\r\n                            element.value = element.value.substring(0, start) + \"\\t\" + element.value.substring(end);\r\n\r\n                            element.selectionStart = element.selectionEnd = start + 1;\r\n                        }\r\n                    }}\r\n                />\r\n                \r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}} \r\n                    remarkPlugins={[remarkMath]}\r\n                    children={newPostContent} \r\n                    className={\"markdown\"} />\r\n                <div className=\"break\"/>\r\n\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#000000\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    marginRight:\"7px\"\r\n                    }}\r\n                    onClick={()=>{setNewPostContent(document.getElementById(\"PostContent\").value)}}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Review\r\n                </Button>\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#0c7d06\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    }}\r\n\r\n                    onClick={()=>postOrUpdatePost()}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Post\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"adminScreen\">\r\n            {commentsSection()}\r\n            {categoriesSection()}\r\n            {postsSection()}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Pie, Line} from \"react-chartjs-2\"\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport PanelAdmin from \"../PanelAdmin/PanelAdmin\"\r\n\r\nimport \"./Admin.css\"\r\n\r\nexport default function Admin()\r\n{\r\n    const [commentsCountries, setCommentsCountries]=React.useState([]);\r\n    const [commentsCountriesCount, setCommentsCountriesCount]=React.useState([]);\r\n    const [commentsDate, setCommentsDate]=React.useState([]);\r\n    const [commentsDateCount, setCommentsDateCount]=React.useState([]);\r\n\r\n    const [user, setUser]=React.useState({});\r\n    const [isSessionActive, setIsSessionActive]=React.useState(false);\r\n\r\n    React.useEffect(()=>\r\n    {\r\n        loadCommentsCountriesInfo();\r\n        loadCommentsMonthsInfo();\r\n    }, []);\r\n\r\n    const loadCommentsCountriesInfo=()=>\r\n    {\r\n        const tempCommentsCountries=[];\r\n        const tempCommentsCountriesCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByCountries.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsCountries.push(row.Country);\r\n                    tempCommentsCountriesCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsCountries(tempCommentsCountries);\r\n                setCommentsCountriesCount(tempCommentsCountriesCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getMonthName(number)\r\n    {\r\n        switch(number)\r\n        {\r\n            case \"1\":\r\n                return \"January\";\r\n            case \"2\":\r\n                return \"Frebruary\";\r\n            case \"3\":\r\n                return \"March\";\r\n            case \"4\":\r\n                return \"April\";\r\n            case \"5\":\r\n                return \"May\";\r\n            case \"6\":\r\n                return \"June\";\r\n            case \"7\":\r\n                return \"July\";\r\n            case \"8\":\r\n                return \"August\";\r\n            case \"9\":\r\n                return \"September\";\r\n            case \"10\":\r\n                return \"October\";\r\n            case \"11\":\r\n                return \"November\";\r\n            default:\r\n                return \"December\";\r\n        };\r\n    };\r\n\r\n    const loadCommentsMonthsInfo=()=>\r\n    {\r\n        const tempCommentsMonths=[];\r\n        const tempCommentsMonthsCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByMonths.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsMonths.push(getMonthName(row.CommentsMonth));\r\n                    tempCommentsMonthsCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsDate(tempCommentsMonths);\r\n                setCommentsDateCount(tempCommentsMonthsCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getLoopColorsByLength(len)\r\n    {\r\n        const colors=[\"red\", \"blue\", \"yellow\", \"orange\", \"brown\", \"pink\"];\r\n        let temp=0;\r\n\r\n        while(colors.length<len)\r\n        {\r\n            colors.push(colors[(temp++)%colors.length]);\r\n        }\r\n\r\n        return colors;\r\n    };\r\n\r\n    const submit=(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Username\", document.getElementById(\"Username\").value);\r\n        formData.append(\"Password\", document.getElementById(\"Password\").value);\r\n\r\n        fetch((prefixURLBackend+\"Admin/ReadUserExist.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: formData\r\n        }).then((response)=>{response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                setUser({\r\n                    Username: document.getElementById(\"Username\").value,\r\n                    Password: document.getElementById(\"Password\").value\r\n                });\r\n                setIsSessionActive(true);\r\n            }\r\n        })});      \r\n    };\r\n\r\n    if(isSessionActive==false)\r\n    {\r\n        return(\r\n            <div className=\"loginScreen\">\r\n                <form className=\"loginForm\" onSubmit={(e)=>submit(e)}>\r\n                    <h1>Admin Panel</h1>\r\n                    <input className=\"usernameInput\" name=\"Username\" id=\"Username\" \r\n                            type=\"password\" placeholder=\"Username\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"passwordInput\" name=\"Password\" id=\"Password\" \r\n                            type=\"password\" placeholder=\"Password\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"loginPostButton\" name=\"loginSubmit\" id=\"loginSubmit\" \r\n                                                type=\"submit\" value=\"Login\" />   \r\n                </form>\r\n    \r\n                <h1 align=\"center\">Statistics</h1>\r\n    \r\n                <div className=\"chartArea\">\r\n                    <Pie data=\r\n                        {{\r\n                            labels: commentsCountries,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: getLoopColorsByLength(commentsCountriesCount.length),\r\n                                data: commentsCountriesCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Countries of Comments\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div> \r\n    \r\n                <div className=\"chartArea\">\r\n                    <Line data=\r\n                        {{\r\n                            labels: commentsDate,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                                data: commentsDateCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Months of Comments Counts\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    else\r\n    {\r\n        return(\r\n            <PanelAdmin user={user} />\r\n        );\r\n    }\r\n}","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport About from \"./Pages/About/About\";\nimport Admin from \"./Pages/Admin/Admin\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n    <HashRouter >\n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n\n      <Route exact path=\"/admin\" component={Admin}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}