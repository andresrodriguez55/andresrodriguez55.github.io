{"version":3,"sources":["Pages/Post/markdown-styles.module.css","Tools/PrefixURLBackend/PrefixURLBackend.js","Tools/Images/defaultPostImage.jpg","Pages/Blog/Blog.js","Pages/Post/Post.js","Tools/Images/personAndGuitar.jpg","Tools/Header/Header.js","Tools/Footer/Footer.js","Pages/About/taza.jpg","Pages/About/About.js","Pages/Statistics/Statistics.js","Tools/auth-helper.js","Pages/Admin/Login.js","Pages/Admin/Admin.js","Pages/Unsubscribe/Unsubscribe.js","App.js","index.js"],"names":["module","exports","prefixURLBackend","Blog","initialCategory","useLocation","pathname","React","useState","selectedCategory","setSelectedCategory","categories","setCategories","posts","setPosts","page","setPage","loading","setLoading","searchedToken","setSearchedToken","isInitialMount","useRef","useEffect","a","hideSelectCategory","fetchCategories","current","length","fetchPosts","delay","setTimeout","clearTimeout","fetch","then","response","ok","json","jsonArray","alert","catch","e","console","log","urlToFetch","JSON","parse","headers","get","nextPage","hideMoreButton","showMoreButton","updateSelectedCategory","selected","document","getElementById","value","options","selectedIndex","element","style","visibility","display","convertStringDateTimezoneToClient","stringDate","serverDate","Date","replace","toString","localeCompare","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","className","id","onChange","map","c","nameOfCategory","type","placeholder","event","target","post","href","prefixURLFrontend","title","src","coverPhotoLink","onError","currentTarget","onerror","defaultImage","category","postDate","onClick","margin","textAlign","fontSize","fontWeight","align","Post","urlID","split","setPost","isLoading","setIsLoading","clientCountry","setClientCountry","commentParentId","setCommentParentId","nicksByCommentId","useReducer","x","fetchPost","fetchClientCountry","info","country","error","postJson","markdownCodeThemeComponent","props","railscasts","language","substring","children","printComments","userComments","parentComment","nick","commentDate","content","commentForm","inverseParent","childComment","parentId","scrollToComment","commentId","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","postComment","preventDefault","comment","postId","parseInt","email","notifyReply","checked","method","body","stringify","addedComment","added","push","text","onSubmit","autoComplete","required","minLength","maxLength","name","alt","rehypePlugins","rehypeRaw","remarkGfm","rehypeKatex","components","code","remarkPlugins","remarkMath","reactMarkDown","Header","history","useHistory","redirect","prompt","subscription","Email","logo","Footer","About","getLoopColorsByLength","len","colors","temp","Statistics","countriesOfComments","numberOfCommentsPerMonth","topCommentersNicks","topCommentedPosts","statistics","setStatistics","fetchStatistics","data","height","width","marginBottom","columns","field","headerName","flex","sortable","disableColumnMenu","rows","getRowId","row","pageSize","renderCell","params","whiteSpace","overflow","textOverflow","textDecoration","labels","datasets","backgroundColor","commentsCount","responsive","maintainAspectRatio","plugins","legend","number","getMonthName","commentsMonth","pointRadius","TOKEN_KEY","setToken","token","localStorage","setItem","login","disableButton","setDisableButton","submit","status","Grid","Paper","elevation","padding","Avatar","TextField","label","variant","fullWidth","Button","color","disabled","APIheaders","getItem","Admin","setUserComments","subscriptions","setSubscriptions","forceUpdate","fetchUserComments","fetchSubscriptions","putComment","newData","deleteComment","deleteSubscription","postCategory","deleteCategory","setWrittenPost","postPost","resetWrittenPost","putPost","deletePost","getWrittenPost","newPostSection","onKeyDown","keyCode","start","selectionStart","end","selectionEnd","marginTop","marginRight","editable","NoRowsOverlay","Stack","alignItems","justifyContent","Toolbar","GridToolbar","onCellEditCommit","Unsubscribe","setError","App","exact","path","component","Login","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3fa7d56d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__2r-lX\"};","// https://personalblog55.herokuapp.com/\r\n//https://localhost:7186/api/\r\nexport const prefixURLBackend = \"https://blog-rest-api99.herokuapp.com/api/\";","export default __webpack_public_path__ + \"static/media/defaultPostImage.30d33787.jpg\";","import React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nimport \"./Blog.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\nimport { prefixURLFrontend } from '../../Tools/PrefixURLFrontend/PrefixURLFrontend';\r\n\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nexport default function Blog()\r\n{\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory] = React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [searchedToken, setSearchedToken] = React.useState(\"\");\r\n\r\n    const isInitialMount = React.useRef(true);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(initialCategory!=\"All\")\r\n            hideSelectCategory();\r\n        else \r\n            fetchCategories();\r\n    }, []); //Only once time\r\n\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(isInitialMount.current)\r\n            return;\r\n        \r\n\r\n        posts.length = 0; //reset without render\r\n        if(page==1)\r\n            await fetchPosts();\r\n        else\r\n            setPage(1);\r\n\r\n    }, [selectedCategory]);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(isInitialMount.current)\r\n        {\r\n            isInitialMount.current = false;\r\n            return;\r\n        }\r\n\r\n        await fetchPosts();  \r\n    }, [page]);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        if(isInitialMount.current)\r\n            return;\r\n\r\n        const delay = setTimeout(() => \r\n        {\r\n            posts.length = 0; //clear without render\r\n            if(page==1)\r\n                fetchPosts();\r\n            else\r\n                setPage(1);\r\n        }, 800)\r\n    \r\n        return () => clearTimeout(delay)\r\n    }, [searchedToken])\r\n    \r\n\r\n    const fetchCategories=async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category\";\r\n\r\n        const response = await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const jsonArray = await response.json();\r\n                setCategories(jsonArray);\r\n            }\r\n            else\r\n                alert('Database connection error...');\r\n        }).catch(e => \r\n        {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    const printCategories=()=>\r\n    {\r\n        return(\r\n            <div className=\"displayCategoriesAndSearchBar\">\r\n                <select id=\"selectedCategory\" onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.nameOfCategory}>\r\n                                    {c.nameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n                \r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Search...\" onChange={(event)=>setSearchedToken(event.target.value)}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }; ////<i class=\"fa fa-search\"></i>\r\n\r\n    const fetchPosts=async()=>\r\n    {\r\n        setLoading(true);\r\n\r\n        let urlToFetch = prefixURLBackend + \"Post?pageSize=6&&pageNumber=\" + page + \"&&Contains=\" + searchedToken;\r\n        if(selectedCategory !== 'All')\r\n            urlToFetch += \"&&Category=\" + selectedCategory;\r\n\r\n        const response = await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const jsonArray = await response.json();\r\n                setPosts([...posts, ...jsonArray]);\r\n                \r\n                const pagesInfo = JSON.parse(response.headers.get(\"Paging-Headers\"));\r\n                if(pagesInfo.nextPage === 'No')\r\n                    hideMoreButton();\r\n                else\r\n                    showMoreButton(); \r\n            }\r\n            else\r\n                alert('Database connection error...');\r\n        }).catch(e => alert(e));\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const hideSelectCategory=()=>\r\n    {\r\n        const element=document.getElementById('selectedCategory');\r\n        if(element)\r\n            element.style.visibility = 'hidden';\r\n    };\r\n\r\n    const hideMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'none';\r\n    };\r\n\r\n    const showMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'inline-block';\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        if(posts.length>0)\r\n        {  \r\n            return( \r\n                <div>\r\n                    <div className=\"posts\">\r\n                    {\r\n                        posts.map((post)=>\r\n                        {\r\n                            return(\r\n                                <a className=\"postGrid\" href={prefixURLFrontend+\"post/\"+post.id.toString()+\"/\"+post.title.replace(\" \", \"%20\")}>\r\n                                    <img className=\"postGridImage\" src={post.coverPhotoLink} onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                                    <div className=\"postGridInformation\">\r\n                                        <h2 className=\"postGridTitle\">{post.title}</h2>\r\n                                        <p className=\"postGridCategory\">{\"Category: \"+post.category}</p>\r\n                                        <p className=\"postGridDate\">{convertStringDateTimezoneToClient(post.postDate)}</p>\r\n                                    </div>\r\n                                </a>\r\n                            );   \r\n                        })\r\n                    }\r\n                    </div>\r\n                    \r\n                    <div className=\"morePostsButtonArea\">\r\n                        <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                            onClick={()=>setPage(page+1)}>More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(loading)\r\n        {\r\n            return (\r\n                <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                    <FadeLoader/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return (\r\n                <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n            );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {printCategories()}\r\n            {printPosts()}\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n\r\n    const [post, setPost] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n    const [clientCountry, setClientCountry]=React.useState(\"Unknown\");\r\n\r\n    const [commentParentId, setCommentParentId] = React.useState(null);\r\n    const nicksByCommentId = {}\r\n\r\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchPost();\r\n        await fetchClientCountry();\r\n    }, []);\r\n\r\n    const fetchClientCountry=async()=>\r\n    {\r\n        //\"https://api.db-ip.com/v2/free/self\", \"https://api.ipify.org/?format=json\"\r\n        await fetch(\"http://ip-api.com/json\").then(async(response) =>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const info = await response.json();\r\n                console.log(info.country);\r\n                setClientCountry(info.country);\r\n            }\r\n        }).catch(error => console.log(error));\r\n    };\r\n\r\n    const fetchPost=async()=>\r\n    {\r\n        setIsLoading(true);\r\n\r\n        const urlToFetch = prefixURLBackend + \"Post/\" + urlID.toString();\r\n        await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const postJson = await response.json();\r\n                setPost(postJson);\r\n            }\r\n        }).catch(error => console.log(error));\r\n\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPost=()=>\r\n    {\r\n        return(\r\n            <div className=\"PostArea\">\r\n                <div className='postInfo' >\r\n                    <img alt='' className='postImage' src={post.coverPhotoLink} \r\n                        onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                        <div className='postHeaderText'>\r\n                            <h1 className='postTitleX' align='center'>{post.title}</h1>\r\n                            <h6 className='postDate' align='center'>{convertStringDateTimezoneToClient(post.postDate)}</h6>\r\n                        </div>\r\n                </div>\r\n                <br/>\r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}}\r\n                    remarkPlugins={[remarkMath]}\r\n                    children={post.content} className={style.reactMarkDown} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const printComments=()=>\r\n    {\r\n        return(\r\n            post.userComments?.map(parentComment=>\r\n            {\r\n                nicksByCommentId[parentComment.id] = parentComment.nick;\r\n\r\n                return(\r\n                    <div>\r\n                        <div className=\"userCommentArea\" id={parentComment.id.toString()}>\r\n                            <h4 className=\"userCommentNick\">{parentComment.nick}</h4>\r\n                            <p className=\"userCommentDate\">\r\n                            {\r\n                                convertStringDateTimezoneToClient(parentComment.commentDate)\r\n                            }\r\n                            </p>\r\n                            <p className=\"userCommentContent\">{parentComment.content}</p>\r\n                            <p className=\"userCommentReply\" onClick={()=>\r\n                                setCommentParentId((commentParentId !== parentComment.id) ? parentComment.id : null)}>\r\n                            {\r\n                                (commentParentId !== parentComment.id) ? \"Reply\" : \"Cancel reply\"\r\n                            }\r\n                            </p>\r\n                        </div>\r\n                        {\r\n                            (commentParentId !== parentComment.id) ? null : commentForm()\r\n                        }\r\n                        {\r\n                            parentComment.inverseParent.map(childComment =>\r\n                            {\r\n                                nicksByCommentId[childComment.id] = childComment.nick;\r\n                                \r\n                                return(\r\n                                    <div>\r\n                                        <div className={\"userCommentArea childUserCommentArea\"} id={childComment.id.toString()}>\r\n                                            <h4 className=\"userCommentNick\">{childComment.nick}</h4>\r\n                                            <p className=\"userCommentDate\">\r\n                                            {\r\n                                                convertStringDateTimezoneToClient(childComment.commentDate)\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentContent\">\r\n                                            <b>{(parentComment.id == childComment.parentId) ? \"\" : \"@\"+nicksByCommentId[childComment.parentId]}</b>\r\n                                            {\r\n                                                \" \"+childComment.content\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentReply\" onClick={()=>\r\n                                                setCommentParentId((commentParentId !== childComment.id) ? \r\n                                                    childComment.id : null)}>\r\n                                            {   \r\n                                                (commentParentId !== childComment.id) ? \"Reply\" : \"Cancel reply\"\r\n                                            }\r\n                                            </p>\r\n                                        </div>\r\n                                        {\r\n                                            (commentParentId !== childComment.id) ? null : commentForm()\r\n                                        }\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    const scrollToComment = (commentId) => \r\n    {\r\n        const yOffset = -50; \r\n        const element = document.getElementById(commentId.toString());\r\n        const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n\r\n        window.scrollTo({top: y, behavior: 'smooth'});\r\n    }\r\n    \r\n    const postComment=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        \r\n        const comment = \r\n        {\r\n            postId: parseInt(urlID),\r\n            parentId: commentParentId,\r\n            nick: document.getElementById(\"nick\").value,\r\n            content: document.getElementById(\"content\").value,\r\n            country: clientCountry,\r\n            email: document.getElementById(\"email\").value,\r\n            notifyReply: document.getElementById(\"reply\").checked ? 1 : 0,\r\n        };\r\n\r\n        const urlToFetch = prefixURLBackend + \"UserComment\";\r\n        await fetch((urlToFetch), \r\n            {method: \"POST\", body: JSON.stringify(comment), \r\n            headers: {'Content-Type': \"application/json\"}}).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const addedComment = await response.json();\r\n                nicksByCommentId[addedComment.id] = addedComment.nick;\r\n                \r\n                var added = false;\r\n                post.userComments.map((parentComment)=>\r\n                {\r\n                    if(parentComment.id === addedComment.parentId)\r\n                    {\r\n                        parentComment.inverseParent.push(addedComment);\r\n                        added = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        parentComment.inverseParent.map((childComment)=>\r\n                        {\r\n                            if(childComment.id === addedComment.parentId)\r\n                            {\r\n                                parentComment.inverseParent.push(addedComment);\r\n                                added = true;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                if(!added)\r\n                    post.userComments.push(addedComment);\r\n\r\n                setCommentParentId(-1);\r\n                setCommentParentId(null);\r\n                while(document.getElementById(addedComment.id.toString()) == null) ;\r\n                scrollToComment(addedComment.id);\r\n                \r\n            }\r\n            else\r\n                console.log(await response.text());\r\n        }).catch(e => alert(e));     \r\n    };\r\n    \r\n\r\n    const commentForm = ()=>\r\n    {\r\n        return (\r\n            <form onSubmit={(e)=>postComment(e)} className=\"commuserCommentAreaentsForm\">\r\n                <label className=\"commentInputLabel\">Nick</label>\r\n                <input className=\"nickInput\" id=\"nick\" type=\"text\" placeholder=\"Enter a nick...\" \r\n                    autoComplete=\"off\" required={true} minLength={3}/>\r\n\r\n                <label className=\"commentInputLabel\">Email</label>\r\n                <input className=\"emailInput\" id=\"email\" type=\"email\" placeholder=\"Enter a valid email...\" \r\n                    autoComplete=\"off\" minLength={6} required={true}/>\r\n                \r\n                <label className=\"commentInputLabel\">Comment</label>\r\n                <input className=\"commentInput\" id=\"content\" type=\"text\" placeholder=\"Enter your comment...\" \r\n                    autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>           \r\n\r\n                <input className=\"commentPostButton\" name=\"Submit\" id=\"submit\" type=\"submit\" value=\"Post\" />\r\n\r\n                <input className=\"replyInputInput\" id=\"reply\" type=\"checkbox\"/>\r\n                <label className=\"commentInputLabel\">Notify to email replies</label> <br/><br/>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    const printCommentsSection = ()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\">\r\n                {\r\n                    (commentParentId != null) ? null : commentForm()\r\n                }\r\n                <div className=\"usersCommentsArea\">{printComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(post != null)\r\n    {\r\n        return(\r\n            <div >\r\n                <div>{printPost()}{printCommentsSection()}</div>\r\n            </div>\r\n        ); \r\n    }\r\n\r\n    if(isLoading)\r\n    {\r\n        return (\r\n            <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader/>\r\n            </div>\r\n        );\r\n    }\r\n      \r\n\r\n    return (\r\n        <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n    );\r\n\r\n}","export default __webpack_public_path__ + \"static/media/personAndGuitar.24374079.jpg\";","import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\nimport logo from '../../Tools/Images/personAndGuitar.jpg';\r\n\r\nimport { prefixURLBackend } from '../PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    async function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n                break;\r\n\r\n            case \"subscribe\":\r\n                const email=prompt(\"Please enter the email to which you want to receive notifications about new posts:\");\r\n\r\n                if(email==null)\r\n                    return;\r\n\r\n                const subscription = {Email: email};\r\n\r\n                const urlToFetch = prefixURLBackend + \"SuscribedEmail\";\r\n                await fetch((urlToFetch), {method: \"POST\", headers: {'Content-Type': \"application/json\"},\r\n                    body: JSON.stringify(subscription) }).then(async(response)=>\r\n                {\r\n                    if(response.ok)\r\n                    {\r\n                        alert('Subscribed!');\r\n                    }\r\n                    else\r\n                        alert(await response.text());\r\n                }).catch(e => alert(e));     \r\n\r\n                break;\r\n\r\n            case \"statistics\" :\r\n                history.push(\"/statistics\");\r\n                break;  \r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src={logo}/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n     \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"subscribe\")}}>\r\n                                Subscribe\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"statistics\")}}>\r\n                                Statistics\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/taza.1fa020a4.jpg\";","import Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\n\r\nimport logo from './taza.jpg';\r\n\r\nimport \"./About.css\";\r\n\r\nexport default function About()\r\n{\r\n    return(\r\n        <div className=\"aboutArea\">\r\n            <img className=\"aboutPic\" src={logo}/>\r\n            <br/>\r\n            <span >\r\n                Welcome to my mind! This is my personal space. Here I write any experience, thought or thing that I have just learned.\r\n                <br/>\r\n                <br/>\r\n                I am a Spanish, I was born in 1999 and I study computer engineering at Ege University located in Turkey. I love to learn new things, work hard, play the guitar and socialize with foreigners.\r\n            </span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Pie, Line} from \"react-chartjs-2\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport \"./Statistics.css\";\r\n\r\nfunction getMonthName(number)\r\n{\r\n    switch(number)\r\n    {\r\n        case 1:\r\n            return \"January\";\r\n        case 2:\r\n            return \"Frebruary\";\r\n        case 3:\r\n            return \"March\";\r\n        case 4:\r\n            return \"April\";\r\n        case 5:\r\n            return \"May\";\r\n        case 6:\r\n            return \"June\";\r\n        case 7:\r\n            return \"July\";\r\n        case 8:\r\n            return \"August\";\r\n        case 9:\r\n            return \"September\";\r\n        case 10:\r\n            return \"October\";\r\n        case 11:\r\n            return \"November\";\r\n        default:\r\n            return \"December\";\r\n    };\r\n};\r\n\r\nfunction getLoopColorsByLength(len)\r\n{\r\n    const colors=[\"red\", \"blue\", \"yellow\", \"orange\", \"brown\", \"pink\", \"purple\"];\r\n    let temp=0;\r\n\r\n    while(colors.length<len)\r\n    {\r\n        colors.push(colors[(temp++)%colors.length]);\r\n    }\r\n\r\n    return colors;\r\n};\r\n\r\nexport default function Statistics()\r\n{\r\n    const [statistics, setStatistics] = React.useState(\r\n        {\r\n            countriesOfComments: [], \r\n            numberOfCommentsPerMonth: [],\r\n            topCommentersNicks: [],\r\n            topCommentedPosts: [],\r\n        }); \r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchStatistics();\r\n    }, []);\r\n\r\n    const fetchStatistics = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Statistics\";\r\n        await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const data = await response.json();\r\n                setStatistics(data);\r\n            }\r\n            else\r\n                console.log(response.text);\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    return(\r\n        <div >\r\n            <center><h3>Top Commenters Nicks</h3></center>\r\n            <div style={{ height: 370, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"nick\", headerName:\"Nick\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                        {field:\"commentsCount\", headerName:\"Comments Count\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                    ]}\r\n                \r\n                    rows={statistics.topCommentersNicks}\r\n                    getRowId={(row) => row.nick}\r\n                    pageSize={5}\r\n                />\r\n            </div>\r\n\r\n            <center><h3>Top Commented Posts</h3></center>\r\n            <div style={{ height: 370, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"title\", headerName:\"Title\", flex:1, sortable:false, disableColumnMenu:true, renderCell:(params)=>\r\n                        (\r\n                            <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\",\r\n                                textDecoration: \"none\"}\r\n                                }\r\n                                href={\"http://localhost:3001/#/\" + \"post/\" + params.id + \"/\" + params.value}>{params.value}</a>\r\n                        )},\r\n                        {field:\"commentsCount\", headerName:\"Comments Count\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                    ]}\r\n                \r\n                    rows={statistics.topCommentedPosts}\r\n                    getRowId={(row) => row.id}\r\n                    pageSize={5}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"chartArea\">\r\n                <Pie data=\r\n                    {{\r\n                        labels: statistics.countriesOfComments.map(info => info.country),\r\n                        datasets: \r\n                        [{\r\n                            backgroundColor: getLoopColorsByLength(statistics.countriesOfComments.length),\r\n                            data: statistics.countriesOfComments.map(info => info.commentsCount), \r\n                        }]\r\n                    }} \r\n                    \r\n                    options=\r\n                    {{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        plugins:\r\n                        {\r\n                            legend:{display:false},\r\n                            title:{text:\"Countries of Comments\", display:true}\r\n                        }\r\n                    }}\r\n                height={290}/>\r\n            </div> \r\n\r\n            <div className=\"chartArea\">\r\n                <Line data=\r\n                    {{\r\n                        labels: statistics.numberOfCommentsPerMonth.map(info => getMonthName(info.commentsMonth)),\r\n                        datasets: \r\n                        [{\r\n                            backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                            data: statistics.numberOfCommentsPerMonth.map(info => info.commentsCount), \r\n                            pointRadius: 8\r\n                        }]\r\n                    }} \r\n                    options=\r\n                    {{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        plugins:\r\n                        {\r\n                            legend:{display:false},\r\n                            title:{text:\"Months of Comments Counts\", display:true}\r\n                        }\r\n                    }}\r\n                    height={290}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","const TOKEN_KEY=\"Authorization\";\r\n\r\nexport function setToken(token)\r\n{\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport function getToken()\r\n{\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function deleteToken()\r\n{\r\n  localStorage.removeItem(TOKEN_KEY);\r\n}","import React from 'react';\r\n\r\nimport {Paper, Grid, Avatar, TextField, Button} from '@mui/material';\r\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\r\nimport { getToken, setToken } from '../../Tools/auth-helper';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function login()\r\n{\r\n    const [disableButton, setDisableButton] = React.useState(false);\r\n    const history=useHistory();\r\n\r\n    const submit=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        setDisableButton(true);\r\n\r\n        const data = {\r\n            \"adminUsername\": document.getElementById(\"adminUsername\").value,\r\n            \"adminPassword\": document.getElementById(\"adminPassword\").value,\r\n        };\r\n\r\n        const urlToFetch = prefixURLBackend + \"BlogAdmin/Authenticate\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(async(response) => await response.text().then(token=>\r\n        {\r\n            if(response.status != 200) \r\n                alert(\"User does not exist...\");\r\n            else if(response.status == 200)\r\n            {   \r\n                setToken(\"Bearer \"+token);\r\n                setTimeout(function(){\r\n                    history.push(\"/admin\");\r\n                }, 600);\r\n            }\r\n            else\r\n                console.log(response);\r\n        })).catch(e => alert('Database connection error...'));\r\n        \r\n        setDisableButton(false);\r\n    }\r\n\r\n    const paperStyle=\r\n    {\r\n        padding: \"30px\", \r\n        height: \"380px\", \r\n        width: \"50%\", \r\n        margin: \"100px auto\"\r\n    };\r\n    const avatarStyle=\r\n    {\r\n        backgroundColor: \"#1bbd7e\"\r\n    };\r\n    const usernameTexFieldStyle = \r\n    {\r\n        marginBottom: \"10px\"\r\n    };\r\n    const passwordTexFieldStyle = \r\n    {\r\n        marginBottom: \"35px\"\r\n    };\r\n\r\n    return(\r\n        <div className=\"mainDiv\">\r\n            <Grid>\r\n                <Paper elevation={12} style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}>\r\n                            <LockOpenIcon/>\r\n                        </Avatar>\r\n                        <h2>Login</h2>\r\n                    </Grid>\r\n\r\n                    <form onSubmit={(e)=>submit(e)} autoComplete=\"off\">\r\n                        <TextField id='adminUsername' label='Username' placeholder=\"Enter username\" variant=\"standard\" \r\n                            style={usernameTexFieldStyle} fullWidth autoComplete='off' required/>\r\n                        <TextField id=\"adminPassword\" label=\"Password\" placeholder=\"Enter password\" type=\"password\" \r\n                            variant=\"standard\" style={passwordTexFieldStyle} fullWidth autoComplete='off' required/>\r\n\r\n                        <Button type='submit' color='primary' variant=\"contained\" disabled={disableButton} fullWidth>\r\n                            Sign in\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport {Button, Stack} from '@mui/material';\r\nimport { DataGrid, GridToolbar} from '@mui/x-data-grid';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { getToken, deleteToken } from '../../Tools/auth-helper';\r\n\r\nimport \"./Admin.css\";\r\n\r\nconst APIheaders = {\r\n    'Content-Type': \"application/json\",\r\n    'Authorization': getToken()\r\n};\r\n\r\nfunction convertStringDateTimezoneToClient(stringDate)\r\n{\r\n    const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n    if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n    {\r\n        return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n            day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n            hour12: false });\r\n    }\r\n\r\n    //Prevent invalid date, return actual client date\r\n    return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n        hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n};\r\n\r\nexport default function Admin()\r\n{\r\n    const [userComments, setUserComments] = React.useState([]);\r\n    const [subscriptions, setSubscriptions] = React.useState([]);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchUserComments();\r\n        await fetchSubscriptions();\r\n        await fetchCategories();\r\n        await fetchPosts();\r\n    }, []);\r\n\r\n    const fetchUserComments = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"UserComment\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                setUserComments(json);\r\n            }\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const fetchSubscriptions = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"SuscribedEmail\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response) =>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                setSubscriptions(json);\r\n            }\r\n        }).catch(e => alert(e));\r\n    }\r\n\r\n    const fetchCategories = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response) =>\r\n        { \r\n            await response.json().then(json => setCategories(json))\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const fetchPosts = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            await response.json().then(json => setPosts(json))\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const putComment= async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(row)\r\n            row[newData.field]=newData.value;\r\n\r\n        const urlToFetch = prefixURLBackend + \"UserComment\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"PUT\",\r\n            headers: APIheaders,\r\n            'Content-Type': \"application/json\",\r\n            body: JSON.stringify(row)\r\n        }).then(async(response)=>\r\n        {    \r\n            if(!response.ok)\r\n            {    \r\n                alert(\"HTTP Code: \" + response.status);\r\n\r\n                //hacerlo manual proximamente\r\n                fetchUserComments();\r\n            }\r\n        }).catch(e => alert(e));  \r\n    };\r\n\r\n    const deleteComment=async(id)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"UserComment/\" + id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchUserComments();\r\n                fetchPosts();\r\n            }\r\n        }).catch(e => alert(e));      \r\n    };\r\n\r\n    const commentsSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 585, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"postTitle\", headerName:\"Title of Post\", flex:1, renderCell:(params)=>\r\n                            (\r\n                                <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\",\r\n                                    textDecoration: \"none\"}\r\n                                    }\r\n                                    href={\"http://localhost:3001/#/\" + \"post/\" + params.row.postId + \"/\" + params.value}>{params.value}</a>\r\n                            )},\r\n                        {field:\"nick\", headerName:\"Nick\", editable:true, flex:1},\r\n                        {field:\"content\", headerName:\"Content\", editable:true, flex:1,},\r\n                        {field:\"email\", headerName:\"Email\", editable:true, flex:1},\r\n                        {field:\"notifyReply\", headerName:\"Notify\", editable:true, flex:0.4 },\r\n                        {field:\"country\", headerName:\"Country\", flex:0.7},\r\n                        {field:\"commentDate\", headerName:\"Date\", flex:1, \r\n                            renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                        {field: \"action\", headerName:\"Action\", flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteComment(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={userComments}\r\n                    components={{\r\n                        NoRowsOverlay: () => \r\n                            ( \r\n                                <Stack height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n                                    Session expired...\r\n                                </Stack>\r\n                            ),\r\n                        Toolbar: GridToolbar \r\n                    }}\r\n                    getRowId={(row) => row.id}\r\n                    pageSize={8}\r\n                    onCellEditCommit={putComment}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const deleteSubscription=async(email)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"SuscribedEmail/\" + email;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchSubscriptions();\r\n            }\r\n        }).catch(e => alert(e));      \r\n    };\r\n\r\n    const subscriptionsSection = ()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 585, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"email\", headerName:\"Email\", flex:1},\r\n                        {field:\"subscriptionDate\", headerName:\"Date\", flex:1, \r\n                            renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                        {field: \"action\", headerName:\"Action\", flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteSubscription(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={subscriptions}\r\n                    components={{\r\n                        NoRowsOverlay: () => \r\n                            ( \r\n                                <Stack height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n                                    Session expired...\r\n                                </Stack>\r\n                            ),\r\n                        Toolbar: GridToolbar \r\n                    }}\r\n                    getRowId={(row) => row.email}\r\n                    pageSize={8}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const postCategory=async(nameOfCategory)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: APIheaders,\r\n            body: \"\\\"\"+nameOfCategory+\"\\\"\",\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                document.getElementById(\"NewCategory\").value=\"\";\r\n            }\r\n            else\r\n                alert(\"HTTP Code: \" + response.status);\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const deleteCategory=async(nameOfCategory)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category/\" + nameOfCategory;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchCategories();\r\n                fetchPosts();\r\n            }\r\n        }).catch(e => alert(e));   \r\n    };\r\n\r\n    const categoriesSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 370, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"nameOfCategory\", headerName:\"Name\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"count\", headerName:\"Number of Posts\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (info.id == 'Projects' || info.id == 'Private') ? null : \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteCategory(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={categories}\r\n                    getRowId={(row) => row.nameOfCategory}\r\n                    pageSize={4}\r\n                    //onCellEditCommit={updatedCategory}\r\n                    components={{Toolbar: GridToolbar}}\r\n                    />\r\n\r\n                    <label>New: </label>\r\n                    <input type=\"text\" id=\"NewCategory\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() => postCategory(document.getElementById(\"NewCategory\").value)}\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const fetchPost=async(id)=>\r\n    {\r\n        const urlToFetch=prefixURLBackend + \"Post/\" + id.toString();\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                await response.json().then(json =>\r\n                { \r\n                    setWrittenPost(json);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const postPost = async(post) =>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: APIheaders,\r\n            body: JSON.stringify(post),\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                fetchPosts();\r\n                resetWrittenPost();\r\n            }\r\n            else if(response.status != 500)\r\n                alert(\"HTTP Code: \" + response.status);\r\n            else \r\n                alert(\"Notifications error or server error!\")\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const putPost=async(post)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post/\" + post.id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"PUT\",\r\n            headers: APIheaders,\r\n            body: JSON.stringify(post),\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                fetchPosts();\r\n                resetWrittenPost();\r\n            }\r\n            else\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n        }).catch(e => alert(\"a\"));\r\n    }\r\n\r\n    const deletePost=async(id)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post/\" + id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchPosts();\r\n                fetchCategories();\r\n                fetchUserComments();\r\n            }\r\n        }).catch(e => alert(e)); \r\n    };\r\n\r\n    const getWrittenPost = () =>\r\n    {\r\n        const post = \r\n        {\r\n            id: document.getElementById(\"id\").value,\r\n            title: document.getElementById(\"title\").value,\r\n            content: document.getElementById(\"content\").value,\r\n            postDate: document.getElementById(\"postDate\").value,\r\n            category: document.getElementById(\"category\").value,\r\n            coverPhotoLink: document.getElementById(\"coverPhotoLink\").value,\r\n        };\r\n\r\n        return post;\r\n    }\r\n\r\n    const setWrittenPost = (json) =>\r\n    {\r\n        document.getElementById(\"id\").value=json.id;\r\n        document.getElementById(\"title\").value = json.title;\r\n        document.getElementById(\"content\").value = json.content;\r\n        document.getElementById(\"postDate\").value = json.postDate.replace(\" \", \"T\");\r\n        document.getElementById(\"category\").value = json.category;\r\n        document.getElementById(\"coverPhotoLink\").value = json.coverPhotoLink;\r\n    };\r\n\r\n    const resetWrittenPost = () =>\r\n    {\r\n        document.getElementById(\"id\").value = '';\r\n        document.getElementById(\"title\").value = '';\r\n        document.getElementById(\"content\").value = '';\r\n        document.getElementById(\"postDate\").value = '';\r\n        document.getElementById(\"category\").value = '';\r\n        document.getElementById(\"coverPhotoLink\").value = '';\r\n    };\r\n\r\n    const postsSection=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div style={{ height: 570, width: '100%', marginBottom:\"60px\", }}>\r\n                    <DataGrid \r\n                        columns={\r\n                        [\r\n                            {field:\"title\", headerName:\"Title\", sortable:false, disableColumnMenu:true, flex:1, \r\n                                renderCell:(params)=>\r\n                                (\r\n                                    <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", \r\n                                        textOverflow: \"ellipsis\", textDecoration: \"none\"}}\r\n                                        href={\"http://localhost:3001/#/\" + \"post/\" + params.id + \"/\" + params.value}>\r\n                                    {params.value}\r\n                                    </a>\r\n                                )},\r\n                            {field:\"category\", headerName:\"Category\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"postDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                            {field:\"commentsCount\", headerName:\"Number of Comments\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (info) => \r\n                                (\r\n                                    <>\r\n                                        <Button\r\n                                            style={{\r\n                                                backgroundColor: \"#ffcc00\",\r\n                                                width:\"48%\",\r\n                                                marginRight: \"4%\",\r\n                                                padding: \"3px 35px\"\r\n                                            }}\r\n                                            onClick={() => fetchPost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Edit\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#e8605d\",\r\n                                            width:\"48%\",\r\n                                            padding: \"3px 35px\",\r\n                                            }}\r\n\r\n                                            onClick={() => deletePost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Delete\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        ]}\r\n                        rows={posts}\r\n                        getRowId={(row) => row.id}\r\n                        pageSize={8}\r\n                        components={{Toolbar: GridToolbar}}\r\n                        />  \r\n                </div>\r\n                {newPostSection()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const newPostSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"markdownEditor\">\r\n                <label >ID: </label>\r\n                <input className=\"IDLabel\" type=\"number\" id=\"id\" disabled/>\r\n                <button onClick={() => document.getElementById(\"id\").value = null }>Set NULL For New Post</button>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Title: </label>\r\n                <input type=\"text\" id=\"title\" />\r\n                <div className=\"break\"/>\r\n\r\n                <label>Date: </label>\r\n                <input type=\"datetime-local\" id=\"postDate\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Category: </label>\r\n                <select id=\"category\" >\r\n                {\r\n                    categories.map( c=>\r\n                    {\r\n                        return(\r\n                            <option value={c.nameOfCategory}>\r\n                                {c.nameOfCategory}\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n                </select>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Cover Link: </label>\r\n                <input type=\"text\" id=\"coverPhotoLink\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <textarea className=\"textArea\" id=\"content\" \r\n                    onKeyDown={(e)=>\r\n                    {\r\n                        if(e.keyCode == 9) \r\n                        { \r\n                            e.preventDefault();\r\n\r\n                            const element=document.getElementById(\"content\");\r\n\r\n                            const start = element.selectionStart;\r\n                            const end = element.selectionEnd;\r\n\r\n                            element.value = element.value.substring(0, start) + \"\\t\" + element.value.substring(end);\r\n\r\n                            element.selectionStart = element.selectionEnd = start + 1;\r\n                        }\r\n                    }}\r\n                />\r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}} \r\n                    remarkPlugins={[remarkMath]}\r\n                    children={document.getElementById(\"content\")?.value} \r\n                    className={\"markdown\"} />\r\n                <div className=\"break\"/>\r\n\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#000000\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    marginRight:\"7px\"\r\n                    }}\r\n                    onClick={()=>{forceUpdate();}}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Review\r\n                </Button>\r\n                <Button\r\n                    style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"6%\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"7px\",\r\n                    }}\r\n                    onClick={()=>\r\n                    {\r\n                        if(document.getElementById(\"id\").value == '')\r\n                            postPost(getWrittenPost()); \r\n                        else\r\n                            putPost(getWrittenPost()); \r\n                    }}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Post\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"adminScreen\">\r\n            {commentsSection()}\r\n            {subscriptionsSection()}\r\n            {categoriesSection()}\r\n            {postsSection()}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Unsubscribe()\r\n{\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const suffixUrl = useLocation().pathname;\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const email=informationUrl[2];\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await deleteSubscription(email);\r\n    }, []);\r\n\r\n    const deleteSubscription=async(email)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"SuscribedEmail/\" + email;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n                setError(true);\r\n            setLoading(false);\r\n        }).catch(e => alert(e));\r\n    }\r\n\r\n    if(error)\r\n    {\r\n        return(\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">The email does not exist...</h6>\r\n        ); \r\n    }\r\n\r\n    if(loading)\r\n    {\r\n        return (\r\n            <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Unsubscribed :(</h6>\r\n    );\r\n}","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport About from \"./Pages/About/About\";\nimport Statistics from \"./Pages/Statistics/Statistics\";\nimport Login from \"./Pages/Admin/Login\";\nimport Admin from \"./Pages/Admin/Admin\";\nimport Unsubscribe from \"./Pages/Unsubscribe/Unsubscribe\";\n\nimport Header from \"./Tools/Header/Header\";\nimport Footer from \"./Tools/Footer/Footer\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n  <div className=\"mainScreen\">\n    <HashRouter >\n      <Header/>\n      \n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n      <Route exact path=\"/statistics\" component={Statistics}/>\n      <Route exact path=\"/login\" component={Login}/>\n      <Route exact path=\"/admin\" component={Admin}/>\n      <Route exact path=\"/unsubscribe/:email\" component={Unsubscribe}/>\n\n      <Footer/>\n    </HashRouter>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}