{"version":3,"sources":["Pages/Post/markdown-styles.module.css","Tools/PrefixURLBackend/PrefixURLBackend.js","Tools/PrefixURLFrontend/PrefixURLFrontend.js","Tools/Images/defaultPostImage.jpg","Pages/Blog/Blog.js","Pages/Post/Post.js","Tools/Images/personAndGuitar.jpg","Tools/Header/Header.js","Tools/Footer/Footer.js","Pages/About/taza.jpg","Pages/About/About.js","Pages/Statistics/Statistics.js","Tools/auth-helper.js","Pages/Admin/Login.js","Pages/Admin/Admin.js","Pages/Unsubscribe/Unsubscribe.js","App.js","index.js"],"names":["module","exports","prefixURLBackend","prefixURLFrontend","Blog","initialCategory","useLocation","pathname","React","useState","selectedCategory","setSelectedCategory","categories","setCategories","posts","setPosts","page","setPage","loading","setLoading","searchedToken","setSearchedToken","isInitialMount","useRef","useEffect","a","hideSelectCategory","fetchCategories","current","length","fetchPosts","delay","setTimeout","clearTimeout","fetch","then","response","ok","json","jsonArray","alert","catch","e","console","log","urlToFetch","JSON","parse","headers","get","nextPage","hideMoreButton","showMoreButton","updateSelectedCategory","selected","document","getElementById","value","options","selectedIndex","element","style","visibility","display","convertStringDateTimezoneToClient","stringDate","serverDate","Date","replace","toString","localeCompare","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","className","id","onChange","map","c","nameOfCategory","type","placeholder","event","target","post","href","title","src","coverPhotoLink","onError","currentTarget","onerror","defaultImage","category","postDate","onClick","margin","textAlign","fontSize","fontWeight","align","Post","urlID","split","setPost","isLoading","setIsLoading","clientCountry","setClientCountry","commentParentId","setCommentParentId","nicksByCommentId","useReducer","x","fetchPost","fetchClientCountry","info","country_name","error","postJson","markdownCodeThemeComponent","props","railscasts","language","substring","children","subscriptionMessage","setSubscriptionMessage","subscriptionButtonMessage","setSubscriptionButtonMessage","postSubscription","email","method","body","stringify","classList","add","text","reportValidity","printComments","userComments","parentComment","nick","commentDate","content","commentForm","inverseParent","childComment","parentId","scrollToComment","commentId","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","postComment","preventDefault","comment","postId","parseInt","country","notifyReply","checked","addedComment","added","push","onSubmit","autoComplete","required","minLength","maxLength","name","width","alt","rehypePlugins","rehypeRaw","remarkGfm","rehypeKatex","components","code","remarkPlugins","remarkMath","reactMarkDown","class","onKeyPress","Header","history","useHistory","redirect","logo","Footer","About","getLoopColorsByLength","len","colors","temp","Statistics","countriesOfComments","numberOfCommentsPerMonth","topCommentersNicks","topCommentedPosts","statistics","setStatistics","fetchStatistics","data","height","marginBottom","columns","field","headerName","flex","sortable","disableColumnMenu","rows","getRowId","row","pageSize","renderCell","params","whiteSpace","overflow","textOverflow","textDecoration","labels","datasets","backgroundColor","commentsCount","responsive","maintainAspectRatio","plugins","legend","number","getMonthName","commentsMonth","pointRadius","TOKEN_KEY","setToken","token","localStorage","setItem","login","disableButton","setDisableButton","submit","status","removeItem","Grid","Paper","elevation","padding","Avatar","TextField","label","variant","fullWidth","Button","color","disabled","Admin","setUserComments","subscriptions","setSubscriptions","forceUpdate","fetchUserComments","fetchSubscriptions","APIheaders","getItem","putComment","newData","deleteComment","deleteSubscription","postCategory","deleteCategory","setWrittenPost","postPost","resetWrittenPost","putPost","deletePost","getWrittenPost","newPostSection","onKeyDown","keyCode","start","selectionStart","end","selectionEnd","marginTop","marginRight","editable","NoRowsOverlay","Stack","alignItems","justifyContent","Toolbar","GridToolbar","onCellEditCommit","Unsubscribe","setError","App","exact","path","component","Login","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c4e54a9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__2r-lX\"};","// https://personalblog55.herokuapp.com/\r\n//https://localhost:7186/api/\r\nexport const prefixURLBackend = \"https://blog-rest-api99.herokuapp.com/api/\";","//http://localhost:3001/#/\r\n//https://andresrodriguez55.github.io/#/\r\nexport const prefixURLFrontend =\"https://andresrodriguez55.github.io/#/\";","export default __webpack_public_path__ + \"static/media/defaultPostImage.30d33787.jpg\";","import React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nimport \"./Blog.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\nimport { prefixURLFrontend } from '../../Tools/PrefixURLFrontend/PrefixURLFrontend';\r\n\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nexport default function Blog()\r\n{\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory] = React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [searchedToken, setSearchedToken] = React.useState(\"\");\r\n\r\n    const isInitialMount = React.useRef(true);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(initialCategory!=\"All\")\r\n            hideSelectCategory();\r\n        else \r\n            fetchCategories();\r\n    }, []); //Only once time\r\n\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(isInitialMount.current)\r\n            return;\r\n        \r\n\r\n        posts.length = 0; //reset without render\r\n        if(page==1)\r\n            await fetchPosts();\r\n        else\r\n            setPage(1);\r\n\r\n    }, [selectedCategory]);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(isInitialMount.current)\r\n        {\r\n            isInitialMount.current = false;\r\n            return;\r\n        }\r\n\r\n        await fetchPosts();  \r\n    }, [page]);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        if(isInitialMount.current)\r\n            return;\r\n\r\n        const delay = setTimeout(() => \r\n        {\r\n            posts.length = 0; //clear without render\r\n            if(page==1)\r\n                fetchPosts();\r\n            else\r\n                setPage(1);\r\n        }, 800)\r\n    \r\n        return () => clearTimeout(delay)\r\n    }, [searchedToken])\r\n    \r\n\r\n    const fetchCategories=async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category\";\r\n\r\n        const response = await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const jsonArray = await response.json();\r\n                setCategories(jsonArray);\r\n            }\r\n            else\r\n                alert('Database connection error...');\r\n        }).catch(e => \r\n        {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    const printCategories=()=>\r\n    {\r\n        return(\r\n            <div className=\"displayCategoriesAndSearchBar\">\r\n                <select id=\"selectedCategory\" onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.nameOfCategory}>\r\n                                    {c.nameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n                \r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Search...\" onChange={(event)=>setSearchedToken(event.target.value)}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }; ////<i class=\"fa fa-search\"></i>\r\n\r\n    const fetchPosts=async()=>\r\n    {\r\n        setLoading(true);\r\n\r\n        let urlToFetch = prefixURLBackend + \"Post?pageSize=6&&pageNumber=\" + page + \"&&Contains=\" + searchedToken;\r\n        if(selectedCategory !== 'All')\r\n            urlToFetch += \"&&Category=\" + selectedCategory;\r\n\r\n        const response = await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const jsonArray = await response.json();\r\n                setPosts([...posts, ...jsonArray]);\r\n                \r\n                const pagesInfo = JSON.parse(response.headers.get(\"Paging-Headers\"));\r\n                if(pagesInfo.nextPage === 'No')\r\n                    hideMoreButton();\r\n                else\r\n                    showMoreButton(); \r\n            }\r\n            else\r\n                alert('Database connection error...');\r\n        }).catch(e => alert(e));\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const hideSelectCategory=()=>\r\n    {\r\n        const element=document.getElementById('selectedCategory');\r\n        if(element)\r\n            element.style.visibility = 'hidden';\r\n    };\r\n\r\n    const hideMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'none';\r\n    };\r\n\r\n    const showMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'inline-block';\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        if(posts.length>0)\r\n        {  \r\n            return( \r\n                <div>\r\n                    <div className=\"posts\">\r\n                    {\r\n                        posts.map((post)=>\r\n                        {\r\n                            return(\r\n                                <a className=\"postGrid\" href={prefixURLFrontend+\"post/\"+post.id.toString()+\"/\"+post.title.replace(\" \", \"%20\")}>\r\n                                    <img className=\"postGridImage\" src={post.coverPhotoLink} onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                                    <div className=\"postGridInformation\">\r\n                                        <h2 className=\"postGridTitle\">{post.title}</h2>\r\n                                        <p className=\"postGridCategory\">{\"Category: \"+post.category}</p>\r\n                                        <p className=\"postGridDate\">{convertStringDateTimezoneToClient(post.postDate)}</p>\r\n                                    </div>\r\n                                </a>\r\n                            );   \r\n                        })\r\n                    }\r\n                    </div>\r\n                    \r\n                    <div className=\"morePostsButtonArea\">\r\n                        <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                            onClick={()=>setPage(page+1)}>More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(loading)\r\n        {\r\n            return (\r\n                <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                    <FadeLoader />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return (\r\n                <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n            );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {printCategories()}\r\n            {printPosts()}\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nimport {TextField, Paper, Typography} from '@mui/material/';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n\r\n    const [post, setPost] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n    const [clientCountry, setClientCountry]=React.useState(\"Unknown\");\r\n\r\n    const [commentParentId, setCommentParentId] = React.useState(null);\r\n    const nicksByCommentId = {}\r\n\r\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchPost();\r\n        await fetchClientCountry();\r\n    }, []);\r\n\r\n    const fetchClientCountry=async()=>\r\n    {\r\n        await fetch(\"https://ipapi.co/json/\").then(async(response) =>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const info = await response.json();\r\n                setClientCountry(info.country_name);\r\n            }\r\n        }).catch(error => console.log(error));\r\n    };\r\n\r\n    const fetchPost=async()=>\r\n    {\r\n        setIsLoading(true);\r\n\r\n        const urlToFetch = prefixURLBackend + \"Post/\" + urlID.toString();\r\n        await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const postJson = await response.json();\r\n                setPost(postJson);\r\n            }\r\n        }).catch(error => console.log(error));\r\n\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPost=()=>\r\n    {\r\n        return(\r\n            <div className=\"PostArea\">\r\n                <div className='postInfo' >\r\n                    <img alt='' className='postImage' src={post.coverPhotoLink} \r\n                        onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                        <div className='postHeaderText'>\r\n                            <h1 className='postTitleX' align='center'>{post.title}</h1>\r\n                            <h6 className='postDate' align='center'>{convertStringDateTimezoneToClient(post.postDate)}</h6>\r\n                        </div>\r\n                </div>\r\n                <br/>\r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}}\r\n                    remarkPlugins={[remarkMath]}\r\n                    children={post.content} className={style.reactMarkDown} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const [subscriptionMessage, setSubscriptionMessage] = React.useState(\"Thank you for subscribing!\");\r\n    const [subscriptionButtonMessage, setSubscriptionButtonMessage] = React.useState(\"Subscribe\");\r\n\r\n    const postSubscription = async()=>\r\n    {\r\n        setSubscriptionButtonMessage(\"Loading\");\r\n\r\n        const email = {email: document.getElementById(\"subscribeEmailInput\").value};\r\n        const urlToFetch = prefixURLBackend + \"SuscribedEmail\";\r\n        await fetch((urlToFetch), {method: \"POST\", headers: {'Content-Type': \"application/json\"},\r\n            body: JSON.stringify(email) }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                document.getElementById('subscribeForm')?.classList.add('done');\r\n            }\r\n            else\r\n            {\r\n                const message = await response.text();\r\n                if(message.substring(0, 9) === 'Duplicate')\r\n                {\r\n                    document.getElementById('subscribeForm')?.classList.add('done');\r\n                    setSubscriptionMessage(\"You are already subscribed!\");\r\n                }\r\n                else\r\n                {\r\n                    document.getElementById('subscribeEmailInput').reportValidity();\r\n                    setSubscriptionButtonMessage(\"Subscribe\");\r\n                }\r\n            }\r\n        }).catch(e => setSubscriptionMessage(\"Server error...\"));     \r\n    };\r\n\r\n    const printSubscribeButton = ()=>\r\n    {\r\n        return (\r\n            <div class=\"subscribeButtoncontainer\">\r\n                <h4>Subscribe to receive new posts announcements</h4>\r\n                <div class=\"subscribeButtonContent\">\r\n                    <form class=\"subscribeForm\" id=\"subscribeForm\">\r\n                        <input class=\"subscribeEmailInput\" id=\"subscribeEmailInput\"\r\n                            type=\"email\" placeholder=\"subscribe@me.now\" onKeyPress={(e)=>{\r\n                                if(e.code === 'Enter')\r\n                                {\r\n                                    postSubscription();\r\n                                }\r\n                            }}/>\r\n                        <button class=\"subscribeButton\" type=\"button\" id=\"subscribeButton\" onClick={()=>postSubscription()}>\r\n                            <span class=\"before-submit\">{subscriptionButtonMessage}</span>\r\n                            <span class=\"after-submit\">{subscriptionMessage}</span>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const printComments=()=>\r\n    {\r\n        return(\r\n            post.userComments?.map(parentComment=>\r\n            {\r\n                nicksByCommentId[parentComment.id] = parentComment.nick;\r\n\r\n                return(\r\n                    <div>\r\n                        <div className=\"userCommentArea\" id={parentComment.id.toString()}>\r\n                            <h4 className=\"userCommentNick\">{parentComment.nick}</h4>\r\n                            <p className=\"userCommentDate\">\r\n                            {\r\n                                convertStringDateTimezoneToClient(parentComment.commentDate)\r\n                            }\r\n                            </p>\r\n                            <p className=\"userCommentContent\">{parentComment.content}</p>\r\n                            <p className=\"userCommentReply\" onClick={()=>\r\n                                setCommentParentId((commentParentId !== parentComment.id) ? parentComment.id : null)}>\r\n                            {\r\n                                (commentParentId !== parentComment.id) ? \"Reply\" : \"Cancel reply\"\r\n                            }\r\n                            </p>\r\n                        </div>\r\n                        {\r\n                            (commentParentId !== parentComment.id) ? null : commentForm()\r\n                        }\r\n                        {\r\n                            parentComment.inverseParent.map(childComment =>\r\n                            {\r\n                                nicksByCommentId[childComment.id] = childComment.nick;\r\n                                \r\n                                return(\r\n                                    <div>\r\n                                        <div className={\"userCommentArea childUserCommentArea\"} id={childComment.id.toString()}>\r\n                                            <h4 className=\"userCommentNick\">{childComment.nick}</h4>\r\n                                            <p className=\"userCommentDate\">\r\n                                            {\r\n                                                convertStringDateTimezoneToClient(childComment.commentDate)\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentContent\">\r\n                                            <b>{(parentComment.id == childComment.parentId) ? \"\" : \"@\"+nicksByCommentId[childComment.parentId]}</b>\r\n                                            {\r\n                                                \" \"+childComment.content\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentReply\" onClick={()=>\r\n                                                setCommentParentId((commentParentId !== childComment.id) ? \r\n                                                    childComment.id : null)}>\r\n                                            {   \r\n                                                (commentParentId !== childComment.id) ? \"Reply\" : \"Cancel reply\"\r\n                                            }\r\n                                            </p>\r\n                                        </div>\r\n                                        {\r\n                                            (commentParentId !== childComment.id) ? null : commentForm()\r\n                                        }\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    \r\n\r\n    const scrollToComment = (commentId) => \r\n    {\r\n        const yOffset = -50; \r\n        const element = document.getElementById(commentId.toString());\r\n        const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n\r\n        window.scrollTo({top: y, behavior: 'smooth'});\r\n    }\r\n    \r\n    const postComment=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        \r\n        const comment = \r\n        {\r\n            postId: parseInt(urlID),\r\n            parentId: commentParentId,\r\n            nick: document.getElementById(\"nick\").value,\r\n            content: document.getElementById(\"content\").value,\r\n            country: clientCountry,\r\n            email: document.getElementById(\"email\").value,\r\n            notifyReply: document.getElementById(\"reply\").checked ? 1 : 0,\r\n        };\r\n\r\n        const urlToFetch = prefixURLBackend + \"UserComment\";\r\n        await fetch((urlToFetch), \r\n            {method: \"POST\", body: JSON.stringify(comment), \r\n            headers: {'Content-Type': \"application/json\"}}).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const addedComment = await response.json();\r\n                nicksByCommentId[addedComment.id] = addedComment.nick;\r\n                \r\n                var added = false;\r\n                post.userComments.map((parentComment)=>\r\n                {\r\n                    if(parentComment.id === addedComment.parentId)\r\n                    {\r\n                        parentComment.inverseParent.push(addedComment);\r\n                        added = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        parentComment.inverseParent.map((childComment)=>\r\n                        {\r\n                            if(childComment.id === addedComment.parentId)\r\n                            {\r\n                                parentComment.inverseParent.push(addedComment);\r\n                                added = true;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                if(!added)\r\n                    post.userComments.push(addedComment);\r\n\r\n                setCommentParentId(-1);\r\n                setCommentParentId(null);\r\n                while(document.getElementById(addedComment.id.toString()) == null) ;\r\n                scrollToComment(addedComment.id);\r\n                \r\n            }\r\n            else\r\n                console.log(await response.text());\r\n        }).catch(e => alert(e));     \r\n    };\r\n    \r\n\r\n    const commentForm = ()=>\r\n    {\r\n        return (\r\n            <form onSubmit={(e)=>postComment(e)} className=\"commuserCommentAreaentsForm\">\r\n                <label className=\"commentInputLabel\">Nick</label>\r\n                <input className=\"nickInput\" id=\"nick\" type=\"text\" placeholder=\"Enter a nick...\" \r\n                    autoComplete=\"off\" required={true} minLength={3}/>\r\n\r\n                <label className=\"commentInputLabel\">Email</label>\r\n                <input className=\"emailInput\" id=\"email\" type=\"email\" placeholder=\"Enter a valid email...\" \r\n                    autoComplete=\"off\" minLength={6} required={true}/>\r\n                \r\n                <label className=\"commentInputLabel\">Comment</label>\r\n                <input className=\"commentInput\" id=\"content\" type=\"text\" placeholder=\"Enter your comment...\" \r\n                    autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>           \r\n\r\n                <input className=\"commentPostButton\" name=\"Submit\" id=\"submit\" type=\"submit\" value=\"Post\" />\r\n\r\n                <input className=\"replyInputInput\" id=\"reply\" type=\"checkbox\"/>\r\n                <label className=\"commentInputLabel\">Notify to email replies</label> <br/><br/>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    const printCommentsSection = ()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\">\r\n                {\r\n                    (commentParentId != null) ? null : commentForm()\r\n                }\r\n                <div className=\"usersCommentsArea\">{printComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(post != null)\r\n    {\r\n        return(\r\n            <div style={{width:\"100%\"}}>\r\n                {printPost()}{printSubscribeButton()}<div className=\"horizontalLine\"/>{printCommentsSection()}\r\n            </div>\r\n        ); \r\n    }\r\n\r\n    if(isLoading)\r\n    {\r\n        return (\r\n            <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader/>\r\n            </div>\r\n        );\r\n    }\r\n      \r\n\r\n    return (\r\n        <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n    );\r\n\r\n}","export default __webpack_public_path__ + \"static/media/personAndGuitar.24374079.jpg\";","import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\nimport logo from '../../Tools/Images/personAndGuitar.jpg';\r\n\r\nimport { prefixURLBackend } from '../PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    async function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n                break;\r\n\r\n            case \"statistics\" :\r\n                history.push(\"/statistics\");\r\n                break;  \r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src={logo}/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"statistics\")}}>\r\n                                Statistics\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n     \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/taza.1fa020a4.jpg\";","import Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\n\r\nimport logo from './taza.jpg';\r\n\r\nimport \"./About.css\";\r\n\r\nexport default function About()\r\n{\r\n    return(\r\n        <div className=\"aboutArea\">\r\n            <img className=\"aboutPic\" src={logo}/>\r\n            <br/>\r\n            <span >\r\n                Welcome to my mind! This is my personal space. Here I write any experience, thought or thing that I have just learned.\r\n                <br/>\r\n                <br/>\r\n                I am a Spanish, I was born in 1999 and I study computer engineering at Ege University located in Turkey. I love to learn new things, work hard, play the guitar and socialize with foreigners.\r\n            </span>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Pie, Line} from \"react-chartjs-2\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport \"./Statistics.css\";\r\nimport { prefixURLFrontend } from '../../Tools/PrefixURLFrontend/PrefixURLFrontend';\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nfunction getMonthName(number)\r\n{\r\n    switch(number)\r\n    {\r\n        case 1:\r\n            return \"January\";\r\n        case 2:\r\n            return \"Frebruary\";\r\n        case 3:\r\n            return \"March\";\r\n        case 4:\r\n            return \"April\";\r\n        case 5:\r\n            return \"May\";\r\n        case 6:\r\n            return \"June\";\r\n        case 7:\r\n            return \"July\";\r\n        case 8:\r\n            return \"August\";\r\n        case 9:\r\n            return \"September\";\r\n        case 10:\r\n            return \"October\";\r\n        case 11:\r\n            return \"November\";\r\n        default:\r\n            return \"December\";\r\n    };\r\n};\r\n\r\nfunction getLoopColorsByLength(len)\r\n{\r\n    const colors=[\"red\", \"blue\", \"yellow\", \"orange\", \"brown\", \"pink\", \"purple\"];\r\n    let temp=0;\r\n\r\n    while(colors.length<len)\r\n    {\r\n        colors.push(colors[(temp++)%colors.length]);\r\n    }\r\n\r\n    return colors;\r\n};\r\n\r\nexport default function Statistics()\r\n{\r\n    const [statistics, setStatistics] = React.useState(\r\n        {\r\n            countriesOfComments: [], \r\n            numberOfCommentsPerMonth: [],\r\n            topCommentersNicks: [],\r\n            topCommentedPosts: [],\r\n        }); \r\n\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchStatistics();\r\n    }, []);\r\n\r\n    const fetchStatistics = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Statistics\";\r\n        await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const data = await response.json();\r\n                setStatistics(data);\r\n            }\r\n            else\r\n                console.log(response.text);\r\n        }).catch(e => alert(e));\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    if(loading)\r\n        return(\r\n            <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader />\r\n            </div>\r\n        );\r\n\r\n    return(\r\n        <div >\r\n            <center><h3>Top Commenters Nicks</h3></center>\r\n            <div style={{ height: 370, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"nick\", headerName:\"Nick\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                        {field:\"commentsCount\", headerName:\"Comments Count\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                    ]}\r\n                \r\n                    rows={statistics.topCommentersNicks}\r\n                    getRowId={(row) => row.nick}\r\n                    pageSize={5}\r\n                />\r\n            </div>\r\n\r\n            <center><h3>Top Commented Posts</h3></center>\r\n            <div style={{ height: 370, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"title\", headerName:\"Title\", flex:1, sortable:false, disableColumnMenu:true, renderCell:(params)=>\r\n                        (\r\n                            <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\",\r\n                                textDecoration: \"none\"}\r\n                                }\r\n                                href={prefixURLFrontend + \"post/\" + params.id + \"/\" + params.value}>{params.value}</a>\r\n                        )},\r\n                        {field:\"commentsCount\", headerName:\"Comments Count\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                    ]}\r\n                \r\n                    rows={statistics.topCommentedPosts}\r\n                    getRowId={(row) => row.id}\r\n                    pageSize={5}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"chartArea\">\r\n                <Pie data=\r\n                    {{\r\n                        labels: statistics.countriesOfComments.map(info => info.country),\r\n                        datasets: \r\n                        [{\r\n                            backgroundColor: getLoopColorsByLength(statistics.countriesOfComments.length),\r\n                            data: statistics.countriesOfComments.map(info => info.commentsCount), \r\n                        }]\r\n                    }} \r\n                    \r\n                    options=\r\n                    {{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        plugins:\r\n                        {\r\n                            legend:{display:false},\r\n                            title:{text:\"Countries of Comments\", display:true}\r\n                        }\r\n                    }}\r\n                height={290}/>\r\n            </div> \r\n\r\n            <div className=\"chartArea\">\r\n                <Line data=\r\n                    {{\r\n                        labels: statistics.numberOfCommentsPerMonth.map(info => getMonthName(info.commentsMonth)),\r\n                        datasets: \r\n                        [{\r\n                            backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                            data: statistics.numberOfCommentsPerMonth.map(info => info.commentsCount), \r\n                            pointRadius: 8\r\n                        }]\r\n                    }} \r\n                    options=\r\n                    {{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        plugins:\r\n                        {\r\n                            legend:{display:false},\r\n                            title:{text:\"Months of Comments Counts\", display:true}\r\n                        }\r\n                    }}\r\n                    height={290}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","const TOKEN_KEY=\"Authorization\";\r\n\r\nexport function setToken(token)\r\n{\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport function getToken()\r\n{\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function deleteToken()\r\n{\r\n  localStorage.removeItem(TOKEN_KEY);\r\n}","import React from 'react';\r\n\r\nimport {Paper, Grid, Avatar, TextField, Button} from '@mui/material';\r\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\r\nimport { deleteToken, getToken, setToken } from '../../Tools/auth-helper';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function login()\r\n{\r\n    const [disableButton, setDisableButton] = React.useState(false);\r\n    const history=useHistory();\r\n\r\n    const submit=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        setDisableButton(true);\r\n\r\n        const data = {\r\n            \"adminUsername\": document.getElementById(\"adminUsername\").value,\r\n            \"adminPassword\": document.getElementById(\"adminPassword\").value,\r\n        };\r\n\r\n        const urlToFetch = prefixURLBackend + \"BlogAdmin/Authenticate\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(async(response) => await response.text().then(token=>\r\n        {\r\n            if(response.status != 200) \r\n                alert(\"User does not exist...\");\r\n            else if(response.status == 200)\r\n            {   \r\n                deleteToken();\r\n                setToken(\"Bearer \"+token);\r\n                setTimeout(function(){\r\n                    history.push(\"/admin\");\r\n                }, 600);\r\n            }\r\n            else\r\n                console.log(response);\r\n        })).catch(e => alert('Database connection error...'));\r\n        \r\n        setDisableButton(false);\r\n    }\r\n\r\n    const paperStyle=\r\n    {\r\n        padding: \"30px\", \r\n        height: \"380px\", \r\n        width: \"50%\", \r\n        margin: \"100px auto\"\r\n    };\r\n    const avatarStyle=\r\n    {\r\n        backgroundColor: \"#1bbd7e\"\r\n    };\r\n    const usernameTexFieldStyle = \r\n    {\r\n        marginBottom: \"10px\"\r\n    };\r\n    const passwordTexFieldStyle = \r\n    {\r\n        marginBottom: \"35px\"\r\n    };\r\n\r\n    return(\r\n        <div className=\"mainDiv\">\r\n            <Grid>\r\n                <Paper elevation={12} style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}>\r\n                            <LockOpenIcon/>\r\n                        </Avatar>\r\n                        <h2>Login</h2>\r\n                    </Grid>\r\n\r\n                    <form onSubmit={(e)=>submit(e)} autoComplete=\"off\">\r\n                        <TextField id='adminUsername' label='Username' placeholder=\"Enter username\" variant=\"standard\" \r\n                            style={usernameTexFieldStyle} fullWidth autoComplete='off' required/>\r\n                        <TextField id=\"adminPassword\" label=\"Password\" placeholder=\"Enter password\" type=\"password\" \r\n                            variant=\"standard\" style={passwordTexFieldStyle} fullWidth autoComplete='off' required/>\r\n\r\n                        <Button type='submit' color='primary' variant=\"contained\" disabled={disableButton} fullWidth>\r\n                            Sign in\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport {Button, Stack} from '@mui/material';\r\nimport { DataGrid, GridToolbar} from '@mui/x-data-grid';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { getToken, deleteToken } from '../../Tools/auth-helper';\r\n\r\nimport \"./Admin.css\";\r\n\r\nfunction convertStringDateTimezoneToClient(stringDate)\r\n{\r\n    const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n    if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n    {\r\n        return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n            day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n            hour12: false });\r\n    }\r\n\r\n    //Prevent invalid date, return actual client date\r\n    return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n        hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n};\r\n\r\nexport default function Admin()\r\n{\r\n    const [userComments, setUserComments] = React.useState([]);\r\n    const [subscriptions, setSubscriptions] = React.useState([]);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchUserComments();\r\n        await fetchSubscriptions();\r\n        await fetchCategories();\r\n        await fetchPosts();\r\n    }, []);\r\n\r\n    const APIheaders = {\r\n        'Content-Type': \"application/json\",\r\n        'Authorization': getToken()\r\n    };\r\n\r\n    const fetchUserComments = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"UserComment\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                setUserComments(json);\r\n            }\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const fetchSubscriptions = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"SuscribedEmail\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response) =>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                setSubscriptions(json);\r\n            }\r\n        }).catch(e => alert(e));\r\n    }\r\n\r\n    const fetchCategories = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response) =>\r\n        { \r\n            await response.json().then(json => setCategories(json))\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const fetchPosts = async()=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            await response.json().then(json => setPosts(json))\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const putComment= async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(row)\r\n            row[newData.field]=newData.value;\r\n\r\n        const urlToFetch = prefixURLBackend + \"UserComment\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"PUT\",\r\n            headers: APIheaders,\r\n            'Content-Type': \"application/json\",\r\n            body: JSON.stringify(row)\r\n        }).then(async(response)=>\r\n        {    \r\n            if(!response.ok)\r\n            {    \r\n                alert(\"HTTP Code: \" + response.status);\r\n\r\n                //hacerlo manual proximamente\r\n                fetchUserComments();\r\n            }\r\n        }).catch(e => alert(e));  \r\n    };\r\n\r\n    const deleteComment=async(id)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"UserComment/\" + id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchUserComments();\r\n                fetchPosts();\r\n            }\r\n        }).catch(e => alert(e));      \r\n    };\r\n\r\n    const commentsSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 585, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"postTitle\", headerName:\"Title of Post\", flex:1, renderCell:(params)=>\r\n                            (\r\n                                <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\",\r\n                                    textDecoration: \"none\"}\r\n                                    }\r\n                                    href={\"http://localhost:3001/#/\" + \"post/\" + params.row.postId + \"/\" + params.value}>{params.value}</a>\r\n                            )},\r\n                        {field:\"nick\", headerName:\"Nick\", editable:true, flex:1},\r\n                        {field:\"content\", headerName:\"Content\", editable:true, flex:1,},\r\n                        {field:\"email\", headerName:\"Email\", editable:true, flex:1},\r\n                        {field:\"notifyReply\", headerName:\"Notify\", editable:true, flex:0.4 },\r\n                        {field:\"country\", headerName:\"Country\", flex:0.7},\r\n                        {field:\"commentDate\", headerName:\"Date\", flex:1, \r\n                            renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                        {field: \"action\", headerName:\"Action\", flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteComment(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={userComments}\r\n                    components={{\r\n                        NoRowsOverlay: () => \r\n                            ( \r\n                                <Stack height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n                                    Session expired...\r\n                                </Stack>\r\n                            ),\r\n                        Toolbar: GridToolbar \r\n                    }}\r\n                    getRowId={(row) => row.id}\r\n                    pageSize={8}\r\n                    onCellEditCommit={putComment}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const deleteSubscription=async(email)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"SuscribedEmail/\" + email;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchSubscriptions();\r\n            }\r\n        }).catch(e => alert(e));      \r\n    };\r\n\r\n    const subscriptionsSection = ()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 585, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"email\", headerName:\"Email\", flex:1},\r\n                        {field:\"subscriptionDate\", headerName:\"Date\", flex:1, \r\n                            renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                        {field: \"action\", headerName:\"Action\", flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteSubscription(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={subscriptions}\r\n                    components={{\r\n                        NoRowsOverlay: () => \r\n                            ( \r\n                                <Stack height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n                                    Session expired...\r\n                                </Stack>\r\n                            ),\r\n                        Toolbar: GridToolbar \r\n                    }}\r\n                    getRowId={(row) => row.email}\r\n                    pageSize={8}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const postCategory=async(nameOfCategory)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: APIheaders,\r\n            body: \"\\\"\"+nameOfCategory+\"\\\"\",\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                document.getElementById(\"NewCategory\").value=\"\";\r\n            }\r\n            else\r\n                alert(\"HTTP Code: \" + response.status);\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const deleteCategory=async(nameOfCategory)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Category/\" + nameOfCategory;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchCategories();\r\n                fetchPosts();\r\n            }\r\n        }).catch(e => alert(e));   \r\n    };\r\n\r\n    const categoriesSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 370, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"nameOfCategory\", headerName:\"Name\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"count\", headerName:\"Number of Posts\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (info.id == 'Projects' || info.id == 'Private') ? null : \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteCategory(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={categories}\r\n                    getRowId={(row) => row.nameOfCategory}\r\n                    pageSize={4}\r\n                    //onCellEditCommit={updatedCategory}\r\n                    components={{Toolbar: GridToolbar}}\r\n                    />\r\n\r\n                    <label>New: </label>\r\n                    <input type=\"text\" id=\"NewCategory\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() => postCategory(document.getElementById(\"NewCategory\").value)}\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const fetchPost=async(id)=>\r\n    {\r\n        const urlToFetch=prefixURLBackend + \"Post/\" + id.toString();\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                await response.json().then(json =>\r\n                { \r\n                    setWrittenPost(json);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const postPost = async(post) =>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: APIheaders,\r\n            body: JSON.stringify(post),\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                fetchPosts();\r\n                resetWrittenPost();\r\n            }\r\n            else if(response.status != 500)\r\n                alert(\"HTTP Code: \" + response.status);\r\n            else \r\n                alert(\"Notifications error or server error!\")\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const putPost=async(post)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post/\" + post.id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"PUT\",\r\n            headers: APIheaders,\r\n            body: JSON.stringify(post),\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                fetchPosts();\r\n                resetWrittenPost();\r\n            }\r\n            else\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n        }).catch(e => alert(\"a\"));\r\n    }\r\n\r\n    const deletePost=async(id)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"Post/\" + id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchPosts();\r\n                fetchCategories();\r\n                fetchUserComments();\r\n            }\r\n        }).catch(e => alert(e)); \r\n    };\r\n\r\n    const getWrittenPost = () =>\r\n    {\r\n        const post = \r\n        {\r\n            id: document.getElementById(\"id\").value,\r\n            title: document.getElementById(\"title\").value,\r\n            content: document.getElementById(\"content\").value,\r\n            postDate: document.getElementById(\"postDate\").value,\r\n            category: document.getElementById(\"category\").value,\r\n            coverPhotoLink: document.getElementById(\"coverPhotoLink\").value,\r\n        };\r\n\r\n        return post;\r\n    }\r\n\r\n    const setWrittenPost = (json) =>\r\n    {\r\n        document.getElementById(\"id\").value=json.id;\r\n        document.getElementById(\"title\").value = json.title;\r\n        document.getElementById(\"content\").value = json.content;\r\n        document.getElementById(\"postDate\").value = json.postDate.replace(\" \", \"T\");\r\n        document.getElementById(\"category\").value = json.category;\r\n        document.getElementById(\"coverPhotoLink\").value = json.coverPhotoLink;\r\n    };\r\n\r\n    const resetWrittenPost = () =>\r\n    {\r\n        document.getElementById(\"id\").value = '';\r\n        document.getElementById(\"title\").value = '';\r\n        document.getElementById(\"content\").value = '';\r\n        document.getElementById(\"postDate\").value = '';\r\n        document.getElementById(\"category\").value = '';\r\n        document.getElementById(\"coverPhotoLink\").value = '';\r\n    };\r\n\r\n    const postsSection=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div style={{ height: 570, width: '100%', marginBottom:\"60px\", }}>\r\n                    <DataGrid \r\n                        columns={\r\n                        [\r\n                            {field:\"title\", headerName:\"Title\", sortable:false, disableColumnMenu:true, flex:1, \r\n                                renderCell:(params)=>\r\n                                (\r\n                                    <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", \r\n                                        textOverflow: \"ellipsis\", textDecoration: \"none\"}}\r\n                                        href={\"http://localhost:3001/#/\" + \"post/\" + params.id + \"/\" + params.value}>\r\n                                    {params.value}\r\n                                    </a>\r\n                                )},\r\n                            {field:\"category\", headerName:\"Category\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"postDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                            {field:\"commentsCount\", headerName:\"Number of Comments\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (info) => \r\n                                (\r\n                                    <>\r\n                                        <Button\r\n                                            style={{\r\n                                                backgroundColor: \"#ffcc00\",\r\n                                                width:\"48%\",\r\n                                                marginRight: \"4%\",\r\n                                                padding: \"3px 35px\"\r\n                                            }}\r\n                                            onClick={() => fetchPost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Edit\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#e8605d\",\r\n                                            width:\"48%\",\r\n                                            padding: \"3px 35px\",\r\n                                            }}\r\n\r\n                                            onClick={() => deletePost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Delete\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        ]}\r\n                        rows={posts}\r\n                        getRowId={(row) => row.id}\r\n                        pageSize={8}\r\n                        components={{Toolbar: GridToolbar}}\r\n                        />  \r\n                </div>\r\n                {newPostSection()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const newPostSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"markdownEditor\">\r\n                <label >ID: </label>\r\n                <input className=\"IDLabel\" type=\"number\" id=\"id\" disabled/>\r\n                <button onClick={() => document.getElementById(\"id\").value = null }>Set NULL For New Post</button>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Title: </label>\r\n                <input type=\"text\" id=\"title\" />\r\n                <div className=\"break\"/>\r\n\r\n                <label>Date: </label>\r\n                <input type=\"datetime-local\" id=\"postDate\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Category: </label>\r\n                <select id=\"category\" >\r\n                {\r\n                    categories.map( c=>\r\n                    {\r\n                        return(\r\n                            <option value={c.nameOfCategory}>\r\n                                {c.nameOfCategory}\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n                </select>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Cover Link: </label>\r\n                <input type=\"text\" id=\"coverPhotoLink\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <textarea className=\"textArea\" id=\"content\" \r\n                    onKeyDown={(e)=>\r\n                    {\r\n                        if(e.keyCode == 9) \r\n                        { \r\n                            e.preventDefault();\r\n\r\n                            const element=document.getElementById(\"content\");\r\n\r\n                            const start = element.selectionStart;\r\n                            const end = element.selectionEnd;\r\n\r\n                            element.value = element.value.substring(0, start) + \"\\t\" + element.value.substring(end);\r\n\r\n                            element.selectionStart = element.selectionEnd = start + 1;\r\n                        }\r\n                    }}\r\n                />\r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}} \r\n                    remarkPlugins={[remarkMath]}\r\n                    children={document.getElementById(\"content\")?.value} \r\n                    className={\"markdown\"} />\r\n                <div className=\"break\"/>\r\n\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#000000\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    marginRight:\"7px\"\r\n                    }}\r\n                    onClick={()=>{forceUpdate();}}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Review\r\n                </Button>\r\n                <Button\r\n                    style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"6%\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"7px\",\r\n                    }}\r\n                    onClick={()=>\r\n                    {\r\n                        if(document.getElementById(\"id\").value == '')\r\n                            postPost(getWrittenPost()); \r\n                        else\r\n                            putPost(getWrittenPost()); \r\n                    }}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Post\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"adminScreen\">\r\n            {commentsSection()}\r\n            {subscriptionsSection()}\r\n            {categoriesSection()}\r\n            {postsSection()}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Unsubscribe()\r\n{\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const suffixUrl = useLocation().pathname;\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const email=informationUrl[2];\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await deleteSubscription(email);\r\n    }, []);\r\n\r\n    const deleteSubscription=async(email)=>\r\n    {\r\n        const urlToFetch = prefixURLBackend + \"SuscribedEmail/\" + email;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n                setError(true);\r\n            setLoading(false);\r\n        }).catch(e => alert(e));\r\n    }\r\n\r\n    if(error)\r\n    {\r\n        return(\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">The email does not exist...</h6>\r\n        ); \r\n    }\r\n\r\n    if(loading)\r\n    {\r\n        return (\r\n            <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Unsubscribed :(</h6>\r\n    );\r\n}","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport About from \"./Pages/About/About\";\nimport Statistics from \"./Pages/Statistics/Statistics\";\nimport Login from \"./Pages/Admin/Login\";\nimport Admin from \"./Pages/Admin/Admin\";\nimport Unsubscribe from \"./Pages/Unsubscribe/Unsubscribe\";\n\nimport Header from \"./Tools/Header/Header\";\nimport Footer from \"./Tools/Footer/Footer\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n  <div className=\"mainScreen\">\n    <HashRouter >\n      <Header/>\n      \n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n      <Route exact path=\"/statistics\" component={Statistics}/>\n      <Route exact path=\"/login\" component={Login}/>\n      <Route exact path=\"/admin\" component={Admin}/>\n      <Route exact path=\"/unsubscribe/:email\" component={Unsubscribe}/>\n\n      <Footer/>\n    </HashRouter>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}