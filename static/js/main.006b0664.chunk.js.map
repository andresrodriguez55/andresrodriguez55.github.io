{"version":3,"sources":["Pages/Post/markdown-styles.module.css","Tools/Images/personAndGuitar.jpg","Tools/PrefixURLBackend/PrefixURLBackend.js","Tools/Header/Header.js","Tools/Footer/Footer.js","Tools/Images/defaultPostImage.jpg","Pages/Blog/Blog.js","Pages/Post/Post.js","Pages/About/taza.jpg","Pages/About/About.js","Pages/PanelAdmin/PanelAdmin.js","Pages/Admin/Admin.js","App.js","index.js"],"names":["module","exports","prefixURLBackend","Header","history","useHistory","getUserIP","a","fetch","method","then","information","json","data","ipAddress","catch","e","alert","IP","redirect","category","push","userEmail","prompt","formData","FormData","append","body","response","text","result","className","src","logo","onClick","Footer","href","target","Blog","initialCategory","useLocation","pathname","React","useState","selectedCategory","setSelectedCategory","categories","setCategories","allPosts","setAllPosts","postsShownToUser","setPostsShownToUser","areTherePosts","setAreTherePosts","numberOfVisiblePosts","setNumberOfVisiblePosts","useEffect","getAndSetCategories","hideSelectCategory","getAndSetAllPosts","hideMoreButtonIfIsNecessary","showMoreButton","setFilteredShownPostsByChoosenCategory","URLToFetch","JSON","parse","searchBarOnChange","searchedValue","element","document","getElementById","value","length","filter","post","Title","toLowerCase","includes","Category","updateSelectedCategory","selected","options","selectedIndex","incrementNumberOfVisiblePosts","val","style","visibility","display","hideMoreButton","convertStringDateTimezoneToClient","stringDate","serverDate","Date","toString","localeCompare","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","id","onChange","map","c","NameOfCategory","type","placeholder","slice","prefixURLFrontend","ID","replace","CoverPhotoLink","onError","currentTarget","onerror","defaultImage","PostDate","fontSize","fontWeight","align","Post","informationUrl","split","urlID","urlTitle","setPost","doesPostExist","setDoesPostExist","comments","setComments","newPostedCommentID","setNewPostedCommentID","clientIP","setClientIP","actualCommentFieldID","loadPost","updateClientIP","loadComments","scrollIntoView","window","scrollTo","scrollY","ip","commentsArray","adjustArrayCommentsArray","resultArray","totalCommentsCount","x","currentComment","ParentID","replies","addChildCommentToParentComment","parentCommentsArray","childComment","commentsCount","y","parentComment","wasChildChildCommentAddedToReplyList","replyCommentsArray","childChildComment","z","replyComment","Content","Nick","switchSubmitCommentArea","newArea","innerHTML","submitComment","preventDefault","checked","replaceAll","location","isNaN","markdownCodeThemeComponent","props","railscasts","language","substring","children","rehypePlugins","rehypeRaw","remarkGfm","rehypeKatex","components","code","remarkPlugins","remarkMath","reactMarkDown","onSubmit","name","autoComplete","required","minLength","maxLength","for","comment","CommentDate","dangerouslySetInnerHTML","__html","About","PanelAdmin","user","userComments","setUserComments","posts","setPosts","newPostContent","setNewPostContent","loadCategories","loadUserComments","loadPosts","updatedComment","newData","row","field","Username","Password","parseInt","UserCommentNick","UserCommentContent","deleteUserComment","updatedCategory","deleteCategory","nameOfCategory","postCategory","deletePost","postID","setNewPostID","newID","postOrUpdatePost","newPostSection","disabled","onKeyDown","keyCode","start","selectionStart","end","selectionEnd","Button","backgroundColor","width","padding","marginTop","marginRight","variant","height","marginBottom","columns","headerName","sortable","disableColumnMenu","flex","editable","renderCell","info","rows","pageSize","onCellEditCommit","PostTitle","PostContent","PostCategory","PostCoverPhotoLink","Admin","commentsCountries","setCommentsCountries","commentsCountriesCount","setCommentsCountriesCount","commentsDate","setCommentsDate","commentsDateCount","setCommentsDateCount","setUser","isSessionActive","setIsSessionActive","loadCommentsCountriesInfo","loadCommentsMonthsInfo","tempCommentsCountries","tempCommentsCountriesCount","Country","CommentsCount","tempCommentsMonths","tempCommentsMonthsCount","number","getMonthName","CommentsMonth","submit","autocomplete","labels","datasets","len","colors","temp","getLoopColorsByLength","responsive","maintainAspectRatio","plugins","legend","title","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.006b0664.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__2HtaS\"};","export default __webpack_public_path__ + \"static/media/personAndGuitar.24374079.jpg\";","// https://personalblog55.herokuapp.com/\r\n//http://localhost:3000/\r\nexport const prefixURLBackend =\"https://personalblog55.herokuapp.com/\";","import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\nimport logo from '../../Tools/Images/personAndGuitar.jpg';\r\n\r\nimport { prefixURLBackend } from '../PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    async function getUserIP()\r\n    {\r\n        const IP=await fetch(\"https://api.db-ip.com/v2/free/self\", {method:\"GET\"}).then\r\n        (\r\n            async(information)=> await information.json().then\r\n            ( \r\n                data=>{ return data.ipAddress })\r\n            ).catch(e=>alert(\"Fatal error...\")\r\n        );\r\n\r\n        return IP;\r\n    }\r\n\r\n    async function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n                break;\r\n\r\n            case \"subscribe\":\r\n                const userEmail=prompt(\"Please enter the email to which you want to receive notifications about new posts:\");\r\n\r\n                if(userEmail==null)\r\n                    return;\r\n\r\n                const formData = new FormData();\r\n                formData.append(\"Email\", userEmail);\r\n                const IP=await getUserIP();\r\n                formData.append(\"IP\", IP);\r\n\r\n                await fetch((prefixURLBackend+\"SubscribedEmail/PostEmail.php\"),\r\n                {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                }).then(async(response)=>{await response.text()\r\n                .then((result)=>\r\n                {\r\n                    alert(result);\r\n                })});       \r\n\r\n                break;\r\n\r\n            case \"admin\" :\r\n                history.push(\"/admin\");\r\n                break;  \r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src={logo}/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n     \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"subscribe\")}}>\r\n                                Subscribe\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"admin\")}}>\r\n                                Admin\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/defaultPostImage.30d33787.jpg\";","import React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Blog.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\nimport { prefixURLFrontend } from '../../Tools/PrefixURLFrontend/PrefixURLFrontend';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nexport default function Blog()\r\n{\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory] = React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n\r\n    const [allPosts, setAllPosts] = React.useState([]);\r\n    const [postsShownToUser, setPostsShownToUser] = React.useState([]);\r\n    const [areTherePosts, setAreTherePosts] = React.useState(true);\r\n    const initialNumberOfVisiblePosts=4;\r\n    const [numberOfVisiblePosts, setNumberOfVisiblePosts]=React.useState(initialNumberOfVisiblePosts);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(initialCategory==\"All\")\r\n            getAndSetCategories();\r\n\r\n        else \r\n            hideSelectCategory();\r\n\r\n        await getAndSetAllPosts();\r\n    }, []); //Only once time\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        hideMoreButtonIfIsNecessary();\r\n    }, [numberOfVisiblePosts]); \r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        hideMoreButtonIfIsNecessary();\r\n    }, [postsShownToUser]); \r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        setNumberOfVisiblePosts(initialNumberOfVisiblePosts);\r\n        showMoreButton(); //Show the button again if is necessary\r\n        setFilteredShownPostsByChoosenCategory(); //Update shown posts   \r\n    }, [selectedCategory])\r\n\r\n    const getAndSetCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"Category/ReadCategoriesOfPosts.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert(URLToFetch));\r\n    };\r\n\r\n    const setFilteredShownPostsBySearchedValue=(searchedValue)=>\r\n    {\r\n        setPostsShownToUser(\r\n            allPosts.filter\r\n            (\r\n                function belongsToTheCategory(post)\r\n                { \r\n                    return post.Title.toLowerCase().includes(searchedValue.toLowerCase()) &&  \r\n                        (selectedCategory==\"All\" || post.Category==selectedCategory);\r\n                }\r\n            )\r\n        );\r\n    };\r\n\r\n    const searchBarOnChange=()=>\r\n    {\r\n        const element=document.getElementById('searchBar');\r\n\r\n        if(element)\r\n        {\r\n            if (element.value!=\"\")\r\n            {    \r\n                setNumberOfVisiblePosts(allPosts.length);\r\n                setFilteredShownPostsBySearchedValue(element.value);\r\n            }\r\n\r\n            else\r\n                setFilteredShownPostsByChoosenCategory();\r\n        }\r\n    };\r\n\r\n    const printCategoriesAndSearchBar=()=>\r\n    {\r\n        return(\r\n            <div className=\"displayCategoriesAndSearchBar\">\r\n                <select id=\"selectedCategory\" \r\n                    onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.NameOfCategory}>\r\n                                    {c.NameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n\r\n                <input id=\"searchBar\" className=\"searchBar\" \r\n                    onChange={searchBarOnChange} type=\"text\" placeholder='Search...'/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const setFilteredShownPostsByChoosenCategory=()=>\r\n    {\r\n        setPostsShownToUser(\r\n            allPosts.filter\r\n            (\r\n                function belongsToTheCategory(post)\r\n                { \r\n                    return (selectedCategory==\"All\" || post.Category==selectedCategory)\r\n                }\r\n            )\r\n        );\r\n    };\r\n\r\n    const getAndSetAllPosts=async()=>\r\n    {\r\n        let URLToFetch=prefixURLBackend+\"Post/ReadByCategory.php\"+\r\n            ( (initialCategory==\"All\")?\"\":(\"?Category=\"+initialCategory) );\r\n        //Get all posts or only projects posts\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setAllPosts(json);\r\n                setPostsShownToUser(json); \r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n\r\n        if(allPosts.length==0)\r\n            setAreTherePosts(false);\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        \r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const incrementNumberOfVisiblePosts=()=>\r\n    {\r\n        setNumberOfVisiblePosts((val)=>val+4);\r\n    };\r\n\r\n    const hideSelectCategory=()=>\r\n    {\r\n        const element=document.getElementById('selectedCategory');\r\n        if(element)\r\n            element.style.visibility = 'hidden';\r\n    };\r\n\r\n    const hideMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'none';\r\n    };\r\n\r\n    const hideMoreButtonIfIsNecessary=()=>\r\n    {\r\n        if(postsShownToUser.length<numberOfVisiblePosts)\r\n            hideMoreButton();\r\n    };\r\n\r\n    const showMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'inline-block';\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        if(allPosts.length>0)\r\n        {   \r\n            return( \r\n                <div>\r\n                    <div className=\"posts\">\r\n                    {\r\n                        postsShownToUser.slice(0, numberOfVisiblePosts).map((post)=>\r\n                        {\r\n                            return(\r\n                                <a className=\"postGrid\" href={prefixURLFrontend+\"post/\"+post.ID.toString()+\"/\"+post.Title.replace(\" \", \"%20\")}>\r\n                                    <img className=\"postGridImage\" src={post.CoverPhotoLink} onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                                    <div className=\"postGridInformation\">\r\n                                        <h2 className=\"postGridTitle\">{post.Title}</h2>\r\n                                        <p className=\"postGridCategory\">{\"Category: \"+post.Category}</p>\r\n                                        <p className=\"postGridDate\">{convertStringDateTimezoneToClient(post.PostDate)}</p>\r\n                                    </div>\r\n                                </a>\r\n                            );   \r\n                        })\r\n                    }\r\n                    </div>\r\n                    \r\n                    <div className=\"morePostsButtonArea\">\r\n                        <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                            onClick={incrementNumberOfVisiblePosts}>More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(areTherePosts)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return (\r\n                <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n            );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"blogScreen\">\r\n            <Header/>\r\n            <div>{printCategoriesAndSearchBar()}{printPosts()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\nimport { Alert } from '@mui/material';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n    const urlTitle=informationUrl[3];\r\n\r\n    const [post, setPost] = React.useState([]);\r\n    const [doesPostExist, setDoesPostExist] = React.useState(true);\r\n    const [comments, setComments]=React.useState([]);\r\n    const [newPostedCommentID, setNewPostedCommentID]=React.useState(0);\r\n    const [clientIP, setClientIP]=React.useState(\"Unknown\");\r\n\r\n    let actualCommentFieldID=-1;\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadPost();\r\n        await updateClientIP();\r\n        await loadComments();\r\n    }, []);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        if(newPostedCommentID>0)\r\n        {    \r\n            document.getElementById(\"userCommentArea\"+newPostedCommentID).scrollIntoView();\r\n            window.scrollTo(0, window.scrollY-40);\r\n        }\r\n     }, [comments]);\r\n\r\n    const updateClientIP=async()=>\r\n    {\r\n        if(doesPostExist)\r\n        {\r\n            await fetch(\"https://api.ipify.org/?format=json\", {method:\"GET\"}).then\r\n            (\r\n                async(information)=> await information.json().then\r\n                ( \r\n                    data=>{ setClientIP(data.ip);}\r\n                )\r\n            ).catch(e=>{}); //do nothing\r\n        }\r\n    };\r\n\r\n    const loadPost=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"Post/ReadConcrete.php?ID=\"+urlID.toString()).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then((data)=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                setPost(json);\r\n            })\r\n        }).catch(e => alert('Post content error! Database connection error...'));\r\n\r\n        if(post.length==0)\r\n            setDoesPostExist(false);\r\n    };\r\n\r\n    const loadComments=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"UserComment/ReadForConcretePost.php?PostID=\"+urlID.toString())\r\n            .then(async(information)=>\r\n            { \r\n                await information.text()\r\n                .then(data=>\r\n                    {\r\n                        const json=JSON.parse(data);\r\n                        const commentsArray=adjustArrayCommentsArray(json);\r\n                        setComments(commentsArray);\r\n                    })\r\n            })\r\n            .catch(e => alert('Comments error! Database connection error...'));\r\n    };\r\n\r\n    const adjustArrayCommentsArray=(commentsArray)=>\r\n    {\r\n        const resultArray=[];\r\n        const totalCommentsCount=commentsArray.length;\r\n\r\n        for(let x=0; x<totalCommentsCount; x++) //checking all comments linearly\r\n        {\r\n            const currentComment=commentsArray[x];\r\n\r\n            if(currentComment.ParentID == null) //if the current comment its a parent comment append it\r\n            {\r\n                currentComment.replies=[];\r\n                resultArray.push(currentComment);\r\n            }\r\n\r\n            else \r\n            {\r\n                addChildCommentToParentComment(resultArray, currentComment);\r\n            }\r\n        }\r\n\r\n        return resultArray;\r\n    };\r\n\r\n    const addChildCommentToParentComment=(parentCommentsArray, childComment)=>\r\n    {\r\n        const commentsCount=parentCommentsArray.length;\r\n\r\n        for(let y=0; y<commentsCount; y++) // if the current comment is a child check parent comments to find its father\r\n        {\r\n            const parentComment=parentCommentsArray[y];\r\n\r\n            if(parentComment.ID==childComment.ParentID) //if its father its a parent comment\r\n            {\r\n                parentComment.replies.push(childComment);\r\n                break;\r\n            }\r\n\r\n            else if(wasChildChildCommentAddedToReplyList(parentComment.replies, childComment)) //if its father its an another child comment\r\n            {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const wasChildChildCommentAddedToReplyList=(replyCommentsArray, childChildComment)=>\r\n    {\r\n        const commentsCount=replyCommentsArray.length;\r\n\r\n        for(let z=0; z<commentsCount; z++) //checking childs\r\n        {\r\n            const replyComment=replyCommentsArray[z];\r\n\r\n            if(replyComment.ID==childChildComment.ParentID) //if father is finded, append to the end of list of replies\r\n            {\r\n                childChildComment.Content=\"<b>@\"+replyComment.Nick+\"</b> \"+childChildComment.Content;\r\n                replyCommentsArray.push(childChildComment); //add to the end of the list, like youtube comments, no nested comments\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const switchSubmitCommentArea=(id)=>\r\n    {\r\n        let newArea = document.getElementById(id);\r\n\r\n        if (newArea.style.display === \"none\") \r\n        {\r\n            let actualArea = document.getElementById(actualCommentFieldID);\r\n            actualArea.style.display=\"none\";\r\n            \r\n            if(actualCommentFieldID!=-1)\r\n            {\r\n                document.getElementById(\"replyLabel\"+actualCommentFieldID).innerHTML = \"Reply\";\r\n            }\r\n\r\n            newArea.style.display = \"block\";\r\n            if(id!=-1)\r\n                document.getElementById(\"replyLabel\"+id).innerHTML = \"Cancel Reply\";\r\n\r\n            actualCommentFieldID=id;\r\n        } \r\n        \r\n        else\r\n        {\r\n            let actualArea = document.getElementById(id);\r\n            actualArea.style.display=\"none\";\r\n            document.getElementById(\"replyLabel\"+id).innerHTML = \"Reply\";\r\n\r\n            actualCommentFieldID=-1;\r\n            document.getElementById(actualCommentFieldID).style.display = \"block\";   \r\n        }\r\n    };\r\n\r\n    const submitComment=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Nick\", document.getElementById(\"Nick\"+actualCommentFieldID).value);\r\n        formData.append(\"Content\", document.getElementById(\"Content\"+actualCommentFieldID).value);\r\n        formData.append(\"Email\", document.getElementById(\"Email\"+actualCommentFieldID).value);\r\n        formData.append(\"NotifyReply\", \r\n            (document.getElementById(\"commentRepliesNotifyCheckBox\"+actualCommentFieldID).checked)?1:0);\r\n        formData.append(\"ParentID\", (actualCommentFieldID==-1)?null:actualCommentFieldID);\r\n        formData.append(\"PostID\", urlID);\r\n        formData.append(\"IP\", clientIP);\r\n        formData.append(\"CommentDate\", \r\n            (new Date()).toLocaleString(\"es-ES\", {timeZone: \"Europe/Istanbul\"}).replaceAll(\"/\", \"-\"));\r\n        formData.append(\"Honeypot\", \"Honeypot\");\r\n        formData.append(\"PostName\", post.Title);\r\n        formData.append(\"PostLink\", window.location.href);\r\n\r\n        await fetch((prefixURLBackend+\"UserComment/Create.php\"),\r\n        {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then(async(response)=>{await response.text()\r\n        .then(async(result)=>\r\n        {\r\n            if(isNaN(result))\r\n                alert(result);\r\n            else \r\n            {    \r\n                document.getElementById('Nick'+actualCommentFieldID).value=\"\";\r\n                document.getElementById('Content'+actualCommentFieldID).value=\"\";\r\n                document.getElementById('Email'+actualCommentFieldID).value=\"\";\r\n                document.getElementById('commentRepliesNotifyCheckBox'+actualCommentFieldID).checked=false;\r\n                \r\n                \r\n                loadComments();\r\n                setNewPostedCommentID(result);\r\n                if(actualCommentFieldID!=-1)\r\n                {\r\n                    switchSubmitCommentArea(-1);\r\n                } \r\n            }\r\n        })});\r\n    };\r\n\r\n    const printAllComments=()=>\r\n    {\r\n        return(\r\n            comments.map(comment=>\r\n            {\r\n                return(\r\n                    <div>\r\n                        <div className=\"userCommentArea\" id={\"userCommentArea\"+comment.ID}>\r\n                            <h4 className=\"userCommentNick\">{comment.Nick}</h4>\r\n                            <p className=\"userCommentDate\">\r\n                            {\r\n                                convertStringDateTimezoneToClient(comment.CommentDate)\r\n                            }\r\n                            </p>\r\n                            <p className=\"userCommentContent\">{comment.Content}</p>\r\n                            <p id={\"replyLabel\"+comment.ID} className=\"replyLabel\" onClick={()=>switchSubmitCommentArea(comment.ID)}>Reply</p>\r\n                        </div>\r\n\r\n                        <form id={comment.ID} onSubmit={(e)=>submitComment(e)} className=\"commentsForm\" \r\n                            style={{display:\"none\"}}>\r\n                            <div>\r\n                                <label className=\"commentInputLabel\">Nick</label>\r\n                                <input className=\"nickInput\" name=\"Nick\" id={\"Nick\"+comment.ID} \r\n                                    type=\"text\" placeholder=\"Enter a nick...\" \r\n                                    autoComplete=\"off\" required={true} minLength={3} maxLength={30}/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"commentInputLabel\">Email</label>\r\n                                <input className=\"emailInput\" name=\"Email\" id={\"Email\"+comment.ID}  \r\n                                    type=\"email\" placeholder=\"Enter a valid email...\" \r\n                                    autoComplete=\"off\" required={true}  minLength={7} maxLength={60}/>\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <label className=\"commentInputLabel\">Comment</label>\r\n                                <input className=\"commentInput\" name=\"Content\" id={\"Content\"+comment.ID}  \r\n                                    type=\"text\" placeholder=\"Enter your comment...\" \r\n                                    autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                            </div>\r\n                \r\n                            <div className=\"commentPostButton\">\r\n                                <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                                    type=\"submit\" value=\"Post\" />\r\n                            </div>\r\n\r\n                            <div className='commentRepliesNotifyCheckBoxLabel'>\r\n                                <input type=\"checkbox\" id={\"commentRepliesNotifyCheckBox\"+comment.ID} name=\"commentRepliesNotifyCheckBox\" value=\"1\"/>\r\n                                <label className='commentRepliesNotifyCheckBoxLabel' for=\"commentRepliesNotifyCheckBox\"> \r\n                                    Notify me for replies\r\n                                </label>\r\n                            </div>\r\n                            \r\n                        </form>\r\n\r\n                        {\r\n                            comment.replies.map(childComment=>\r\n                            {\r\n                                return(\r\n                                    <div>\r\n                                        <div className=\"userReplyCommentArea\" id={\"userCommentArea\"+childComment.ID}>\r\n                                            <h4 className=\"userCommentNick\">{childComment.Nick}</h4>\r\n                                            <p className=\"userCommentDate\">\r\n                                            {\r\n                                                convertStringDateTimezoneToClient(childComment.CommentDate)\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentContent\"><div dangerouslySetInnerHTML={{__html: childComment.Content}} /></p>\r\n                                            <p id={\"replyLabel\"+childComment.ID} className=\"replyLabel\" onClick={()=>switchSubmitCommentArea(childComment.ID)}>Reply</p>\r\n                                        </div>\r\n\r\n                                        <form id={childComment.ID} onSubmit={(e)=>submitComment(e)} className=\"commentsForm\" \r\n                                            style={{display:\"none\"}}>\r\n                                            <div>\r\n                                                <label className=\"commentInputLabel\">Nick</label>\r\n                                                <input className=\"nickInput\" name=\"Nick\" id={\"Nick\"+childComment.ID}\r\n                                                    type=\"text\" placeholder=\"Enter a nick...\" \r\n                                                    autoComplete=\"off\" required={true} minLength={3} maxLength={30}/>\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <label className=\"commentInputLabel\">Email</label>\r\n                                                <input className=\"emailInput\" name=\"Email\" id={\"Email\"+childComment.ID} \r\n                                                    type=\"email\" placeholder=\"Enter a valid email...\" \r\n                                                    autoComplete=\"off\" required={true}  minLength={7} maxLength={60}/>\r\n                                            </div>\r\n                                            \r\n                                            <div>\r\n                                                <label className=\"commentInputLabel\">Comment</label>\r\n                                                <input className=\"commentInput\" name=\"Content\" id={\"Content\"+childComment.ID}\r\n                                                    type=\"text\" placeholder=\"Enter your comment...\" \r\n                                                    autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                                            </div>\r\n                                \r\n                                            <div className=\"commentPostButton\">\r\n                                                <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                                                    type=\"submit\" value=\"Post\" />\r\n                                            </div>\r\n\r\n                                            <div className='commentRepliesNotifyCheckBoxLabel'>\r\n                                                <input type=\"checkbox\" id={\"commentRepliesNotifyCheckBox\"+childComment.ID} name=\"commentRepliesNotifyCheckBox\" value=\"1\"/>\r\n                                                <label className='commentRepliesNotifyCheckBoxLabel' for=\"commentRepliesNotifyCheckBox\"> \r\n                                                    Notify me for replies\r\n                                                </label>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    const printCommentsSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\" >\r\n                <form  onSubmit={(e)=>submitComment(e)} className=\"commentsForm\" id={-1}>\r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Nick</label>\r\n                        <input className=\"nickInput\" name=\"Nick\" id={\"Nick\"+actualCommentFieldID}\r\n                            type=\"text\" placeholder=\"Enter a nick...\" \r\n                            autoComplete=\"off\" required={true} minLength={3} maxLength={30}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Email</label>\r\n                        <input className=\"emailInput\" name=\"Email\" id={\"Email\"+actualCommentFieldID}\r\n                            type=\"email\" placeholder=\"Enter a valid email...\" \r\n                            autoComplete=\"off\" required={true} minLength={7} maxLength={60}/>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Comment</label>\r\n                        <input className=\"commentInput\" name=\"Content\" id={\"Content\"+actualCommentFieldID}\r\n                            type=\"text\" placeholder=\"Enter your comment...\" \r\n                            autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                    </div>\r\n        \r\n                    <div className=\"commentPostButton\">\r\n                        <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                            type=\"submit\" value=\"Post\" />\r\n                    </div>\r\n\r\n                    <div className='commentRepliesNotifyCheckBoxLabel'>\r\n                        <input type=\"checkbox\" id={\"commentRepliesNotifyCheckBox\"+actualCommentFieldID} name=\"commentRepliesNotifyCheckBox\" value=\"1\"/>\r\n                        <label className='commentRepliesNotifyCheckBoxLabel' for=\"commentRepliesNotifyCheckBox\"> \r\n                            Notify me for replies\r\n                        </label>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"usersCommentsArea\">{printAllComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const printPostAndCommentsSection=()=>\r\n    {\r\n        if(post && post.Title===urlTitle.replace(\"%20\", \" \"))\r\n        {\r\n            return(\r\n                <div>\r\n                    <div className=\"PostArea\">\r\n                        <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                            components={{code: markdownCodeThemeComponent}}\r\n                            remarkPlugins={[remarkMath]}\r\n                            children={\"<div className='postInfo'><img alt='' className='postImage' src='\"+post.CoverPhotoLink+\"' />\"+\r\n                            \"<div className='postHeaderText'><h1 className='postTitleX' align='center'>\"+post.Title+\"</h1>\"+\r\n                            \"<h6 className='postDate' align='center'>\"+convertStringDateTimezoneToClient(post.PostDate)+\"</h6></div></div>\"+\r\n                            post.Content} \r\n                            className={style.reactMarkDown} />\r\n                    </div>\r\n                    <div>{printCommentsSection()}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(doesPostExist)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">POST NOT EXIST...</h6>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"postScreen\">\r\n            <Header/>\r\n            <div>{printPostAndCommentsSection()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );   \r\n}","export default __webpack_public_path__ + \"static/media/taza.1fa020a4.jpg\";","import Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\n\r\nimport logo from './taza.jpg';\r\n\r\nimport \"./About.css\";\r\n\r\nexport default function About()\r\n{\r\n    return(\r\n        <div className=\"aboutScreen\">\r\n            <Header/>\r\n            <div className=\"aboutArea\">\r\n                <img className=\"aboutPic\" src={logo}/>\r\n                <br/>\r\n                <span >\r\n                    Welcome to my mind! This is my personal space. Here I write any experience, thought or thing that I have just learned.\r\n                    <br/>\r\n                    <br/>\r\n                    I am a Spanish, I was born in 1999 and I study computer engineering at Ege University located in Turkey. I love to learn new things, work hard, play the guitar and socialize with foreigners.\r\n                </span>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\n\r\nimport \"./PanelAdmin.css\"\r\n\r\nexport default function PanelAdmin({user})\r\n{\r\n    const [userComments, setUserComments] = React.useState([]);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n    const [newPostContent, setNewPostContent] = React.useState(\"\");\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadCategories();\r\n        await loadUserComments();\r\n        await loadPosts();\r\n    }, []);\r\n\r\n    const loadCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadCategoriesInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadUserComments=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadUserCommentsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setUserComments(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadPosts=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadPostsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setPosts(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const updatedComment=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(row)\r\n            row[newData.field]=newData.value;\r\n        else \r\n        {    \r\n            loadUserComments();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", parseInt(row.id));\r\n        data.append(\"Nick\", row.UserCommentNick);\r\n        data.append(\"Content\", row.UserCommentContent);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadUserComments();\r\n    };\r\n\r\n    const deleteUserComment=async(id)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", id);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadUserComments();\r\n    };\r\n\r\n    const commentsSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 320, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"PostTitle\", headerName:\"Title of Post\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field:\"UserCommentNick\", headerName:\"Nick of User\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"UserCommentContent\", headerName:\"Content of Comment\", sortable:false, disableColumnMenu:true,  editable:true, flex:1},\r\n                        {field:\"UserCountry\", headerName:\"Country\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field:\"CommentDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteUserComment(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={userComments}\r\n                    pageSize={4}\r\n                    onCellEditCommit={updatedComment}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const updatedCategory=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(!row)\r\n        {\r\n            loadCategories();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"CurrentNameOfCategory\", row.NameOfCategory);\r\n        data.append(\"NewNameOfCategory\", newData.value);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const deleteCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadCategories();\r\n    };\r\n\r\n    const postCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/PostCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n                document.getElementById(\"NewCategory\").value=\"\";\r\n        })});      \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const categoriesSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 320, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"NameOfCategory\", headerName:\"Name\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"NumberOfPosts\", headerName:\"Number of Posts\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteCategory(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={categories}\r\n                    pageSize={4}\r\n                    onCellEditCommit={updatedCategory}/>\r\n\r\n                    <label>New: </label>\r\n                    <input type=\"text\" id=\"NewCategory\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() => postCategory(document.getElementById(\"NewCategory\").value)}\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const deletePost=async(postID)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", postID);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeletePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    };\r\n\r\n    const setNewPostInfoWithExistingPostInfo=(post)=>\r\n    {\r\n        setNewPostID(post.id);\r\n        document.getElementById(\"PostTitle\").value=post.PostTitle;\r\n        document.getElementById(\"PostContent\").value=post.PostContent;\r\n        setNewPostContent(post.PostContent);\r\n        document.getElementById(\"PostDate\").value=post.PostDate.replace(\" \", \"T\");\r\n        document.getElementById(\"PostCategory\").value=post.PostCategory;\r\n        document.getElementById(\"PostCoverLink\").value=post.PostCoverPhotoLink;\r\n    };\r\n\r\n    const setNewPostID=(newID)=>\r\n    {\r\n        document.getElementById(\"PostID\").value=newID;\r\n    };\r\n\r\n    const postsSection=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div style={{ height: 320, width: '100%', marginBottom:\"20px\", }}>\r\n                    <DataGrid \r\n                        columns={\r\n                        [\r\n                            {field:\"PostTitle\", headerName:\"Title\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"PostCategory\", headerName:\"Category\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"PostDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"NumberOfComments\", headerName:\"Number of Comments\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (info) => \r\n                                (\r\n                                    <>\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#ffcc00\",\r\n                                            width:\"48%\",\r\n                                            marginRight: \"4%\",\r\n                                            padding: \"3px 35px\"\r\n                                            }}\r\n\r\n                                            onClick={() => setNewPostInfoWithExistingPostInfo(info.row)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Edit\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#e8605d\",\r\n                                            width:\"48%\",\r\n                                            padding: \"3px 35px\",\r\n                                            }}\r\n\r\n                                            onClick={() => deletePost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Delete\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        ]}\r\n                        rows={posts}\r\n                        pageSize={4}/>  \r\n                </div>\r\n                {newPostSection()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const postOrUpdatePost=async()=>\r\n    {\r\n        if(!document.getElementById(\"PostID\"))\r\n            return;\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n\r\n        data.append(\"ID\", parseInt(document.getElementById(\"PostID\").value));\r\n        data.append(\"Title\", document.getElementById(\"PostTitle\").value.replaceAll(\"\\\"\", \"\\'\"));\r\n        data.append(\"Content\", document.getElementById(\"PostContent\").value.replaceAll(\"\\\"\", \"\\'\").replaceAll(\"\\\\\", \"\\\\\\\\\"));\r\n        data.append(\"Category\", document.getElementById(\"PostCategory\").value);\r\n        data.append(\"PostDate\", document.getElementById(\"PostDate\").value.replace(\"T\", \" \").replaceAll(\"-\",\".\"));\r\n        data.append(\"CoverPhotoLink\", document.getElementById(\"PostCoverLink\").value);\r\n        \r\n        await fetch((prefixURLBackend+\"Admin/PostOrUpdatePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                document.getElementById(\"PostID\").value=\"\";\r\n                document.getElementById(\"PostTitle\").value=\"\";\r\n                document.getElementById(\"PostContent\").value=\"\";\r\n                document.getElementById(\"PostCoverLink\").value=\"\";\r\n                setNewPostContent(\"\");\r\n            }\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    }\r\n\r\n    const newPostSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"markdownEditor\">\r\n                <label >ID: </label>\r\n                <input className=\"IDLabel\" type=\"number\" id=\"PostID\" disabled/>\r\n                <button onClick={()=>setNewPostID(null)}>Set NULL For New Post</button>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Title: </label>\r\n                <input type=\"text\" id=\"PostTitle\" />\r\n                <div className=\"break\"/>\r\n\r\n                <label>Date: </label>\r\n                <input type=\"datetime-local\" id=\"PostDate\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Category: </label>\r\n                <select id=\"PostCategory\" >\r\n                {\r\n                    categories.map(c=>\r\n                    {\r\n                        return(\r\n                            <option value={c.NameOfCategory}>\r\n                                {c.NameOfCategory}\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n                </select>\r\n\r\n                <div className=\"break\"/>\r\n\r\n                <label>Cover Link: </label>\r\n                <input type=\"text\" id=\"PostCoverLink\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <textarea className=\"textArea\" id=\"PostContent\" \r\n                    onKeyDown={(e)=>\r\n                    {\r\n                        if(e.keyCode == 9) \r\n                        { \r\n                            e.preventDefault();\r\n\r\n                            const element=document.getElementById(\"PostContent\");\r\n\r\n                            const start = element.selectionStart;\r\n                            const end = element.selectionEnd;\r\n\r\n                            element.value = element.value.substring(0, start) + \"\\t\" + element.value.substring(end);\r\n\r\n                            element.selectionStart = element.selectionEnd = start + 1;\r\n                        }\r\n                    }}\r\n                />\r\n                \r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}} \r\n                    remarkPlugins={[remarkMath]}\r\n                    children={newPostContent} \r\n                    className={\"markdown\"} />\r\n                <div className=\"break\"/>\r\n\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#000000\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    marginRight:\"7px\"\r\n                    }}\r\n                    onClick={()=>{setNewPostContent(document.getElementById(\"PostContent\").value)}}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Review\r\n                </Button>\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#0c7d06\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    }}\r\n\r\n                    onClick={()=>postOrUpdatePost()}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Post\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"adminScreen\">\r\n            {commentsSection()}\r\n            {categoriesSection()}\r\n            {postsSection()}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Pie, Line} from \"react-chartjs-2\"\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport PanelAdmin from \"../PanelAdmin/PanelAdmin\"\r\n\r\nimport \"./Admin.css\"\r\n\r\nexport default function Admin()\r\n{\r\n    const [commentsCountries, setCommentsCountries]=React.useState([]);\r\n    const [commentsCountriesCount, setCommentsCountriesCount]=React.useState([]);\r\n    const [commentsDate, setCommentsDate]=React.useState([]);\r\n    const [commentsDateCount, setCommentsDateCount]=React.useState([]);\r\n\r\n    const [user, setUser]=React.useState({});\r\n    const [isSessionActive, setIsSessionActive]=React.useState(false);\r\n\r\n    React.useEffect(()=>\r\n    {\r\n        loadCommentsCountriesInfo();\r\n        loadCommentsMonthsInfo();\r\n    }, []);\r\n\r\n    const loadCommentsCountriesInfo=()=>\r\n    {\r\n        const tempCommentsCountries=[];\r\n        const tempCommentsCountriesCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByCountries.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsCountries.push(row.Country);\r\n                    tempCommentsCountriesCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsCountries(tempCommentsCountries);\r\n                setCommentsCountriesCount(tempCommentsCountriesCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getMonthName(number)\r\n    {\r\n        switch(number)\r\n        {\r\n            case \"1\":\r\n                return \"January\";\r\n            case \"2\":\r\n                return \"Frebruary\";\r\n            case \"3\":\r\n                return \"March\";\r\n            case \"4\":\r\n                return \"April\";\r\n            case \"5\":\r\n                return \"May\";\r\n            case \"6\":\r\n                return \"June\";\r\n            case \"7\":\r\n                return \"July\";\r\n            case \"8\":\r\n                return \"August\";\r\n            case \"9\":\r\n                return \"September\";\r\n            case \"10\":\r\n                return \"October\";\r\n            case \"11\":\r\n                return \"November\";\r\n            default:\r\n                return \"December\";\r\n        };\r\n    };\r\n\r\n    const loadCommentsMonthsInfo=()=>\r\n    {\r\n        const tempCommentsMonths=[];\r\n        const tempCommentsMonthsCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByMonths.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsMonths.push(getMonthName(row.CommentsMonth));\r\n                    tempCommentsMonthsCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsDate(tempCommentsMonths);\r\n                setCommentsDateCount(tempCommentsMonthsCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getLoopColorsByLength(len)\r\n    {\r\n        const colors=[\"red\", \"blue\", \"yellow\", \"orange\", \"brown\", \"pink\"];\r\n        let temp=0;\r\n\r\n        while(colors.length<len)\r\n        {\r\n            colors.push(colors[(temp++)%colors.length]);\r\n        }\r\n\r\n        return colors;\r\n    };\r\n\r\n    const submit=(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Username\", document.getElementById(\"Username\").value);\r\n        formData.append(\"Password\", document.getElementById(\"Password\").value);\r\n\r\n        fetch((prefixURLBackend+\"Admin/ReadUserExist.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: formData\r\n        }).then((response)=>{response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                setUser({\r\n                    Username: document.getElementById(\"Username\").value,\r\n                    Password: document.getElementById(\"Password\").value\r\n                });\r\n                setIsSessionActive(true);\r\n            }\r\n        })});      \r\n    };\r\n\r\n    if(isSessionActive==false)\r\n    {\r\n        return(\r\n            <div className=\"loginScreen\">\r\n                <form className=\"loginForm\" onSubmit={(e)=>submit(e)}>\r\n                    <h1>Admin Panel</h1>\r\n                    <input className=\"usernameInput\" name=\"Username\" id=\"Username\" \r\n                            type=\"password\" placeholder=\"Username\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"passwordInput\" name=\"Password\" id=\"Password\" \r\n                            type=\"password\" placeholder=\"Password\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"loginPostButton\" name=\"loginSubmit\" id=\"loginSubmit\" \r\n                                                type=\"submit\" value=\"Login\" />   \r\n                </form>\r\n    \r\n                <h1 align=\"center\">Statistics</h1>\r\n    \r\n                <div className=\"chartArea\">\r\n                    <Pie data=\r\n                        {{\r\n                            labels: commentsCountries,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: getLoopColorsByLength(commentsCountriesCount.length),\r\n                                data: commentsCountriesCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Countries of Comments\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div> \r\n    \r\n                <div className=\"chartArea\">\r\n                    <Line data=\r\n                        {{\r\n                            labels: commentsDate,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                                data: commentsDateCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Months of Comments Counts\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    else\r\n    {\r\n        return(\r\n            <PanelAdmin user={user} />\r\n        );\r\n    }\r\n}","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport About from \"./Pages/About/About\";\nimport Admin from \"./Pages/Admin/Admin\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n    <HashRouter >\n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n\n      <Route exact path=\"/admin\" component={Admin}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}