{"version":3,"sources":["Pages/Post/markdown-styles.module.css","Tools/Spotify/Player.js","Tools/Images/defaultPostImage.jpg","Pages/Blog/Blog.js","Pages/Post/Post.js","Pages/Resume/Resume.js","Pages/About/taza.jpg","Pages/About/About.js","Pages/Statistics/Statistics.js","Tools/auth-helper.js","Pages/Admin/Login.js","Pages/Admin/Admin.js","Pages/Unsubscribe/Unsubscribe.js","Tools/Images/personAndGuitar.jpg","Tools/Header/Header.js","Tools/Footer/Footer.js","App.js","index.js"],"names":["module","exports","Player","React","useState","isUserOffline","setIsUserOffline","songData","setSongData","isPlaying","setIsPlaying","useEffect","a","setPlayerData","fetchToken","token","fetchPlayer","setInterval","basic","Buffer","from","process","toString","fetch","method","headers","Authorization","body","querystring","stringify","grant_type","refresh_token","then","response","ok","json","access_token","catch","error","console","log","isOffline","item","is_playing","items","track","style","margin","textAlign","className","href","external_urls","spotify","target","textDecoration","color","src","album","images","url","marginTop","fontSize","name","artists","Blog","initialCategory","useLocation","pathname","selectedCategory","setSelectedCategory","categories","setCategories","posts","setPosts","page","setPage","loading","setLoading","searchedToken","setSearchedToken","isInitialMount","useRef","hideSelectCategory","fetchCategories","current","length","fetchPosts","delay","setTimeout","clearTimeout","jsonArray","alert","e","urlToFetch","JSON","parse","get","nextPage","hideMoreButton","showMoreButton","updateSelectedCategory","selected","document","getElementById","value","options","selectedIndex","element","visibility","display","convertStringDateTimezoneToClient","stringDate","serverDate","Date","replace","localeCompare","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","id","onChange","map","c","nameOfCategory","type","placeholder","event","post","title","coverPhotoLink","onError","currentTarget","onerror","defaultImage","category","postDate","onClick","fontWeight","align","Post","urlID","split","setPost","isLoading","setIsLoading","clientCountry","setClientCountry","commentParentId","setCommentParentId","nicksByCommentId","useReducer","x","fetchPost","fetchClientCountry","info","country_name","postJson","markdownCodeThemeComponent","props","railscasts","language","substring","children","subscriptionMessage","setSubscriptionMessage","subscriptionButtonMessage","setSubscriptionButtonMessage","postSubscription","email","classList","add","text","reportValidity","printComments","userComments","parentComment","nick","commentDate","content","commentForm","inverseParent","childComment","parentId","scrollToComment","commentId","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","postComment","preventDefault","comment","postId","parseInt","country","notifyReply","checked","addedComment","added","push","onSubmit","autoComplete","required","minLength","maxLength","width","alt","rehypePlugins","rehypeRaw","remarkGfm","rehypeKatex","components","code","remarkPlugins","remarkMath","reactMarkDown","class","onKeyPress","Resume","height","allow","About","logo","frameBorder","allowFullScreen","scrolling","frameborder","getLoopColorsByLength","len","colors","temp","Statistics","countriesOfComments","numberOfCommentsPerMonth","topCommentersNicks","topCommentedPosts","statistics","setStatistics","fetchStatistics","data","marginBottom","columns","field","headerName","flex","sortable","disableColumnMenu","rows","getRowId","row","pageSize","renderCell","params","whiteSpace","overflow","textOverflow","prefixURLFrontend","labels","datasets","backgroundColor","commentsCount","responsive","maintainAspectRatio","plugins","legend","number","getMonthName","commentsMonth","pointRadius","TOKEN_KEY","setToken","localStorage","setItem","login","disableButton","setDisableButton","history","useHistory","submit","status","removeItem","Grid","Paper","elevation","padding","Avatar","TextField","label","variant","fullWidth","Button","disabled","Admin","setUserComments","subscriptions","setSubscriptions","forceUpdate","fetchUserComments","fetchSubscriptions","APIheaders","getItem","putComment","newData","deleteComment","deleteSubscription","postCategory","deleteCategory","setWrittenPost","postPost","resetWrittenPost","putPost","deletePost","getWrittenPost","newPostSection","onKeyDown","keyCode","start","selectionStart","end","selectionEnd","marginRight","editable","NoRowsOverlay","Stack","alignItems","justifyContent","Toolbar","GridToolbar","onCellEditCommit","Unsubscribe","setError","Header","redirect","Footer","App","exact","path","component","Login","ReactDOM","render","StrictMode"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,cAAgB,yC,6KCKnB,SAASC,IAEpB,MAA0CC,IAAMC,UAAS,GAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgCH,IAAMC,SAAS,MAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCL,IAAMC,UAAS,GAAjD,mBAAOK,EAAP,KAAkBC,EAAlB,KAEAP,IAAMQ,UAAN,sBAAgB,4BAAAC,EAAA,6DAENC,EAFM,+BAAAD,EAAA,MAEU,4BAAAA,EAAA,sEAEEE,IAFF,cAEZC,EAFY,gBAGZC,EAAYD,GAHA,2CAFV,8DAQNF,IARM,OAUwBI,YAAW,sBAAC,sBAAAL,EAAA,sEAEtCC,IAFsC,2CAG7C,MAbS,2CAgBb,IAEH,IAAMC,EAAU,uCAAG,8BAAAF,EAAA,6DAETM,EAAQC,EAAOC,KAAP,UAAeC,mCAAf,YAA0DA,qCAA+CC,SAAS,UAC5HP,EAAQ,KAHG,SAKTQ,MAAMF,yCAAyC,CAACG,OAAQ,OAC1DC,QAAS,CAACC,cAAc,SAAD,OAAWR,GAAS,eAAgB,qCAC3DS,KAAMC,IAAYC,UAAU,CAACC,WAAY,gBACrCC,cAAeV,0IAAgDW,KAHjE,uCAGsE,WAAMC,GAAN,eAAArB,EAAA,0DAErEqB,EAASC,GAF4D,gCAIjDD,EAASE,OAJwC,OAI9DA,EAJ8D,OAKpEpB,EAAQoB,EAAKC,aALuD,2CAHtE,uDAUHC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAff,gCAiBRvB,GAjBQ,2CAAH,qDAoBVC,EAAW,uCAAG,WAAMD,GAAN,eAAAH,EAAA,6DAEZ6B,GAAY,EAFA,SAIVlB,MAAMF,yDAA0C,CAACG,OAAQ,MAAOC,QAAS,CAACC,cAAc,UAAD,OAAYX,MAAWiB,KAA9G,uCAAmH,WAAMC,GAAN,eAAArB,EAAA,0DAElHqB,EAASC,GAFyG,gCAI9FD,EAASE,OAJqF,OAI3GA,EAJ2G,OAKjHM,GAAY,EACZnC,GAAiB,GACjBE,EAAY2B,EAAKO,MACjBhC,EAAayB,EAAKQ,YAR+F,2CAAnH,uDAUHN,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAdd,WAgBbG,EAhBa,gCAkBNlB,MAAMF,+DAA2C,CAACG,OAAQ,MAAOC,QAAS,CAACC,cAAc,UAAD,OAAYX,MAAWiB,KAA/G,uCAAoH,WAAMC,GAAN,eAAArB,EAAA,0DAEnHqB,EAASC,GAF0G,gCAI/FD,EAASE,OAJsF,OAI5GA,EAJ4G,OAKlH7B,GAAiB,GACjBE,EAAY2B,EAAKS,MAAM,GAAGC,OAC1BnC,GAAa,GAPqG,2CAApH,uDASH2B,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MA3BlB,2CAAH,sDA+BjB,OAAe,MAAZ/B,EAGK,qBAAKuC,MAAO,CAACC,OAAQ,uBAAwBC,UAAW,UAAxD,SACI,cAAC,aAAD,MAKH3C,EAuBD,sBAAK4C,UAAU,gBAAf,UACI,mBAAGC,KAAM3C,EAAS4C,cAAcC,QAASC,OAAO,SAASP,MAAO,CAACQ,eAAgB,OAAQC,MAAO,SAAhG,SACI,qBAAKN,UAAU,qBAAqBO,IAAKjD,EAASkD,MAAMC,OAAO,GAAGC,QAEtE,qBAAKV,UAAU,oBAAf,SACI,oBAAGC,KAAK,8EACJG,OAAO,SAASP,MAAO,CAACQ,eAAgB,OAAQC,MAAO,SAD3D,UAEI,mBAAGN,UAAU,iBAAiBH,MAAO,CAACc,UAAW,MAAOC,SAAU,OAAQN,MAAM,WAChF,mBAAGN,UAAU,wBAAb,SAAsC1C,EAASuD,OAC/C,mBAAGb,UAAU,0BAAb,SAAwC1C,EAASwD,QAAQ,GAAGD,OAC5D,mBAAGb,UAAU,0BAAb,SAAwC,oBA9BpD,sBAAKA,UAAU,gBAAf,UACI,mBAAGC,KAAM3C,EAAS4C,cAAcC,QAASC,OAAO,SAASP,MAAO,CAACQ,eAAgB,OAAQC,MAAO,SAAhG,SACI,qBAAKN,UAAU,qBAAqBO,IAAKjD,EAASkD,MAAMC,OAAO,GAAGC,QAEtE,qBAAKV,UAAU,oBAAf,SACI,oBAAGC,KAAK,8EACJG,OAAO,SAASP,MAAO,CAACQ,eAAgB,OAAQC,MAAO,SAD3D,UAEI,mBAAGN,UAAU,iBAAiBH,MAAO,CAACc,UAAW,MAAOC,SAAU,OAAQN,MAAM,WAChF,mBAAGN,UAAU,wBAAb,SAAsC1C,EAASuD,OAC/C,mBAAGb,UAAU,0BAAb,SAAwC1C,EAASwD,QAAQ,GAAGD,OAC5D,mBAAGb,UAAU,0BAAb,SAAwCxC,EAAY,UAAY,sB,+eCvGzE,MAA0B,6C,OCS1B,SAASuD,IAEpB,IAAMC,EAAyC,KAAxBC,cAAcC,SAAe,MAAM,WAC1D,EAAgDhE,IAAMC,SAAS6D,GAA/D,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAoClE,IAAMC,SAAS,IAAnD,mBAAOkE,EAAP,KAAmBC,EAAnB,KAEA,EAA0BpE,IAAMC,SAAS,IAAzC,mBAAOoE,EAAP,KAAcC,EAAd,KACA,EAAwBtE,IAAMC,SAAS,GAAvC,mBAAOsE,EAAP,KAAaC,EAAb,KACA,EAA8BxE,IAAMC,UAAS,GAA7C,mBAAOwE,EAAP,KAAgBC,EAAhB,KACA,EAA0C1E,IAAMC,SAAS,IAAzD,mBAAO0E,EAAP,KAAsBC,EAAtB,KAEMC,EAAiB7E,IAAM8E,QAAO,GAEpC9E,IAAMQ,UAAN,sBAAgB,sBAAAC,EAAA,sDAEQ,OAAjBqD,EACCiB,IAEAC,IALQ,2CAMb,IAGHhF,IAAMQ,UAAN,sBAAgB,sBAAAC,EAAA,0DAEToE,EAAeI,QAFN,oDAMZZ,EAAMa,OAAS,EACN,GAANX,EAPS,gCAQFY,IARE,6BAURX,EAAQ,GAVA,2CAYb,CAACP,IAEJjE,IAAMQ,UAAN,sBAAgB,sBAAAC,EAAA,0DAEToE,EAAeI,QAFN,uBAIRJ,EAAeI,SAAU,EAJjB,0CAQNE,IARM,2CASb,CAACZ,IAEJvE,IAAMQ,WAAU,WAEZ,IAAGqE,EAAeI,QAAlB,CAGA,IAAMG,EAAQC,YAAW,WAErBhB,EAAMa,OAAS,EACN,GAANX,EACCY,IAEAX,EAAQ,KACb,KAEH,OAAO,kBAAMc,aAAaF,OAC3B,CAACT,IAGJ,IAAMK,EAAe,uCAAC,sBAAAvE,EAAA,4DAECS,0EAFD,SAIKE,MAFJF,2EAEsBW,KAAlB,uCAAuB,WAAMC,GAAN,eAAArB,EAAA,0DAEvCqB,EAASC,GAF8B,gCAIdD,EAASE,OAJK,OAIhCuD,EAJgC,OAKtCnB,EAAcmB,GALwB,sBAQtCC,MAAM,gCARgC,2CAAvB,uDASpBtD,OAAM,SAAAuD,GAELrD,QAAQC,IAAIoD,MAfE,yDAAD,qDA6CfN,EAAU,uCAAC,4BAAA1E,EAAA,6DAEbiE,GAAW,GAEPgB,EAAaxE,8FAAqEqD,EAAO,cAAgBI,EACrF,QAArBV,IACCyB,GAAc,cAAgBzB,GANrB,SAQU7C,MAAMsE,GAAY7D,KAAlB,uCAAuB,WAAMC,GAAN,eAAArB,EAAA,0DAEvCqB,EAASC,GAF8B,gCAIdD,EAASE,OAJK,OAIhCuD,EAJgC,OAKtCjB,EAAS,GAAD,mBAAKD,GAAL,YAAekB,KAGG,OADRI,KAAKC,MAAM9D,EAASR,QAAQuE,IAAI,mBACrCC,SACTC,IAEAC,IAXkC,uBActCR,MAAM,gCAdgC,4CAAvB,uDAepBtD,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAvBP,cAyBbf,GAAW,GAzBE,2CAAD,qDA4BVuB,EAAuB,WAEzB,IAAMC,EAAWC,SAASC,eAAe,oBACnCC,EAAQH,EAASI,QAAQJ,EAASK,eAAeF,MACvDnC,EAAoBmC,IAGlBtB,EAAmB,WAErB,IAAMyB,EAAQL,SAASC,eAAe,oBACnCI,IACCA,EAAQ7D,MAAM8D,WAAa,WAG7BV,EAAe,WAEjB,IAAMS,EAAQL,SAASC,eAAe,mBACnCI,IACCA,EAAQ7D,MAAM+D,QAAU,SAG1BV,EAAe,WAEjB,IAAMQ,EAAQL,SAASC,eAAe,mBACnCI,IACCA,EAAQ7D,MAAM+D,QAAU,iBAG1BC,EAAkC,SAACC,GAErC,IAAMC,EAAW,IAAIC,KAAKF,EAAWG,QAAQ,IAAK,KAAK,WAEvD,OAAwD,GAArDF,EAAW1F,WAAW6F,cAAc,gBAE5BH,EAAWI,eAAe,QAAS,CAAEC,SAAUC,KAAKC,iBAAiBC,kBAAkBH,SAC1FI,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAAWC,KAAM,UAAWC,OAAO,UAC5EC,QAAQ,KAIT,IAAIb,MAAOG,eAAe,QAAS,CAAGK,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAClFC,KAAM,UAAWC,OAAO,UAAWC,QAAQ,KAoDnD,OACI,gCAjJI,sBAAK7E,UAAU,gCAAf,UACI,yBAAQ8E,GAAG,mBAAmBC,SAAU,WAAK5B,KAA7C,UACI,wBAAQI,MAAM,MAAd,iBAEIlC,EAAW2D,KAAI,SAAAC,GAEX,OACI,wBAAQ1B,MAAO0B,EAAEC,eAAjB,SACKD,EAAEC,uBAOvB,8BACI,uBAAOC,KAAK,OAAOC,YAAY,YAAYL,SAAU,SAACM,GAAD,OAASvD,EAAiBuD,EAAMjF,OAAOmD,eAiFrGhC,EAAMa,OAAO,EAGR,gCACI,qBAAKpC,UAAU,QAAf,SAEIuB,EAAMyD,KAAI,SAACM,GAEP,OACI,oBAAGtF,UAAU,WAAWC,KAAM7B,8CAA2CkH,EAAKR,GAAGzG,WAAW,IAAIiH,EAAKC,MAAMtB,QAAQ,IAAK,OAAxH,UACI,qBAAKjE,UAAU,gBAAgBO,IAAK+E,EAAKE,eAAgBC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cAAqBA,EAAcC,QAAU,KAAMD,EAAcnF,IAAIqF,KAC1I,sBAAK5F,UAAU,sBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BsF,EAAKC,QACpC,mBAAGvF,UAAU,mBAAb,SAAiC,aAAasF,EAAKO,WACnD,mBAAG7F,UAAU,eAAb,SAA6B6D,EAAkCyB,EAAKQ,uBAQxF,qBAAK9F,UAAU,sBAAf,SACI,wBAAQA,UAAU,kBAAkB8E,GAAG,kBACnCiB,QAAS,kBAAIrE,EAAQD,EAAK,IAD9B,uBAORE,EAGA,qBAAK9B,MAAO,CAACC,OAAQ,uBAAwBC,UAAW,UAAxD,SACI,cAAC,aAAD,MAQJ,oBAAIF,MAAO,CAACe,SAAS,OAAQoF,WAAW,OAAQC,MAAM,SAAtD,sC,8FCvND,SAASC,IAEpB,IAEMC,EAFYlF,cAAcC,SACDkF,MAAM,KACV,GAE3B,EAAwBlJ,IAAMC,SAAS,MAAvC,mBAAOmI,EAAP,KAAae,EAAb,KACA,EAAkCnJ,IAAMC,UAAS,GAAjD,mBAAOmJ,EAAP,KAAkBC,EAAlB,KAEA,EAAwCrJ,IAAMC,SAAS,WAAvD,mBAAOqJ,EAAP,KAAsBC,EAAtB,KAEA,EAA8CvJ,IAAMC,SAAS,MAA7D,mBAAOuJ,EAAP,KAAwBC,EAAxB,KACMC,EAAmB,GAEzB,EAAwB1J,IAAM2J,YAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAArD,oBAEA5J,IAAMQ,UAAN,sBAAgB,sBAAAC,EAAA,sEAENoJ,IAFM,uBAGNC,IAHM,2CAIb,IAEH,IAAMA,EAAkB,uCAAC,sBAAArJ,EAAA,sEAEfW,MAAM,0BAA0BS,KAAhC,uCAAqC,WAAMC,GAAN,eAAArB,EAAA,0DAEpCqB,EAASC,GAF2B,gCAIhBD,EAASE,OAJO,OAI7B+H,EAJ6B,OAKnCR,EAAiBQ,EAAKC,cALa,2CAArC,uDAOH9H,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MATT,2CAAD,qDAYlB0H,EAAS,uCAAC,4BAAApJ,EAAA,6DAEZ4I,GAAa,GAEP3D,EAAaxE,uEAA8C+H,EAAM9H,WAJ3D,SAKNC,MAAMsE,GAAY7D,KAAlB,uCAAuB,WAAMC,GAAN,eAAArB,EAAA,0DAEtBqB,EAASC,GAFa,gCAIED,EAASE,OAJX,OAIfiI,EAJe,OAKrBd,EAAQc,GALa,2CAAvB,uDAOH/H,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAZlB,OAcZkH,GAAa,GAdD,2CAAD,qDAiBTa,EAA2B,SAACC,GAE9B,OACI,cAAC,IAAD,CAAmBxH,MAAOyH,IAAYC,SAAWF,EAAMrH,UAAWqH,EAAMrH,UAAUwH,UAAU,GAAG,GAC3FC,SAAWJ,EAAMI,SAAUJ,EAAMI,SAAS,MAIhD5D,EAAkC,SAACC,GAErC,IAAMC,EAAW,IAAIC,KAAKF,EAAWG,QAAQ,IAAK,KAAK,WAEvD,OAAwD,GAArDF,EAAW1F,WAAW6F,cAAc,gBAE5BH,EAAWI,eAAe,QAAS,CAAEC,SAAUC,KAAKC,iBAAiBC,kBAAkBH,SAC1FI,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAAWC,KAAM,UAAWC,OAAO,UAC5EC,QAAQ,KAIT,IAAIb,MAAOG,eAAe,QAAS,CAAGK,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAClFC,KAAM,UAAWC,OAAO,UAAWC,QAAQ,KAwBnD,EAAsD3H,IAAMC,SAAS,8BAArE,mBAAOuK,EAAP,KAA4BC,EAA5B,KACA,EAAkEzK,IAAMC,SAAS,aAAjF,mBAAOyK,EAAP,KAAkCC,EAAlC,KAEMC,EAAgB,uCAAG,4BAAAnK,EAAA,6DAErBkK,EAA6B,WAEvBE,EAAQ,CAACA,MAAO1E,SAASC,eAAe,uBAAuBC,OAClDnF,gFALE,SAMfE,MADaF,gFACO,CAACG,OAAQ,OAAQC,QAAS,CAAC,eAAgB,oBACjEE,KAAMmE,KAAKjE,UAAUmJ,KAAUhJ,KAD7B,uCACkC,WAAMC,GAAN,iBAAArB,EAAA,0DAEjCqB,EAASC,GAFwB,gBAIhC,UAAAoE,SAASC,eAAe,wBAAxB,SAA0C0E,UAAUC,IAAI,QAJxB,sCAQVjJ,EAASkJ,OARC,OASD,cATC,OASrBV,UAAU,EAAG,IAEpB,UAAAnE,SAASC,eAAe,wBAAxB,SAA0C0E,UAAUC,IAAI,QACxDN,EAAuB,iCAIvBtE,SAASC,eAAe,uBAAuB6E,iBAC/CN,EAA6B,cAjBD,2CADlC,uDAqBHzI,OAAM,SAAAuD,GAAC,OAAIgF,EAAuB,sBA3BhB,2CAAH,qDAsDhBS,EAAc,WACnB,IAAD,EACI,eAAO,EACH9C,EAAK+C,oBADT,aACI,EAAmBrD,KAAI,SAAAsD,GAInB,OAFA1B,EAAiB0B,EAAcxD,IAAMwD,EAAcC,KAG/C,gCACI,sBAAKvI,UAAU,kBAAkB8E,GAAIwD,EAAcxD,GAAGzG,WAAtD,UACI,oBAAI2B,UAAU,kBAAd,SAAiCsI,EAAcC,OAC/C,mBAAGvI,UAAU,kBAAb,SAEI6D,EAAkCyE,EAAcE,eAGpD,mBAAGxI,UAAU,qBAAb,SAAmCsI,EAAcG,UACjD,mBAAGzI,UAAU,mBAAmB+F,QAAS,kBACrCY,EAAoBD,IAAoB4B,EAAcxD,GAAMwD,EAAcxD,GAAK,OADnF,SAGK4B,IAAoB4B,EAAcxD,GAAM,QAAU,oBAKtD4B,IAAoB4B,EAAcxD,GAAM,KAAO4D,IAGhDJ,EAAcK,cAAc3D,KAAI,SAAA4D,GAI5B,OAFAhC,EAAiBgC,EAAa9D,IAAM8D,EAAaL,KAG7C,gCACI,sBAAKvI,UAAW,uCAAwC8E,GAAI8D,EAAa9D,GAAGzG,WAA5E,UACI,oBAAI2B,UAAU,kBAAd,SAAiC4I,EAAaL,OAC9C,mBAAGvI,UAAU,kBAAb,SAEI6D,EAAkC+E,EAAaJ,eAGnD,oBAAGxI,UAAU,qBAAb,UACA,4BAAKsI,EAAcxD,IAAM8D,EAAaC,SAAY,GAAK,IAAIjC,EAAiBgC,EAAaC,YAErF,IAAID,EAAaH,WAGrB,mBAAGzI,UAAU,mBAAmB+F,QAAS,kBACrCY,EAAoBD,IAAoBkC,EAAa9D,GACjD8D,EAAa9D,GAAK,OAF1B,SAIK4B,IAAoBkC,EAAa9D,GAAM,QAAU,oBAKrD4B,IAAoBkC,EAAa9D,GAAM,KAAO4D,iBAcjFI,EAAkB,SAACC,GAErB,IAEMC,EADU3F,SAASC,eAAeyF,EAAU1K,YAChC4K,wBAAwBC,IAAMC,OAAOC,aAFtC,GAIjBD,OAAOE,SAAS,CAACH,IAAKF,EAAGM,SAAU,YAGjCC,EAAW,uCAAC,WAAM5G,GAAN,eAAAhF,EAAA,6DAEdgF,EAAE6G,iBAEIC,EACN,CACIC,OAAQC,SAASxD,GACjB0C,SAAUnC,EACV6B,KAAMlF,SAASC,eAAe,QAAQC,MACtCkF,QAASpF,SAASC,eAAe,WAAWC,MAC5CqG,QAASpD,EACTuB,MAAO1E,SAASC,eAAe,SAASC,MACxCsG,YAAaxG,SAASC,eAAe,SAASwG,QAAU,EAAI,GAG7C1L,6EAfL,SAgBRE,MADaF,6EAEf,CAACG,OAAQ,OAAQG,KAAMmE,KAAKjE,UAAU6K,GACtCjL,QAAS,CAAC,eAAgB,sBAAsBO,KAF9C,uCAEmD,WAAMC,GAAN,iBAAArB,EAAA,0DAElDqB,EAASC,GAFyC,iCAItBD,EAASE,OAJa,OAiCjD,IA7BM6K,EAJ2C,OAKjDnD,EAAiBmD,EAAajF,IAAMiF,EAAaxB,KAE7CyB,GAAQ,EACZ1E,EAAK+C,aAAarD,KAAI,SAACsD,GAEhBA,EAAcxD,KAAOiF,EAAalB,UAEjCP,EAAcK,cAAcsB,KAAKF,GACjCC,GAAQ,GAIR1B,EAAcK,cAAc3D,KAAI,SAAC4D,GAE1BA,EAAa9D,KAAOiF,EAAalB,WAEhCP,EAAcK,cAAcsB,KAAKF,GACjCC,GAAQ,SAMpBA,GACA1E,EAAK+C,aAAa4B,KAAKF,GAE3BpD,GAAoB,GACpBA,EAAmB,MAC0C,MAAvDtD,SAASC,eAAeyG,EAAajF,GAAGzG,cAC9CyK,EAAgBiB,EAAajF,IAlCoB,oCAsCjDxF,QAtCiD,UAsC/BN,EAASkJ,OAtCsB,yBAsCzC3I,IAtCyC,4DAFnD,uDAyCHH,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAzDN,2CAAD,sDA6DX+F,EAAc,WAEhB,OACI,uBAAMwB,SAAU,SAACvH,GAAD,OAAK4G,EAAY5G,IAAI3C,UAAU,8BAA/C,UACI,uBAAOA,UAAU,oBAAjB,kBACA,uBAAOA,UAAU,YAAY8E,GAAG,OAAOK,KAAK,OAAOC,YAAY,kBAC3D+E,aAAa,MAAMC,UAAU,EAAMC,UAAW,IAElD,uBAAOrK,UAAU,oBAAjB,mBACA,uBAAOA,UAAU,aAAa8E,GAAG,QAAQK,KAAK,QAAQC,YAAY,yBAC9D+E,aAAa,MAAME,UAAW,EAAGD,UAAU,IAE/C,uBAAOpK,UAAU,oBAAjB,qBACA,uBAAOA,UAAU,eAAe8E,GAAG,UAAUK,KAAK,OAAOC,YAAY,wBACjE+E,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,MAEhE,uBAAOtK,UAAU,oBAAoBa,KAAK,SAASiE,GAAG,SAASK,KAAK,SAAS5B,MAAM,SAEnF,uBAAOvD,UAAU,kBAAkB8E,GAAG,QAAQK,KAAK,aACnD,uBAAOnF,UAAU,oBAAjB,qCAhBJ,IAgByE,uBAAK,2BAiBtF,OAAW,MAARsF,EAGK,sBAAKzF,MAAO,CAAC0K,MAAM,QAAnB,UA9PA,sBAAKvK,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKwK,IAAI,GAAGxK,UAAU,YAAYO,IAAK+E,EAAKE,eACxCC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cAAqBA,EAAcC,QAAU,KAAMD,EAAcnF,IAAIqF,KACjF,sBAAK5F,UAAU,iBAAf,UACI,oBAAIA,UAAU,aAAaiG,MAAM,SAAjC,SAA2CX,EAAKC,QAChD,oBAAIvF,UAAU,WAAWiG,MAAM,SAA/B,SAAyCpC,EAAkCyB,EAAKQ,kBAG5F,uBACA,cAAC,IAAD,CAAe2E,cAAe,CAACC,IAAWC,IAAWC,KACjDC,WAAY,CAACC,KAAM1D,GACnB2D,cAAe,CAACC,KAChBvD,SAAUnC,EAAKmD,QAASzI,UAAWH,IAAMoL,mBAyCjD,sBAAKC,MAAM,2BAAX,UACI,8EACA,qBAAKA,MAAM,yBAAX,SACI,uBAAMA,MAAM,gBAAgBpG,GAAG,gBAA/B,UACI,uBAAOoG,MAAM,sBAAsBpG,GAAG,sBAClCK,KAAK,QAAQC,YAAY,mBAAmB+F,WAAY,SAACxI,GACvC,UAAXA,EAAEmI,MAEDhD,OAGZ,yBAAQoD,MAAM,kBAAkB/F,KAAK,SAASL,GAAG,kBAAkBiB,QAAS,kBAAI+B,KAAhF,UACI,sBAAMoD,MAAM,gBAAZ,SAA6BtD,IAC7B,sBAAMsD,MAAM,eAAZ,SAA4BxD,eA4LH,qBAAK1H,UAAU,mBAbxD,sBAAKA,UAAU,eAAf,UAE4B,MAAnB0G,EAA2B,KAAOgC,IAEvC,qBAAK1I,UAAU,oBAAf,SAAoCoI,YAc7C9B,EAGK,qBAAKzG,MAAO,CAACC,OAAQ,uBAAwBC,UAAW,UAAxD,SACI,cAAC,aAAD,MAOR,oBAAIF,MAAO,CAACe,SAAS,OAAQoF,WAAW,OAAQC,MAAM,SAAtD,mC,cC5WO,SAASmF,IAEpB,OACI,8BACI,wBAAQ7K,IAAI,4EACRgK,MAAM,OACNc,OAAO,QACPC,MAAM,e,aCZP,MAA0B,iC,OCM1B,SAASC,IAEpB,OACI,sBAAKvL,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAWO,IAAKiL,IAC/B,uBACA,0JAEI,uBAAK,uBAFT,iMAII,uBAAK,uBAJT,gQAMI,uBAAK,uBANT,2IAQI,uBAAK,uBART,wJAWA,uBAAK,uBACL,uBACA,uBACA,cAACvO,EAAA,EAAD,IACA,uBACA,oHAEI,uBAAK,uBAFT,kUAKA,uBAAK,uBACL,gCACI,wBACIsN,MAAM,OACNc,OAAO,MACP9K,IAAG,4CACHkL,YAAY,IACZH,MAAM,2FACNI,iBAAe,EACfnG,MAAM,qBAGV,wBACIhF,IAAK,0NACLgK,MAAM,OACNc,OAAO,MACPM,UAAU,KACVC,YAAY,KACZN,MAAM,aAGV,wBACI/K,IAAK,0NACLgK,MAAM,OACNc,OAAO,MACPM,UAAU,KACVC,YAAY,KACZN,MAAM,mB,4BCpB1B,SAASO,EAAsBC,GAK3B,IAHA,IAAMC,EAAO,CAAC,MAAO,OAAQ,SAAU,SAAU,QAAS,OAAQ,UAC9DC,EAAK,EAEHD,EAAO3J,OAAO0J,GAEhBC,EAAO9B,KAAK8B,EAAQC,IAAQD,EAAO3J,SAGvC,OAAO2J,EAGI,SAASE,IAEpB,MAAoC/O,IAAMC,SACtC,CACI+O,oBAAqB,GACrBC,yBAA0B,GAC1BC,mBAAoB,GACpBC,kBAAmB,KAL3B,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,EAA8BrP,IAAMC,UAAS,GAA7C,mBAAOwE,EAAP,KAAgBC,EAAhB,KAEA1E,IAAMQ,UAAN,sBAAgB,sBAAAC,EAAA,sEAEN6O,IAFM,2CAGb,IAEH,IAAMA,EAAe,uCAAG,sBAAA7O,EAAA,4DAEDS,4EAFC,SAGdE,MADaF,6EACKW,KAAlB,uCAAuB,WAAMC,GAAN,eAAArB,EAAA,0DAEtBqB,EAASC,GAFa,gCAIFD,EAASE,OAJP,OAIfuN,EAJe,OAKrBF,EAAcE,GALO,sBAQrBnN,QAAQC,IAAIP,EAASkJ,MARA,2CAAvB,uDASH9I,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAZA,OAcpBf,GAAW,GAdS,2CAAH,qDAiBrB,OAAGD,EAEK,qBAAK9B,MAAO,CAACC,OAAQ,uBAAwBC,UAAW,UAAxD,SACI,cAAC,aAAD,MAKR,gCACI,iCAAQ,wDACR,qBAAKF,MAAO,CAAEwL,OAAQ,IAAKd,MAAO,OAASmC,aAAa,QAAxD,SACI,cAAC,IAAD,CACIC,QACA,CACI,CAACC,MAAM,OAAQC,WAAW,OAAQC,KAAK,EAAGC,UAAS,EAAOC,mBAAkB,GAC5E,CAACJ,MAAM,gBAAiBC,WAAW,iBAAkBC,KAAK,EAAGC,UAAS,EAAOC,mBAAkB,IAGnGC,KAAMX,EAAWF,mBACjBc,SAAU,SAACC,GAAD,OAASA,EAAI5E,MACvB6E,SAAU,MAIlB,iCAAQ,uDACR,qBAAKvN,MAAO,CAAEwL,OAAQ,IAAKd,MAAO,OAASmC,aAAa,QAAxD,SACI,cAAC,IAAD,CACIC,QACA,CACI,CAACC,MAAM,QAASC,WAAW,QAASC,KAAK,EAAGC,UAAS,EAAOC,mBAAkB,EAAMK,WAAW,SAACC,GAAD,OAE3F,mBAAGzN,MAAO,CAAC+D,QAAS,eAAgB2J,WAAY,SAAUC,SAAU,SAAUC,aAAc,WACxFpN,eAAgB,QAEhBJ,KAAMyN,8CAA8BJ,EAAOxI,GAAK,IAAMwI,EAAO/J,MAHjE,SAGyE+J,EAAO/J,UAEpF,CAACqJ,MAAM,gBAAiBC,WAAW,iBAAkBC,KAAK,EAAGC,UAAS,EAAOC,mBAAkB,IAGnGC,KAAMX,EAAWD,kBACjBa,SAAU,SAACC,GAAD,OAASA,EAAIrI,IACvBsI,SAAU,MAIlB,qBAAKpN,UAAU,YAAf,SACI,cAAC,IAAD,CAAKyM,KACA,CACGkB,OAAQrB,EAAWJ,oBAAoBlH,KAAI,SAAAiC,GAAI,OAAIA,EAAK2C,WACxDgE,SACA,CAAC,CACGC,gBAAiBhC,EAAsBS,EAAWJ,oBAAoB9J,QACtEqK,KAAMH,EAAWJ,oBAAoBlH,KAAI,SAAAiC,GAAI,OAAIA,EAAK6G,oBAI9DtK,QACC,CACGuK,YAAY,EACZC,qBAAqB,EACrBC,QACA,CACIC,OAAO,CAACtK,SAAQ,GAChB2B,MAAM,CAAC2C,KAAK,wBAAyBtE,SAAQ,KAGzDyH,OAAQ,QAGZ,qBAAKrL,UAAU,YAAf,SACI,cAAC,IAAD,CAAMyM,KACD,CACGkB,OAAQrB,EAAWH,yBAAyBnH,KAAI,SAAAiC,GAAI,OAtJ5E,SAAsBkH,GAElB,OAAOA,GAEH,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,YACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,YACX,KAAK,GACD,MAAO,UACX,KAAK,GACD,MAAO,WACX,QACI,MAAO,YA2H6DC,CAAanH,EAAKoH,kBAC1ET,SACA,CAAC,CACGC,gBAAiB,uBACjBpB,KAAMH,EAAWH,yBAAyBnH,KAAI,SAAAiC,GAAI,OAAIA,EAAK6G,iBAC3DQ,YAAa,KAGrB9K,QACC,CACGuK,YAAY,EACZC,qBAAqB,EACrBC,QACA,CACIC,OAAO,CAACtK,SAAQ,GAChB2B,MAAM,CAAC2C,KAAK,4BAA6BtE,SAAQ,KAGzDyH,OAAQ,W,mECjLtBkD,EAAU,gBAET,SAASC,EAAS1Q,GAErB2Q,aAAaC,QAAQH,EAAWzQ,GCGrB,SAAS6Q,IAEpB,MAA0CzR,IAAMC,UAAS,GAAzD,mBAAOyR,EAAP,KAAsBC,EAAtB,KACMC,EAAQC,cAERC,EAAM,uCAAC,WAAMrM,GAAN,eAAAhF,EAAA,6DAETgF,EAAE6G,iBACFqF,GAAiB,GAEXpC,EAAO,CACT,cAAiBpJ,SAASC,eAAe,iBAAiBC,MAC1D,cAAiBF,SAASC,eAAe,iBAAiBC,OAG3CnF,wFAVV,SAWHE,MADaF,wFAEnB,CACIG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBE,KAAMmE,KAAKjE,UAAU6N,KACtB1N,KAPG,uCAOE,WAAMC,GAAN,SAAArB,EAAA,sEAAyBqB,EAASkJ,OAAOnJ,MAAK,SAAAjB,GAE5B,KAAnBkB,EAASiQ,OACRvM,MAAM,0BACiB,KAAnB1D,EAASiQ,QDpB3BR,aAAaS,WAAWX,GCuBVC,EAAS,UAAU1Q,GACnByE,YAAW,WACPuM,EAAQ7E,KAAK,YACd,MAGH3K,QAAQC,IAAIP,MAbZ,mFAPF,uDAqBFI,OAAM,SAAAuD,GAAC,OAAID,MAAM,mCAhCZ,OAkCTmM,GAAiB,GAlCR,2CAAD,sDAyDZ,OACI,qBAAK7O,UAAU,UAAf,SACI,cAACmP,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,UAAW,GAAIxP,MAtBlC,CACIyP,QAAS,OACTjE,OAAQ,QACRd,MAAO,MACPzK,OAAQ,cAkBA,UACI,eAACqP,EAAA,EAAD,CAAMlJ,MAAM,SAAZ,UACI,cAACsJ,EAAA,EAAD,CAAQ1P,MAjB5B,CACIgO,gBAAiB,WAgBD,SACI,cAAC,IAAD,MAEJ,0CAGJ,uBAAM3D,SAAU,SAACvH,GAAD,OAAKqM,EAAOrM,IAAIwH,aAAa,MAA7C,UACI,cAACqF,EAAA,EAAD,CAAW1K,GAAG,gBAAgB2K,MAAM,WAAWrK,YAAY,iBAAiBsK,QAAQ,WAChF7P,MArBxB,CACI6M,aAAc,QAoBoCiD,WAAS,EAACxF,aAAa,MAAMC,UAAQ,IACvE,cAACoF,EAAA,EAAD,CAAW1K,GAAG,gBAAgB2K,MAAM,WAAWrK,YAAY,iBAAiBD,KAAK,WAC7EuK,QAAQ,WAAW7P,MAnB3C,CACI6M,aAAc,QAkBuDiD,WAAS,EAACxF,aAAa,MAAMC,UAAQ,IAE1F,cAACwF,EAAA,EAAD,CAAQzK,KAAK,SAAS7E,MAAM,UAAUoP,QAAQ,YAAYG,SAAUjB,EAAee,WAAS,EAA5F,+B,oBCrExB,SAAS9L,EAAkCC,GAEvC,IAAMC,EAAW,IAAIC,KAAKF,EAAWG,QAAQ,IAAK,KAAK,WAEvD,OAAwD,GAArDF,EAAW1F,WAAW6F,cAAc,gBAE5BH,EAAWI,eAAe,QAAS,CAAEC,SAAUC,KAAKC,iBAAiBC,kBAAkBH,SAC1FI,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAAWC,KAAM,UAAWC,OAAO,UAC5EC,QAAQ,KAIT,IAAIb,MAAOG,eAAe,QAAS,CAAGK,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAClFC,KAAM,UAAWC,OAAO,UAAWC,QAAQ,IAGpC,SAASiL,IAEpB,MAAwC5S,IAAMC,SAAS,IAAvD,mBAAOkL,EAAP,KAAqB0H,EAArB,KACA,EAA0C7S,IAAMC,SAAS,IAAzD,mBAAO6S,EAAP,KAAsBC,EAAtB,KACA,EAAoC/S,IAAMC,SAAS,IAAnD,mBAAOkE,EAAP,KAAmBC,EAAnB,KACA,EAA0BpE,IAAMC,SAAS,IAAzC,mBAAOoE,EAAP,KAAcC,EAAd,KAEA,EAAwBtE,IAAM2J,YAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAA5CoJ,EAAT,oBAEAhT,IAAMQ,UAAN,sBAAgB,sBAAAC,EAAA,sEAENwS,IAFM,uBAGNC,IAHM,uBAINlO,IAJM,uBAKNG,IALM,2CAMb,IAEH,IAAMgO,EAAa,CACf,eAAgB,mBAChB,cF3CC5B,aAAa6B,QAAQ/B,IE8CpB4B,EAAiB,uCAAG,sBAAAxS,EAAA,4DAEHS,6EAFG,SAIhBE,MAFaF,6EAEK,CAAC,OAAU,MAAOI,QAAS6R,IAAatR,KAA1D,uCAA+D,WAAMC,GAAN,eAAArB,EAAA,0DAE9DqB,EAASC,GAFqD,gCAI1CD,EAASE,OAJiC,OAIvDA,EAJuD,OAK7D6Q,EAAgB7Q,GAL6C,2CAA/D,uDAOHE,OAAM,SAAAuD,GAAC,OAAID,MAAM,mCAXE,2CAAH,qDAcjB0N,EAAkB,uCAAG,sBAAAzS,EAAA,4DAEJS,gFAFI,SAIjBE,MAFaF,gFAEK,CAAC,OAAU,MAAOI,QAAS6R,IAAatR,KAA1D,uCAA+D,WAAMC,GAAN,eAAArB,EAAA,0DAE9DqB,EAASC,GAFqD,gCAI1CD,EAASE,OAJiC,OAIvDA,EAJuD,OAK7D+Q,EAAiB/Q,GAL4C,2CAA/D,uDAOHE,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAXG,2CAAH,qDAclBT,EAAe,uCAAG,sBAAAvE,EAAA,4DAEDS,0EAFC,SAIdE,MAFaF,0EAEK,CAAC,OAAU,MAAOI,QAAS6R,IAAatR,KAA1D,uCAA+D,WAAMC,GAAN,SAAArB,EAAA,sEAE3DqB,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIoC,EAAcpC,MAFgB,2CAA/D,uDAGHE,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAPA,2CAAH,qDAUfN,EAAU,uCAAG,sBAAA1E,EAAA,4DAEIS,sEAFJ,SAITE,MAFaF,sEAEK,CAAC,OAAU,MAAOI,QAAS6R,IAAatR,KAA1D,uCAA+D,WAAMC,GAAN,SAAArB,EAAA,sEAE3DqB,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIsC,EAAStC,MAFqB,2CAA/D,uDAGHE,OAAM,SAAAuD,GAAC,OAAID,MAAM,mCAPL,2CAAH,qDAUV6N,EAAU,uCAAE,WAAMC,GAAN,eAAA7S,EAAA,6DAERwP,EAAIqD,EAAQrD,OAGdA,EAAIqD,EAAQ5D,OAAO4D,EAAQjN,OAEZnF,6EAPL,SAQRE,MADaF,6EAEnB,CACIG,OAAQ,MACRC,QAAS6R,EACT,eAAgB,mBAChB3R,KAAMmE,KAAKjE,UAAUuO,KACtBpO,KANG,uCAME,WAAMC,GAAN,SAAArB,EAAA,sDAEAqB,EAASC,KAETyD,MAAM,cAAgB1D,EAASiQ,QAG/BkB,KAPA,2CANF,uDAeH/Q,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAvBN,2CAAF,sDA0BV8N,EAAa,uCAAC,WAAM3L,GAAN,eAAAnH,EAAA,6DAEViF,EAAaxE,8EAAqD0G,EAAGzG,WAF3D,SAGVC,MAAOsE,EACb,CACIrE,OAAQ,SACRC,QAAS6R,IACVtR,KAJG,uCAIE,WAAMC,GAAN,SAAArB,EAAA,sDAEAqB,EAASC,IAOTkR,IACA9N,KANAK,MAAM,cAAgB1D,EAASiQ,QAJ/B,2CAJF,uDAgBH7P,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAnBJ,2CAAD,sDAgFb+N,EAAkB,uCAAC,WAAM3I,GAAN,eAAApK,EAAA,6DAEfiF,EAAaxE,iFAAwD2J,EAFtD,SAGfzJ,MAAOsE,EACb,CACIrE,OAAQ,SACRC,QAAS6R,IACVtR,KAJG,uCAIE,WAAMC,GAAN,SAAArB,EAAA,sDAEAqB,EAASC,GAOTmR,IALA1N,MAAM,cAAgB1D,EAASiQ,QAJ/B,2CAJF,uDAeH7P,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAlBC,2CAAD,sDAmElBgO,EAAY,uCAAC,WAAMzL,GAAN,SAAAvH,EAAA,4DAEIS,0EAFJ,SAGTE,MADaF,0EAEnB,CACIG,OAAQ,OACRC,QAAS6R,EACT3R,KAAM,IAAKwG,EAAe,IAC1B,eAAgB,qBACjBnG,KANG,uCAME,WAAMC,GAAN,SAAArB,EAAA,sDAEDqB,EAASC,IAGRiD,IACAmB,SAASC,eAAe,eAAeC,MAAM,IAG7Cb,MAAM,cAAgB1D,EAASiQ,QAT/B,2CANF,uDAgBH7P,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAnBL,2CAAD,sDAsBZiO,EAAc,uCAAC,WAAM1L,GAAN,eAAAvH,EAAA,6DAEXiF,EAAaxE,2EAAkD8G,EAFpD,SAGX5G,MAAOsE,EACb,CACIrE,OAAQ,SACRC,QAAS6R,IACVtR,KAJG,uCAIE,WAAMC,GAAN,SAAArB,EAAA,sDAEAqB,EAASC,IAOTiD,IACAG,KANAK,MAAM,cAAgB1D,EAASiQ,QAJ/B,2CAJF,uDAgBH7P,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAnBH,2CAAD,sDA8EdoE,EAAS,uCAAC,WAAMjC,GAAN,eAAAnH,EAAA,6DAENiF,EAAWxE,uEAA8C0G,EAAGzG,WAFtD,SAINC,MAAMsE,EAAY,CAAC,OAAU,MAAOpE,QAAS6R,IAAatR,KAA1D,uCAA+D,WAAMC,GAAN,SAAArB,EAAA,0DAE9DqB,EAASC,GAFqD,gCAIvDD,EAASE,OAAOH,MAAK,SAAAG,GAEvB2R,EAAe3R,MAN0C,6BAW7DwD,MAAM,cAAgB1D,EAASiQ,QAX8B,2CAA/D,uDAaH7P,OAAM,SAAAuD,GAAC,OAAID,MAAM,mCAjBR,2CAAD,sDAoBToO,EAAQ,uCAAG,WAAMxL,GAAN,SAAA3H,EAAA,4DAEMS,sEAFN,SAGPE,MADaF,sEAEnB,CACIG,OAAQ,OACRC,QAAS6R,EACT3R,KAAMmE,KAAKjE,UAAU0G,GACrB,eAAgB,qBACjBvG,KANG,uCAME,WAAMC,GAAN,SAAArB,EAAA,sDAEDqB,EAASC,IAGRiD,IACAG,IACA0O,KAEuB,KAAnB/R,EAASiQ,OACbvM,MAAM,cAAgB1D,EAASiQ,QAE/BvM,MAAM,wCAZN,2CANF,uDAmBHtD,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAtBP,2CAAH,sDAyBRqO,EAAO,uCAAC,WAAM1L,GAAN,eAAA3H,EAAA,6DAEJiF,EAAaxE,uEAA8CkH,EAAKR,GAAGzG,WAF/D,SAGJC,MAAOsE,EACb,CACIrE,OAAQ,MACRC,QAAS6R,EACT3R,KAAMmE,KAAKjE,UAAU0G,GACrB,eAAgB,qBACjBvG,KANG,uCAME,WAAMC,GAAN,SAAArB,EAAA,sDAEDqB,EAASC,IAGRiD,IACAG,IACA0O,KAIArO,MAAM,cAAgB1D,EAASiQ,QAX/B,2CANF,uDAmBH7P,OAAM,SAAAuD,GAAC,OAAID,MAAM,QAtBV,2CAAD,sDAyBPuO,EAAU,uCAAC,WAAMnM,GAAN,eAAAnH,EAAA,6DAEPiF,EAAaxE,uEAA8C0G,EAAGzG,WAFvD,SAGPC,MAAOsE,EACb,CACIrE,OAAQ,SACRC,QAAS6R,IACVtR,KAJG,uCAIE,WAAMC,GAAN,SAAArB,EAAA,sDAEAqB,EAASC,IAOToD,IACAH,IACAiO,KAPAzN,MAAM,cAAgB1D,EAASiQ,QAJ/B,2CAJF,uDAiBH7P,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MApBP,2CAAD,sDAuBVuO,EAAiB,WAYnB,MATA,CACIpM,GAAIzB,SAASC,eAAe,MAAMC,MAClCgC,MAAOlC,SAASC,eAAe,SAASC,MACxCkF,QAASpF,SAASC,eAAe,WAAWC,MAC5CuC,SAAUzC,SAASC,eAAe,YAAYC,MAC9CsC,SAAUxC,SAASC,eAAe,YAAYC,MAC9CiC,eAAgBnC,SAASC,eAAe,kBAAkBC,QAM5DsN,EAAiB,SAAC3R,GAEpBmE,SAASC,eAAe,MAAMC,MAAMrE,EAAK4F,GACzCzB,SAASC,eAAe,SAASC,MAAQrE,EAAKqG,MAC9ClC,SAASC,eAAe,WAAWC,MAAQrE,EAAKuJ,QAChDpF,SAASC,eAAe,YAAYC,MAAQrE,EAAK4G,SAAS7B,QAAQ,IAAK,KACvEZ,SAASC,eAAe,YAAYC,MAAQrE,EAAK2G,SACjDxC,SAASC,eAAe,kBAAkBC,MAAQrE,EAAKsG,gBAGrDuL,EAAmB,WAErB1N,SAASC,eAAe,MAAMC,MAAQ,GACtCF,SAASC,eAAe,SAASC,MAAQ,GACzCF,SAASC,eAAe,WAAWC,MAAQ,GAC3CF,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,kBAAkBC,MAAQ,IAoEhD6D,EAA2B,SAACC,GAE9B,OACI,cAAC,IAAD,CAAmBxH,MAAOyH,IAAYC,SAAWF,EAAMrH,UAAWqH,EAAMrH,UAAUwH,UAAU,GAAG,GAC3FC,SAAWJ,EAAMI,SAAUJ,EAAMI,SAAS,MAIhD0J,EAAe,WACpB,IAAD,EACI,OACI,sBAAKnR,UAAU,iBAAf,UACI,yCACA,uBAAOA,UAAU,UAAUmF,KAAK,SAASL,GAAG,KAAK+K,UAAQ,IACzD,wBAAQ9J,QAAS,kBAAM1C,SAASC,eAAe,MAAMC,MAAQ,MAA7D,mCACA,qBAAKvD,UAAU,UAEf,4CACA,uBAAOmF,KAAK,OAAOL,GAAG,UACtB,qBAAK9E,UAAU,UAEf,2CACA,uBAAOmF,KAAK,iBAAiBL,GAAG,aAChC,qBAAK9E,UAAU,UAEf,+CACA,wBAAQ8E,GAAG,WAAX,SAEIzD,EAAW2D,KAAK,SAAAC,GAEZ,OACI,wBAAQ1B,MAAO0B,EAAEC,eAAjB,SACKD,EAAEC,sBAMnB,qBAAKlF,UAAU,UAEf,iDACA,uBAAOmF,KAAK,OAAOL,GAAG,mBACtB,qBAAK9E,UAAU,UAEf,0BAAUA,UAAU,WAAW8E,GAAG,UAC9BsM,UAAW,SAACzO,GAER,GAAgB,GAAbA,EAAE0O,QACL,CACI1O,EAAE6G,iBAEF,IAAM9F,EAAQL,SAASC,eAAe,WAEhCgO,EAAQ5N,EAAQ6N,eAChBC,EAAM9N,EAAQ+N,aAEpB/N,EAAQH,MAAQG,EAAQH,MAAMiE,UAAU,EAAG8J,GAAS,KAAO5N,EAAQH,MAAMiE,UAAUgK,GAEnF9N,EAAQ6N,eAAiB7N,EAAQ+N,aAAeH,EAAQ,MAIpE,cAAC,IAAD,CAAe7G,cAAe,CAACC,IAAWC,IAAWC,KACjDC,WAAY,CAACC,KAAM1D,GACnB2D,cAAe,CAACC,KAChBvD,SAAQ,UAAEpE,SAASC,eAAe,kBAA1B,aAAE,EAAoCC,MAC9CvD,UAAW,aACf,qBAAKA,UAAU,UAEf,cAAC4P,EAAA,EAAD,CACI/P,MAAO,CACPgO,gBAAiB,UACjBtD,MAAM,KACN+E,QAAS,WACT3O,UAAU,MACV+Q,YAAY,OAEZ3L,QAAS,WAAKmK,KACdR,QAAQ,YACRvK,KAAK,SAVT,oBAaA,cAACyK,EAAA,EAAD,CACI/P,MAAO,CACHgO,gBAAiB,UACjBtD,MAAM,KACN+E,QAAS,WACT3O,UAAU,OAEdoF,QAAS,WAEqC,IAAvC1C,SAASC,eAAe,MAAMC,MAC7BuN,EAASI,KAETF,EAAQE,MAEhBxB,QAAQ,YACRvK,KAAK,SAfT,sBAsBZ,OACI,sBAAKnF,UAAU,cAAf,UAxgBI,qBAAKH,MAAO,CAAEwL,OAAQ,IAAKd,MAAO,OAASmC,aAAa,QAAxD,SACI,cAAC,IAAD,CACIC,QACA,CACI,CAACC,MAAM,YAAaC,WAAW,gBAAiBC,KAAK,EAAGO,WAAW,SAACC,GAAD,OAE3D,mBAAGzN,MAAO,CAAC+D,QAAS,eAAgB2J,WAAY,SAAUC,SAAU,SAAUC,aAAc,WACxFpN,eAAgB,QAEhBJ,KAAM7B,8CAA+CkP,EAAOH,IAAIzD,OAAS,IAAM4D,EAAO/J,MAH1F,SAGkG+J,EAAO/J,UAEjH,CAACqJ,MAAM,OAAQC,WAAW,OAAQ8E,UAAS,EAAM7E,KAAK,GACtD,CAACF,MAAM,UAAWC,WAAW,UAAW8E,UAAS,EAAM7E,KAAK,GAC5D,CAACF,MAAM,QAASC,WAAW,QAAS8E,UAAS,EAAM7E,KAAK,GACxD,CAACF,MAAM,cAAeC,WAAW,SAAU8E,UAAS,EAAM7E,KAAK,IAC/D,CAACF,MAAM,UAAWC,WAAW,UAAWC,KAAK,IAC7C,CAACF,MAAM,cAAeC,WAAW,OAAQC,KAAK,EAC1CO,WAAY,SAACZ,GAAD,OAAW5I,EAAkC4I,EAAKlJ,SAClE,CAACqJ,MAAO,SAAUC,WAAW,SAAUC,KAAK,EACxCO,WAAY,SAACpG,GAAD,OAER,cAAC2I,EAAA,EAAD,CACI/P,MAAO,CACPgO,gBAAiB,UACjByB,QAAS,WACT/E,MAAM,QAGNxE,QAAS,kBAAM0K,EAAcxJ,EAAKnC,KAClC4K,QAAQ,YACRvK,KAAK,SATT,uBAgBZ8H,KAAM5E,EACNwC,WAAY,CACR+G,cAAe,kBAEP,cAACC,EAAA,EAAD,CAAOxG,OAAO,OAAOyG,WAAW,SAASC,eAAe,SAAxD,iCAIRC,QAASC,KAEb/E,SAAU,SAACC,GAAD,OAASA,EAAIrI,IACvBsI,SAAU,EACV8E,iBAAkB3B,MA8B1B,qBAAK1Q,MAAO,CAAEwL,OAAQ,IAAKd,MAAO,OAASmC,aAAa,QAAxD,SACI,cAAC,IAAD,CACIC,QACA,CACI,CAACC,MAAM,QAASC,WAAW,QAASC,KAAK,GACzC,CAACF,MAAM,mBAAoBC,WAAW,OAAQC,KAAK,EAC/CO,WAAY,SAACZ,GAAD,OAAW5I,EAAkC4I,EAAKlJ,SAClE,CAACqJ,MAAO,SAAUC,WAAW,SAAUC,KAAK,EACxCO,WAAY,SAACpG,GAAD,OAER,cAAC2I,EAAA,EAAD,CACI/P,MAAO,CACPgO,gBAAiB,UACjByB,QAAS,WACT/E,MAAM,QAGNxE,QAAS,kBAAM2K,EAAmBzJ,EAAKnC,KACvC4K,QAAQ,YACRvK,KAAK,SATT,uBAgBZ8H,KAAM+C,EACNnF,WAAY,CACR+G,cAAe,kBAEP,cAACC,EAAA,EAAD,CAAOxG,OAAO,OAAOyG,WAAW,SAASC,eAAe,SAAxD,iCAIRC,QAASC,KAEb/E,SAAU,SAACC,GAAD,OAASA,EAAIpF,OACvBqF,SAAU,MAqDlB,sBAAKvN,MAAO,CAAEwL,OAAQ,IAAKd,MAAO,OAAQmC,aAAa,QAAvD,UACI,cAAC,IAAD,CACIC,QACA,CACI,CAACC,MAAM,iBAAkBC,WAAW,OAAQE,UAAS,EAAOC,mBAAkB,EAAM2E,UAAS,EAAM7E,KAAK,GACxG,CAACF,MAAM,QAASC,WAAW,kBAAmBE,UAAS,EAAOC,mBAAkB,EAAMF,KAAK,GAC3F,CAACF,MAAO,SAAUC,WAAW,SAAUE,UAAS,EAAOC,mBAAkB,EAAMF,KAAK,EAChFO,WAAY,SAACpG,GAAD,MACA,YAAXA,EAAKnC,IAA+B,WAAXmC,EAAKnC,GAAmB,KAE9C,cAAC8K,EAAA,EAAD,CACI/P,MAAO,CACPgO,gBAAiB,UACjByB,QAAS,WACT/E,MAAM,QAGNxE,QAAS,kBAAM6K,EAAe3J,EAAKnC,KACnC4K,QAAQ,YACRvK,KAAK,SATT,uBAeZ8H,KAAM5L,EACN6L,SAAU,SAACC,GAAD,OAASA,EAAIjI,gBACvBkI,SAAU,EAEVvC,WAAY,CAACmH,QAASC,OAGtB,0CACA,uBAAO9M,KAAK,OAAOL,GAAG,gBAEtB,cAAC8K,EAAA,EAAD,CACI/P,MAAO,CACPgO,gBAAiB,UACjBtD,MAAM,KACNc,OAAQ,OACRiE,QAAS,WACT3O,UAAU,OAGVoF,QAAS,kBAAM4K,EAAatN,SAASC,eAAe,eAAeC,QACnEmM,QAAQ,YACRvK,KAAK,SAXT,qBAqJR,gCACI,qBAAKtF,MAAO,CAAEwL,OAAQ,IAAKd,MAAO,OAAQmC,aAAa,QAAvD,SACI,cAAC,IAAD,CACIC,QACA,CACI,CAACC,MAAM,QAASC,WAAW,QAASE,UAAS,EAAOC,mBAAkB,EAAMF,KAAK,EAC7EO,WAAW,SAACC,GAAD,OAEP,mBAAGzN,MAAO,CAAC+D,QAAS,eAAgB2J,WAAY,SAAUC,SAAU,SAChEC,aAAc,WAAYpN,eAAgB,QAC1CJ,KAAM7B,8CAA+CkP,EAAOxI,GAAK,IAAMwI,EAAO/J,MAFlF,SAGC+J,EAAO/J,UAGhB,CAACqJ,MAAM,WAAYC,WAAW,WAAYE,UAAS,EAAOC,mBAAkB,EAAMF,KAAK,GACvF,CAACF,MAAM,WAAYC,WAAW,OAAQE,UAAS,EAAOC,mBAAkB,EAAMF,KAAK,EAC/EO,WAAY,SAACZ,GAAD,OAAW5I,EAAkC4I,EAAKlJ,SAClE,CAACqJ,MAAM,gBAAiBC,WAAW,qBAAsBE,UAAS,EAAOC,mBAAkB,EAAMF,KAAK,GACtG,CAACF,MAAO,SAAUC,WAAW,SAAUE,UAAS,EAAOC,mBAAkB,EAAMF,KAAK,EAChFO,WAAY,SAACpG,GAAD,OAER,qCACI,cAAC2I,EAAA,EAAD,CACI/P,MAAO,CACHgO,gBAAiB,UACjBtD,MAAM,MACNmH,YAAa,KACbpC,QAAS,YAEbvJ,QAAS,kBAAMgB,EAAUE,EAAKnC,KAC9B4K,QAAQ,YACRvK,KAAK,SATT,kBAaA,cAACyK,EAAA,EAAD,CACI/P,MAAO,CACPgO,gBAAiB,UACjBtD,MAAM,MACN+E,QAAS,YAGTvJ,QAAS,kBAAMkL,EAAWhK,EAAKnC,KAC/B4K,QAAQ,YACRvK,KAAK,SATT,0BAgBhB8H,KAAM1L,EACN2L,SAAU,SAACC,GAAD,OAASA,EAAIrI,IACvBsI,SAAU,EACVvC,WAAY,CAACmH,QAASC,SAG7Bd,UChjBF,SAASgB,IAEpB,MAA8BjV,IAAMC,UAAS,GAA7C,mBAAOwE,EAAP,KAAgBC,EAAhB,KACA,EAA0B1E,IAAMC,UAAS,GAAzC,mBAAOkC,EAAP,KAAc+S,EAAd,KAIMrK,EAFY9G,cAAcC,SACDkF,MAAM,KACV,GAE3BlJ,IAAMQ,UAAN,sBAAgB,sBAAAC,EAAA,sEAEN+S,EAAmB3I,GAFb,2CAGb,IAEH,IAAM2I,EAAkB,uCAAC,WAAM3I,GAAN,eAAApK,EAAA,6DAEfiF,EAAaxE,iFAAwD2J,EAFtD,SAGfzJ,MAAOsE,EACb,CACIrE,OAAQ,WACTQ,KAHG,uCAGE,WAAMC,GAAN,SAAArB,EAAA,sDAEAqB,EAASC,IACTmT,GAAS,GACbxQ,GAAW,GAJP,2CAHF,uDAQHxC,OAAM,SAAAuD,GAAC,OAAID,MAAMC,MAXC,2CAAD,sDAcxB,OAAGtD,EAGK,oBAAIQ,MAAO,CAACe,SAAS,OAAQoF,WAAW,OAAQC,MAAM,SAAtD,yCAILtE,EAGK,qBAAK9B,MAAO,CAACC,OAAQ,uBAAwBC,UAAW,UAAxD,SACI,cAAC,aAAD,MAMR,oBAAIF,MAAO,CAACe,SAAS,OAAQoF,WAAW,OAAQC,MAAM,SAAtD,6B,WCjDO,MAA0B,4CCO1B,SAASoM,IAEpB,IAAMvD,EAAQC,cADlB,SAGmBuD,EAHnB,8EAGI,WAAwBzM,GAAxB,SAAAlI,EAAA,2DAEWkI,EAFX,OAIa,SAJb,OAQa,aARb,OAYa,UAZb,OAgBa,eAhBb,OAoBa,WApBb,+BAKYiJ,EAAQ7E,KAAK,IALzB,mCASY6E,EAAQ7E,KAAK,aATzB,mCAaY6E,EAAQ7E,KAAK,UAbzB,mCAiBY6E,EAAQ7E,KAAK,eAjBzB,oCAqBY6E,EAAQ7E,KAAK,WArBzB,kEAHJ,sBA6BI,OACI,gCACI,sBAAKjK,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,sBAAMA,UAAU,QAAhB,SACK,6CAIT,qBAAKA,UAAU,iBAEf,qBAAKA,UAAU,cAAcO,IAAKiL,IAElC,qBAAIxL,UAAU,uBAAd,UACI,6BACI,qBAAKA,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqB+F,QAAS,WAAKuM,EAAS,SAA5D,sBAMR,6BACI,qBAAKtS,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqB+F,QAAS,WAAKuM,EAAS,aAA5D,0BAMR,6BACI,qBAAKtS,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqB+F,QAAS,WAAKuM,EAAS,WAA5D,wBAMR,6BACI,qBAAKtS,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqB+F,QAAS,WAAKuM,EAAS,eAA5D,4BAMR,6BACI,qBAAKtS,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqB+F,QAAS,WAAKuM,EAAS,UAA5D,6BAShB,qBAAKtS,UAAU,sB,OC1EZuS,MAlBf,WAEI,OACI,8BACI,qBAAKvS,UAAU,SAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,mBAAGC,KAAK,uCAAuCG,OAAO,SAAtD,SAA+D,mBAAGJ,UAAU,oBAC5E,mBAAGC,KAAK,yFAAyFG,OAAO,SAAxG,SAAiH,mBAAGJ,UAAU,sBAC9H,mBAAGC,KAAK,uCAAuCG,OAAO,SAAtD,SAA+D,mBAAGJ,UAAU,sBAC5E,mBAAGC,KAAK,8CAA8CG,OAAO,SAA7D,SAAsE,mBAAGJ,UAAU,wBACnF,mBAAGC,KAAK,gEAAgEG,OAAO,SAA/E,SAAwF,mBAAGJ,UAAU,4BACrG,mBAAGC,KAAK,0CAA0CG,OAAO,SAAzD,SAAkE,mBAAGJ,UAAU,4B,OCyBpFwS,MAvBf,WAEE,OACA,qBAAKxS,UAAU,aAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IAEA,cAAC,IAAD,CAAOyS,OAAK,EAACC,KAAK,IAAIC,UAAW5R,IACjC,cAAC,IAAD,CAAO0R,OAAK,EAACC,KAAK,YAAYC,UAAW5R,IACzC,cAAC,IAAD,CAAO0R,OAAK,EAACC,KAAK,SAASC,UAAWpH,IACtC,cAAC,IAAD,CAAOkH,OAAK,EAACC,KAAK,UAAUC,UAAWvH,IACvC,cAAC,IAAD,CAAOsH,KAAK,mBAAmBC,UAAWzM,IAC1C,cAAC,IAAD,CAAOuM,OAAK,EAACC,KAAK,cAAcC,UAAW1G,IAC3C,cAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAW7C,IACtC,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,sBAAsBC,UAAWR,IAEnD,cAAC,EAAD,UC5BNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1P,SAASC,eAAe,W","file":"static/js/main.ad26f40c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__1X7CW\"};","import React from \"react\";\r\nimport querystring from \"querystring\";\r\n\r\nimport \"./Player.css\";\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nexport default function Player()\r\n{\r\n    const [isUserOffline, setIsUserOffline] = React.useState(false);\r\n    const [songData, setSongData] = React.useState(null);\r\n    const [isPlaying, setIsPlaying] = React.useState(false);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        const setPlayerData = async()=>\r\n        {\r\n            const token = await fetchToken();\r\n            await fetchPlayer(token);\r\n        };\r\n\r\n        await setPlayerData();\r\n\r\n        const fetchPlayerInfoPeriodically = setInterval(async()=>\r\n        {\r\n            await setPlayerData();\r\n        }, 25000);\r\n\r\n        ()=> clearInterval(fetchPlayerInfoPeriodically);\r\n    }, []);\r\n\r\n    const fetchToken = async() =>\r\n    {\r\n        const basic = Buffer.from(`${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`).toString(\"base64\");\r\n        let token = null;\r\n\r\n        await fetch(process.env.REACT_APP_SPOTIFY_TOKEN_URL, {method: \"POST\", \r\n            headers: {Authorization: `Basic ${basic}`, \"Content-Type\": \"application/x-www-form-urlencoded\"}, \r\n            body: querystring.stringify({grant_type: \"refresh_token\", \r\n                refresh_token: process.env.REACT_APP_SPOTIFY_REFRESH_TOKEN})}).then(async(response) =>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                token = json.access_token;\r\n            }\r\n        }).catch(error => console.log(error));\r\n\r\n        return token;\r\n    };\r\n\r\n    const fetchPlayer = async(token) =>\r\n    {\r\n        let isOffline = true;\r\n\r\n        await fetch(process.env.REACT_APP_SPOTIFY_ONLINE_URL, {method: \"GET\", headers: {Authorization: `Bearer ${token}`}}).then(async(response) =>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                isOffline = false;\r\n                setIsUserOffline(false);\r\n                setSongData(json.item);\r\n                setIsPlaying(json.is_playing);\r\n            }\r\n        }).catch(error => console.log(error));\r\n\r\n        if(isOffline)\r\n        {\r\n            await fetch(process.env.REACT_APP_SPOTIFY_OFFLINE_URL, {method: \"GET\", headers: {Authorization: `Bearer ${token}`}}).then(async(response) =>\r\n            {\r\n                if(response.ok)\r\n                {\r\n                    const json = await response.json();\r\n                    setIsUserOffline(true);\r\n                    setSongData(json.items[0].track);\r\n                    setIsPlaying(false);\r\n                }\r\n            }).catch(error => console.log(error));\r\n        }\r\n    };\r\n\r\n    if(songData == null)\r\n    {\r\n        return(\r\n            <div style={{margin: \"30px 50px 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if(!isUserOffline)\r\n    {\r\n        return (\r\n            <div className=\"spotifyPlayer\" >                    \r\n                <a href={songData.external_urls.spotify} target=\"_blank\" style={{textDecoration: \"none\", color: \"green\"}}>\r\n                    <img className=\"spotifyPlayerImage\" src={songData.album.images[0].url} />\r\n                </a>\r\n                <div className=\"spotifyPlayerText\">\r\n                    <a href=\"https://open.spotify.com/user/wxcec8jt9ngo2fokmmwiiddm2?si=4e241563d3114295\" \r\n                        target=\"_blank\" style={{textDecoration: \"none\", color: \"green\"}}>\r\n                        <i className=\"fab fa-spotify\" style={{marginTop: \"5px\", fontSize: \"26px\", color:\"green\"}}/>\r\n                        <p className=\"spotifyPlayerSongName\">{songData.name}</p>\r\n                        <p className=\"spotifyPlayerSongArtist\">{songData.artists[0].name}</p>\r\n                        <p className=\"spotifyPlayerSongStatus\">{isPlaying ? \"Playing\" : \"Paused\"}</p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else\r\n    {\r\n        return (\r\n            <div className=\"spotifyPlayer\" >  \r\n                <a href={songData.external_urls.spotify} target=\"_blank\" style={{textDecoration: \"none\", color: \"green\"}}>               \r\n                    <img className=\"spotifyPlayerImage\" src={songData.album.images[0].url} />\r\n                </a>   \r\n                <div className=\"spotifyPlayerText\">\r\n                    <a href=\"https://open.spotify.com/user/wxcec8jt9ngo2fokmmwiiddm2?si=4e241563d3114295\" \r\n                        target=\"_blank\" style={{textDecoration: \"none\", color: \"green\"}}>\r\n                        <i className=\"fab fa-spotify\" style={{marginTop: \"5px\", fontSize: \"26px\", color:\"green\"}}/>\r\n                        <p className=\"spotifyPlayerSongName\">{songData.name}</p>\r\n                        <p className=\"spotifyPlayerSongArtist\">{songData.artists[0].name}</p>\r\n                        <p className=\"spotifyPlayerSongStatus\">{\"Offline\"}</p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/defaultPostImage.30d33787.jpg\";","import React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nimport \"./Blog.css\";\r\n\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nexport default function Blog()\r\n{\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory] = React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [searchedToken, setSearchedToken] = React.useState(\"\");\r\n\r\n    const isInitialMount = React.useRef(true);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(initialCategory!=\"All\")\r\n            hideSelectCategory();\r\n        else \r\n            fetchCategories();\r\n    }, []); //Only once time\r\n\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(isInitialMount.current)\r\n            return;\r\n        \r\n\r\n        posts.length = 0; //reset without render\r\n        if(page==1)\r\n            await fetchPosts();\r\n        else\r\n            setPage(1);\r\n\r\n    }, [selectedCategory]);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(isInitialMount.current)\r\n        {\r\n            isInitialMount.current = false;\r\n            return;\r\n        }\r\n\r\n        await fetchPosts();  \r\n    }, [page]);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        if(isInitialMount.current)\r\n            return;\r\n\r\n        const delay = setTimeout(() => \r\n        {\r\n            posts.length = 0; //clear without render\r\n            if(page==1)\r\n                fetchPosts();\r\n            else\r\n                setPage(1);\r\n        }, 800)\r\n    \r\n        return () => clearTimeout(delay)\r\n    }, [searchedToken])\r\n    \r\n\r\n    const fetchCategories=async()=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Category\";\r\n\r\n        const response = await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const jsonArray = await response.json();\r\n                setCategories(jsonArray);\r\n            }\r\n            else\r\n                alert('Database connection error...');\r\n        }).catch(e => \r\n        {\r\n            console.log(e);\r\n        });\r\n    };\r\n\r\n    const printCategories=()=>\r\n    {\r\n        return(\r\n            <div className=\"displayCategoriesAndSearchBar\">\r\n                <select id=\"selectedCategory\" onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.nameOfCategory}>\r\n                                    {c.nameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n                \r\n                <div>\r\n                    <input type=\"text\" placeholder=\"Search...\" onChange={(event)=>setSearchedToken(event.target.value)}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }; ////<i class=\"fa fa-search\"></i>\r\n\r\n    const fetchPosts=async()=>\r\n    {\r\n        setLoading(true);\r\n\r\n        let urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Post?pageSize=6&&pageNumber=\" + page + \"&&Contains=\" + searchedToken;\r\n        if(selectedCategory !== 'All')\r\n            urlToFetch += \"&&Category=\" + selectedCategory;\r\n\r\n        const response = await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const jsonArray = await response.json();\r\n                setPosts([...posts, ...jsonArray]);\r\n                \r\n                const pagesInfo = JSON.parse(response.headers.get(\"Paging-Headers\"));\r\n                if(pagesInfo.nextPage === 'No')\r\n                    hideMoreButton();\r\n                else\r\n                    showMoreButton(); \r\n            }\r\n            else\r\n                alert('Database connection error...');\r\n        }).catch(e => alert(e));\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const hideSelectCategory=()=>\r\n    {\r\n        const element=document.getElementById('selectedCategory');\r\n        if(element)\r\n            element.style.visibility = 'hidden';\r\n    };\r\n\r\n    const hideMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'none';\r\n    };\r\n\r\n    const showMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'inline-block';\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        if(posts.length>0)\r\n        {  \r\n            return( \r\n                <div>\r\n                    <div className=\"posts\">\r\n                    {\r\n                        posts.map((post)=>\r\n                        {\r\n                            return(\r\n                                <a className=\"postGrid\" href={process.env.REACT_APP_FRONTEND_URL+\"post/\"+post.id.toString()+\"/\"+post.title.replace(\" \", \"%20\")}>\r\n                                    <img className=\"postGridImage\" src={post.coverPhotoLink} onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                                    <div className=\"postGridInformation\">\r\n                                        <h2 className=\"postGridTitle\">{post.title}</h2>\r\n                                        <p className=\"postGridCategory\">{\"Category: \"+post.category}</p>\r\n                                        <p className=\"postGridDate\">{convertStringDateTimezoneToClient(post.postDate)}</p>\r\n                                    </div>\r\n                                </a>\r\n                            );   \r\n                        })\r\n                    }\r\n                    </div>\r\n                    \r\n                    <div className=\"morePostsButtonArea\">\r\n                        <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                            onClick={()=>setPage(page+1)}>More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(loading)\r\n        {\r\n            return (\r\n                <div style={{margin: \"30px 50px 120px auto\", textAlign: \"center\"}}>\r\n                    <FadeLoader />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return (\r\n                <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n            );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {printCategories()}\r\n            {printPosts()}\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n\r\n    const [post, setPost] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n    const [clientCountry, setClientCountry]=React.useState(\"Unknown\");\r\n\r\n    const [commentParentId, setCommentParentId] = React.useState(null);\r\n    const nicksByCommentId = {}\r\n\r\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchPost();\r\n        await fetchClientCountry();\r\n    }, []);\r\n\r\n    const fetchClientCountry=async()=>\r\n    {\r\n        await fetch(\"https://ipapi.co/json/\").then(async(response) =>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const info = await response.json();\r\n                setClientCountry(info.country_name);\r\n            }\r\n        }).catch(error => console.log(error));\r\n    };\r\n\r\n    const fetchPost=async()=>\r\n    {\r\n        setIsLoading(true);\r\n\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Post/\" + urlID.toString();\r\n        await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const postJson = await response.json();\r\n                setPost(postJson);\r\n            }\r\n        }).catch(error => console.log(error));\r\n\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPost=()=>\r\n    {\r\n        return(\r\n            <div className=\"PostArea\">\r\n                <div className='postInfo' >\r\n                    <img alt='' className='postImage' src={post.coverPhotoLink} \r\n                        onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                        <div className='postHeaderText'>\r\n                            <h1 className='postTitleX' align='center'>{post.title}</h1>\r\n                            <h6 className='postDate' align='center'>{convertStringDateTimezoneToClient(post.postDate)}</h6>\r\n                        </div>\r\n                </div>\r\n                <br/>\r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}}\r\n                    remarkPlugins={[remarkMath]}\r\n                    children={post.content} className={style.reactMarkDown} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const [subscriptionMessage, setSubscriptionMessage] = React.useState(\"Thank you for subscribing!\");\r\n    const [subscriptionButtonMessage, setSubscriptionButtonMessage] = React.useState(\"Subscribe\");\r\n\r\n    const postSubscription = async()=>\r\n    {\r\n        setSubscriptionButtonMessage(\"Loading\");\r\n\r\n        const email = {email: document.getElementById(\"subscribeEmailInput\").value};\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"SuscribedEmail\";\r\n        await fetch((urlToFetch), {method: \"POST\", headers: {'Content-Type': \"application/json\"},\r\n            body: JSON.stringify(email) }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                document.getElementById('subscribeForm')?.classList.add('done');\r\n            }\r\n            else\r\n            {\r\n                const message = await response.text();\r\n                if(message.substring(0, 9) === 'Duplicate')\r\n                {\r\n                    document.getElementById('subscribeForm')?.classList.add('done');\r\n                    setSubscriptionMessage(\"You are already subscribed!\");\r\n                }\r\n                else\r\n                {\r\n                    document.getElementById('subscribeEmailInput').reportValidity();\r\n                    setSubscriptionButtonMessage(\"Subscribe\");\r\n                }\r\n            }\r\n        }).catch(e => setSubscriptionMessage(\"Server error...\"));     \r\n    };\r\n\r\n    const printSubscribeButton = ()=>\r\n    {\r\n        return (\r\n            <div class=\"subscribeButtoncontainer\">\r\n                <h4>Subscribe to receive new posts announcements</h4>\r\n                <div class=\"subscribeButtonContent\">\r\n                    <form class=\"subscribeForm\" id=\"subscribeForm\">\r\n                        <input class=\"subscribeEmailInput\" id=\"subscribeEmailInput\"\r\n                            type=\"email\" placeholder=\"subscribe@me.now\" onKeyPress={(e)=>{\r\n                                if(e.code === 'Enter')\r\n                                {\r\n                                    postSubscription();\r\n                                }\r\n                            }}/>\r\n                        <button class=\"subscribeButton\" type=\"button\" id=\"subscribeButton\" onClick={()=>postSubscription()}>\r\n                            <span class=\"before-submit\">{subscriptionButtonMessage}</span>\r\n                            <span class=\"after-submit\">{subscriptionMessage}</span>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const printComments=()=>\r\n    {\r\n        return(\r\n            post.userComments?.map(parentComment=>\r\n            {\r\n                nicksByCommentId[parentComment.id] = parentComment.nick;\r\n\r\n                return(\r\n                    <div>\r\n                        <div className=\"userCommentArea\" id={parentComment.id.toString()}>\r\n                            <h4 className=\"userCommentNick\">{parentComment.nick}</h4>\r\n                            <p className=\"userCommentDate\">\r\n                            {\r\n                                convertStringDateTimezoneToClient(parentComment.commentDate)\r\n                            }\r\n                            </p>\r\n                            <p className=\"userCommentContent\">{parentComment.content}</p>\r\n                            <p className=\"userCommentReply\" onClick={()=>\r\n                                setCommentParentId((commentParentId !== parentComment.id) ? parentComment.id : null)}>\r\n                            {\r\n                                (commentParentId !== parentComment.id) ? \"Reply\" : \"Cancel reply\"\r\n                            }\r\n                            </p>\r\n                        </div>\r\n                        {\r\n                            (commentParentId !== parentComment.id) ? null : commentForm()\r\n                        }\r\n                        {\r\n                            parentComment.inverseParent.map(childComment =>\r\n                            {\r\n                                nicksByCommentId[childComment.id] = childComment.nick;\r\n                                \r\n                                return(\r\n                                    <div>\r\n                                        <div className={\"userCommentArea childUserCommentArea\"} id={childComment.id.toString()}>\r\n                                            <h4 className=\"userCommentNick\">{childComment.nick}</h4>\r\n                                            <p className=\"userCommentDate\">\r\n                                            {\r\n                                                convertStringDateTimezoneToClient(childComment.commentDate)\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentContent\">\r\n                                            <b>{(parentComment.id == childComment.parentId) ? \"\" : \"@\"+nicksByCommentId[childComment.parentId]}</b>\r\n                                            {\r\n                                                \" \"+childComment.content\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentReply\" onClick={()=>\r\n                                                setCommentParentId((commentParentId !== childComment.id) ? \r\n                                                    childComment.id : null)}>\r\n                                            {   \r\n                                                (commentParentId !== childComment.id) ? \"Reply\" : \"Cancel reply\"\r\n                                            }\r\n                                            </p>\r\n                                        </div>\r\n                                        {\r\n                                            (commentParentId !== childComment.id) ? null : commentForm()\r\n                                        }\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    \r\n\r\n    const scrollToComment = (commentId) => \r\n    {\r\n        const yOffset = -50; \r\n        const element = document.getElementById(commentId.toString());\r\n        const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n\r\n        window.scrollTo({top: y, behavior: 'smooth'});\r\n    }\r\n    \r\n    const postComment=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        \r\n        const comment = \r\n        {\r\n            postId: parseInt(urlID),\r\n            parentId: commentParentId,\r\n            nick: document.getElementById(\"nick\").value,\r\n            content: document.getElementById(\"content\").value,\r\n            country: clientCountry,\r\n            email: document.getElementById(\"email\").value,\r\n            notifyReply: document.getElementById(\"reply\").checked ? 1 : 0,\r\n        };\r\n\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"UserComment\";\r\n        await fetch((urlToFetch), \r\n            {method: \"POST\", body: JSON.stringify(comment), \r\n            headers: {'Content-Type': \"application/json\"}}).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const addedComment = await response.json();\r\n                nicksByCommentId[addedComment.id] = addedComment.nick;\r\n                \r\n                var added = false;\r\n                post.userComments.map((parentComment)=>\r\n                {\r\n                    if(parentComment.id === addedComment.parentId)\r\n                    {\r\n                        parentComment.inverseParent.push(addedComment);\r\n                        added = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        parentComment.inverseParent.map((childComment)=>\r\n                        {\r\n                            if(childComment.id === addedComment.parentId)\r\n                            {\r\n                                parentComment.inverseParent.push(addedComment);\r\n                                added = true;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                if(!added)\r\n                    post.userComments.push(addedComment);\r\n\r\n                setCommentParentId(-1);\r\n                setCommentParentId(null);\r\n                while(document.getElementById(addedComment.id.toString()) == null) ;\r\n                scrollToComment(addedComment.id);\r\n                \r\n            }\r\n            else\r\n                console.log(await response.text());\r\n        }).catch(e => alert(e));     \r\n    };\r\n    \r\n\r\n    const commentForm = ()=>\r\n    {\r\n        return (\r\n            <form onSubmit={(e)=>postComment(e)} className=\"commuserCommentAreaentsForm\">\r\n                <label className=\"commentInputLabel\">Nick</label>\r\n                <input className=\"nickInput\" id=\"nick\" type=\"text\" placeholder=\"Enter a nick...\" \r\n                    autoComplete=\"off\" required={true} minLength={3}/>\r\n\r\n                <label className=\"commentInputLabel\">Email</label>\r\n                <input className=\"emailInput\" id=\"email\" type=\"email\" placeholder=\"Enter a valid email...\" \r\n                    autoComplete=\"off\" minLength={6} required={true}/>\r\n                \r\n                <label className=\"commentInputLabel\">Comment</label>\r\n                <input className=\"commentInput\" id=\"content\" type=\"text\" placeholder=\"Enter your comment...\" \r\n                    autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>           \r\n\r\n                <input className=\"commentPostButton\" name=\"Submit\" id=\"submit\" type=\"submit\" value=\"Post\" />\r\n\r\n                <input className=\"replyInputInput\" id=\"reply\" type=\"checkbox\"/>\r\n                <label className=\"commentInputLabel\">Notify to email replies</label> <br/><br/>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    const printCommentsSection = ()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\">\r\n                {\r\n                    (commentParentId != null) ? null : commentForm()\r\n                }\r\n                <div className=\"usersCommentsArea\">{printComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(post != null)\r\n    {\r\n        return(\r\n            <div style={{width:\"100%\"}}>\r\n                {printPost()}{printSubscribeButton()}<div className=\"horizontalLine\"/>{printCommentsSection()}\r\n            </div>\r\n        ); \r\n    }\r\n\r\n    if(isLoading)\r\n    {\r\n        return (\r\n            <div style={{margin: \"30px 50px 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader/>\r\n            </div>\r\n        );\r\n    }\r\n      \r\n\r\n    return (\r\n        <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport \"./Resume.css\";\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\n\r\nexport default function Resume()\r\n{\r\n    return (\r\n        <div >\r\n            <iframe src=\"https://drive.google.com/file/d/1dHKQ3hNzicS4hGO1rQsTq59S1jwDyDPL/preview\" \r\n                width=\"100%\" \r\n                height=\"400px\"\r\n                allow=\"autoplay\">\r\n            </iframe>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/taza.1fa020a4.jpg\";","import Player from '../../Tools/Spotify/Player';\r\n\r\nimport logo from './taza.jpg';\r\n\r\nimport \"./About.css\";\r\n\r\nexport default function About()\r\n{\r\n    return(\r\n        <div className=\"aboutArea\">\r\n            <img className=\"aboutPic\" src={logo}/>\r\n            <br/>\r\n            <span >\r\n                Welcome to my mind! This is my personal space. Here I write any experience, thought or thing that I have just learned.\r\n                <br/><br/>\r\n                I am a Spanish, I was born in 1999 and I study computer engineering at Ege University located in Turkey. I love to learn new things, work hard, play the guitar and socialize with foreigners.\r\n                <br/><br/>\r\n                I am a person who gives discipline to the fundamental theory of computer science, whether from expendable algorithms, whether they are data structures or optimization, to automata theory because the connection of each subject in any field is incredible.\r\n                <br/><br/>\r\n                I am focused on software development and backend. I like to know how to plan and develop optimal software for all kinds of applications.\r\n                <br/><br/>\r\n                Lately, in order to improve my knowledge about manipulation and optimal data collection, I'm trying to learn the fundamentals of data engineering.\r\n            </span>\r\n            <br/><br/>\r\n            <hr/>\r\n            <br/>\r\n            <Player/>\r\n            <br/>\r\n            <span>\r\n                Above you can see what I have heard or am listening to at the moment on spotify.\r\n                <br/><br/>\r\n                I love progressive metal, before preparing for university entrance exam I used to write prog metal instrumental songs in a totally amateur way, recording bass with VST using guitar as midi input with programs and recording drums with additional VSTs. I also leave here as a memory a song I composed from those times.\r\n            </span>\r\n            <br/><br/>\r\n            <div>\r\n                <iframe\r\n                    width=\"100%\"\r\n                    height=\"150\"\r\n                    src={`https://www.youtube.com/embed/VVAu9IaMs9g`}\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                    title=\"Embedded youtube\"\r\n                />\r\n\r\n                <iframe\r\n                    src={\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/484066497&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"}\r\n                    width=\"100%\" \r\n                    height=\"150\" \r\n                    scrolling=\"no\" \r\n                    frameborder=\"no\" \r\n                    allow=\"autoplay\" \r\n                />\r\n\r\n                <iframe\r\n                    src={\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/677097894&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"}\r\n                    width=\"100%\" \r\n                    height=\"150\" \r\n                    scrolling=\"no\" \r\n                    frameborder=\"no\" \r\n                    allow=\"autoplay\" \r\n                />\r\n            </div>  \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Pie, Line} from \"react-chartjs-2\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nimport \"./Statistics.css\";\r\nimport { prefixURLFrontend } from '../../Tools/PrefixURLFrontend/PrefixURLFrontend';\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nfunction getMonthName(number)\r\n{\r\n    switch(number)\r\n    {\r\n        case 1:\r\n            return \"January\";\r\n        case 2:\r\n            return \"Frebruary\";\r\n        case 3:\r\n            return \"March\";\r\n        case 4:\r\n            return \"April\";\r\n        case 5:\r\n            return \"May\";\r\n        case 6:\r\n            return \"June\";\r\n        case 7:\r\n            return \"July\";\r\n        case 8:\r\n            return \"August\";\r\n        case 9:\r\n            return \"September\";\r\n        case 10:\r\n            return \"October\";\r\n        case 11:\r\n            return \"November\";\r\n        default:\r\n            return \"December\";\r\n    };\r\n};\r\n\r\nfunction getLoopColorsByLength(len)\r\n{\r\n    const colors=[\"red\", \"blue\", \"yellow\", \"orange\", \"brown\", \"pink\", \"purple\"];\r\n    let temp=0;\r\n\r\n    while(colors.length<len)\r\n    {\r\n        colors.push(colors[(temp++)%colors.length]);\r\n    }\r\n\r\n    return colors;\r\n};\r\n\r\nexport default function Statistics()\r\n{\r\n    const [statistics, setStatistics] = React.useState(\r\n        {\r\n            countriesOfComments: [], \r\n            numberOfCommentsPerMonth: [],\r\n            topCommentersNicks: [],\r\n            topCommentedPosts: [],\r\n        }); \r\n\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchStatistics();\r\n    }, []);\r\n\r\n    const fetchStatistics = async()=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Statistics\";\r\n        await fetch(urlToFetch).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                const data = await response.json();\r\n                setStatistics(data);\r\n            }\r\n            else\r\n                console.log(response.text);\r\n        }).catch(e => alert(e));\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    if(loading)\r\n        return(\r\n            <div style={{margin: \"30px 50px 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader />\r\n            </div>\r\n        );\r\n\r\n    return(\r\n        <div >\r\n            <center><h3>Top Commenters Nicks</h3></center>\r\n            <div style={{ height: 370, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"nick\", headerName:\"Nick\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                        {field:\"commentsCount\", headerName:\"Comments Count\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                    ]}\r\n                \r\n                    rows={statistics.topCommentersNicks}\r\n                    getRowId={(row) => row.nick}\r\n                    pageSize={5}\r\n                />\r\n            </div>\r\n\r\n            <center><h3>Top Commented Posts</h3></center>\r\n            <div style={{ height: 370, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"title\", headerName:\"Title\", flex:1, sortable:false, disableColumnMenu:true, renderCell:(params)=>\r\n                        (\r\n                            <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\",\r\n                                textDecoration: \"none\"}\r\n                                }\r\n                                href={prefixURLFrontend + \"post/\" + params.id + \"/\" + params.value}>{params.value}</a>\r\n                        )},\r\n                        {field:\"commentsCount\", headerName:\"Comments Count\", flex:1, sortable:false, disableColumnMenu:true,},\r\n                    ]}\r\n                \r\n                    rows={statistics.topCommentedPosts}\r\n                    getRowId={(row) => row.id}\r\n                    pageSize={5}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"chartArea\">\r\n                <Pie data=\r\n                    {{\r\n                        labels: statistics.countriesOfComments.map(info => info.country),\r\n                        datasets: \r\n                        [{\r\n                            backgroundColor: getLoopColorsByLength(statistics.countriesOfComments.length),\r\n                            data: statistics.countriesOfComments.map(info => info.commentsCount), \r\n                        }]\r\n                    }} \r\n                    \r\n                    options=\r\n                    {{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        plugins:\r\n                        {\r\n                            legend:{display:false},\r\n                            title:{text:\"Countries of Comments\", display:true}\r\n                        }\r\n                    }}\r\n                height={290}/>\r\n            </div> \r\n\r\n            <div className=\"chartArea\">\r\n                <Line data=\r\n                    {{\r\n                        labels: statistics.numberOfCommentsPerMonth.map(info => getMonthName(info.commentsMonth)),\r\n                        datasets: \r\n                        [{\r\n                            backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                            data: statistics.numberOfCommentsPerMonth.map(info => info.commentsCount), \r\n                            pointRadius: 8\r\n                        }]\r\n                    }} \r\n                    options=\r\n                    {{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        plugins:\r\n                        {\r\n                            legend:{display:false},\r\n                            title:{text:\"Months of Comments Counts\", display:true}\r\n                        }\r\n                    }}\r\n                    height={290}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","const TOKEN_KEY=\"Authorization\";\r\n\r\nexport function setToken(token)\r\n{\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport function getToken()\r\n{\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function deleteToken()\r\n{\r\n  localStorage.removeItem(TOKEN_KEY);\r\n}","import React from 'react';\r\n\r\nimport {Paper, Grid, Avatar, TextField, Button} from '@mui/material';\r\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\r\nimport { deleteToken, getToken, setToken } from '../../Tools/auth-helper';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function login()\r\n{\r\n    const [disableButton, setDisableButton] = React.useState(false);\r\n    const history=useHistory();\r\n\r\n    const submit=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        setDisableButton(true);\r\n\r\n        const data = {\r\n            \"adminUsername\": document.getElementById(\"adminUsername\").value,\r\n            \"adminPassword\": document.getElementById(\"adminPassword\").value,\r\n        };\r\n\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"BlogAdmin/Authenticate\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(async(response) => await response.text().then(token=>\r\n        {\r\n            if(response.status != 200) \r\n                alert(\"User does not exist...\");\r\n            else if(response.status == 200)\r\n            {   \r\n                deleteToken();\r\n                setToken(\"Bearer \"+token);\r\n                setTimeout(function(){\r\n                    history.push(\"/admin\");\r\n                }, 600);\r\n            }\r\n            else\r\n                console.log(response);\r\n        })).catch(e => alert('Database connection error...'));\r\n        \r\n        setDisableButton(false);\r\n    }\r\n\r\n    const paperStyle=\r\n    {\r\n        padding: \"30px\", \r\n        height: \"380px\", \r\n        width: \"50%\", \r\n        margin: \"100px auto\"\r\n    };\r\n    const avatarStyle=\r\n    {\r\n        backgroundColor: \"#1bbd7e\"\r\n    };\r\n    const usernameTexFieldStyle = \r\n    {\r\n        marginBottom: \"10px\"\r\n    };\r\n    const passwordTexFieldStyle = \r\n    {\r\n        marginBottom: \"35px\"\r\n    };\r\n\r\n    return(\r\n        <div className=\"mainDiv\">\r\n            <Grid>\r\n                <Paper elevation={12} style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}>\r\n                            <LockOpenIcon/>\r\n                        </Avatar>\r\n                        <h2>Login</h2>\r\n                    </Grid>\r\n\r\n                    <form onSubmit={(e)=>submit(e)} autoComplete=\"off\">\r\n                        <TextField id='adminUsername' label='Username' placeholder=\"Enter username\" variant=\"standard\" \r\n                            style={usernameTexFieldStyle} fullWidth autoComplete='off' required/>\r\n                        <TextField id=\"adminPassword\" label=\"Password\" placeholder=\"Enter password\" type=\"password\" \r\n                            variant=\"standard\" style={passwordTexFieldStyle} fullWidth autoComplete='off' required/>\r\n\r\n                        <Button type='submit' color='primary' variant=\"contained\" disabled={disableButton} fullWidth>\r\n                            Sign in\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Button, Stack} from '@mui/material';\r\nimport { DataGrid, GridToolbar} from '@mui/x-data-grid';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { getToken, deleteToken } from '../../Tools/auth-helper';\r\n\r\nimport \"./Admin.css\";\r\n\r\nfunction convertStringDateTimezoneToClient(stringDate)\r\n{\r\n    const serverDate=new Date(stringDate.replace(\"T\", \" \")+\" +03:00\"); //Server timezone\r\n\r\n    if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n    {\r\n        return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n            day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n            hour12: false });\r\n    }\r\n\r\n    //Prevent invalid date, return actual client date\r\n    return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n        hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n};\r\n\r\nexport default function Admin()\r\n{\r\n    const [userComments, setUserComments] = React.useState([]);\r\n    const [subscriptions, setSubscriptions] = React.useState([]);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await fetchUserComments();\r\n        await fetchSubscriptions();\r\n        await fetchCategories();\r\n        await fetchPosts();\r\n    }, []);\r\n\r\n    const APIheaders = {\r\n        'Content-Type': \"application/json\",\r\n        'Authorization': getToken()\r\n    };\r\n\r\n    const fetchUserComments = async()=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"UserComment\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                setUserComments(json);\r\n            }\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const fetchSubscriptions = async()=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"SuscribedEmail\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response) =>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                const json = await response.json();\r\n                setSubscriptions(json);\r\n            }\r\n        }).catch(e => alert(e));\r\n    }\r\n\r\n    const fetchCategories = async()=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Category\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response) =>\r\n        { \r\n            await response.json().then(json => setCategories(json))\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const fetchPosts = async()=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Post\";\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            await response.json().then(json => setPosts(json))\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const putComment= async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(row)\r\n            row[newData.field]=newData.value;\r\n\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"UserComment\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"PUT\",\r\n            headers: APIheaders,\r\n            'Content-Type': \"application/json\",\r\n            body: JSON.stringify(row)\r\n        }).then(async(response)=>\r\n        {    \r\n            if(!response.ok)\r\n            {    \r\n                alert(\"HTTP Code: \" + response.status);\r\n\r\n                //hacerlo manual proximamente\r\n                fetchUserComments();\r\n            }\r\n        }).catch(e => alert(e));  \r\n    };\r\n\r\n    const deleteComment=async(id)=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"UserComment/\" + id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchUserComments();\r\n                fetchPosts();\r\n            }\r\n        }).catch(e => alert(e));      \r\n    };\r\n\r\n    const commentsSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 585, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"postTitle\", headerName:\"Title of Post\", flex:1, renderCell:(params)=>\r\n                            (\r\n                                <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", textOverflow: \"ellipsis\",\r\n                                    textDecoration: \"none\"}\r\n                                    }\r\n                                    href={process.env.REACT_APP_FRONTEND_URL + \"post/\" + params.row.postId + \"/\" + params.value}>{params.value}</a>\r\n                            )},\r\n                        {field:\"nick\", headerName:\"Nick\", editable:true, flex:1},\r\n                        {field:\"content\", headerName:\"Content\", editable:true, flex:1,},\r\n                        {field:\"email\", headerName:\"Email\", editable:true, flex:1},\r\n                        {field:\"notifyReply\", headerName:\"Notify\", editable:true, flex:0.4 },\r\n                        {field:\"country\", headerName:\"Country\", flex:0.7},\r\n                        {field:\"commentDate\", headerName:\"Date\", flex:1, \r\n                            renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                        {field: \"action\", headerName:\"Action\", flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteComment(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={userComments}\r\n                    components={{\r\n                        NoRowsOverlay: () => \r\n                            ( \r\n                                <Stack height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n                                    Session expired...\r\n                                </Stack>\r\n                            ),\r\n                        Toolbar: GridToolbar \r\n                    }}\r\n                    getRowId={(row) => row.id}\r\n                    pageSize={8}\r\n                    onCellEditCommit={putComment}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const deleteSubscription=async(email)=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"SuscribedEmail/\" + email;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchSubscriptions();\r\n            }\r\n        }).catch(e => alert(e));      \r\n    };\r\n\r\n    const subscriptionsSection = ()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 585, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"email\", headerName:\"Email\", flex:1},\r\n                        {field:\"subscriptionDate\", headerName:\"Date\", flex:1, \r\n                            renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                        {field: \"action\", headerName:\"Action\", flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteSubscription(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={subscriptions}\r\n                    components={{\r\n                        NoRowsOverlay: () => \r\n                            ( \r\n                                <Stack height=\"100%\" alignItems=\"center\" justifyContent=\"center\">\r\n                                    Session expired...\r\n                                </Stack>\r\n                            ),\r\n                        Toolbar: GridToolbar \r\n                    }}\r\n                    getRowId={(row) => row.email}\r\n                    pageSize={8}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const postCategory=async(nameOfCategory)=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Category\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: APIheaders,\r\n            body: \"\\\"\"+nameOfCategory+\"\\\"\",\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                document.getElementById(\"NewCategory\").value=\"\";\r\n            }\r\n            else\r\n                alert(\"HTTP Code: \" + response.status);\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const deleteCategory=async(nameOfCategory)=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Category/\" + nameOfCategory;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchCategories();\r\n                fetchPosts();\r\n            }\r\n        }).catch(e => alert(e));   \r\n    };\r\n\r\n    const categoriesSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 370, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"nameOfCategory\", headerName:\"Name\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"count\", headerName:\"Number of Posts\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (info.id == 'Projects' || info.id == 'Private') ? null : \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteCategory(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={categories}\r\n                    getRowId={(row) => row.nameOfCategory}\r\n                    pageSize={4}\r\n                    //onCellEditCommit={updatedCategory}\r\n                    components={{Toolbar: GridToolbar}}\r\n                    />\r\n\r\n                    <label>New: </label>\r\n                    <input type=\"text\" id=\"NewCategory\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() => postCategory(document.getElementById(\"NewCategory\").value)}\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const fetchPost=async(id)=>\r\n    {\r\n        const urlToFetch=process.env.REACT_APP_BACKEND_URL + \"Post/\" + id.toString();\r\n\r\n        await fetch(urlToFetch, {\"method\": \"GET\", headers: APIheaders}).then(async(response)=>\r\n        { \r\n            if(response.ok)\r\n            {\r\n                await response.json().then(json =>\r\n                { \r\n                    setWrittenPost(json);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const postPost = async(post) =>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Post\";\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"POST\",\r\n            headers: APIheaders,\r\n            body: JSON.stringify(post),\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                fetchPosts();\r\n                resetWrittenPost();\r\n            }\r\n            else if(response.status != 500)\r\n                alert(\"HTTP Code: \" + response.status);\r\n            else \r\n                alert(\"Notifications error or server error!\")\r\n        }).catch(e => alert(e));\r\n    };\r\n\r\n    const putPost=async(post)=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Post/\" + post.id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"PUT\",\r\n            headers: APIheaders,\r\n            body: JSON.stringify(post),\r\n            'Content-Type': \"application/json\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(response.ok)\r\n            {\r\n                //hacer manualmente\r\n                fetchCategories();\r\n                fetchPosts();\r\n                resetWrittenPost();\r\n            }\r\n            else\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n        }).catch(e => alert(\"a\"));\r\n    }\r\n\r\n    const deletePost=async(id)=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"Post/\" + id.toString();\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n            headers: APIheaders,\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n            {\r\n                alert(\"HTTP Code: \" + response.status);\r\n            }\r\n            else\r\n            {\r\n                //hacerlo manual proximamente\r\n                fetchPosts();\r\n                fetchCategories();\r\n                fetchUserComments();\r\n            }\r\n        }).catch(e => alert(e)); \r\n    };\r\n\r\n    const getWrittenPost = () =>\r\n    {\r\n        const post = \r\n        {\r\n            id: document.getElementById(\"id\").value,\r\n            title: document.getElementById(\"title\").value,\r\n            content: document.getElementById(\"content\").value,\r\n            postDate: document.getElementById(\"postDate\").value,\r\n            category: document.getElementById(\"category\").value,\r\n            coverPhotoLink: document.getElementById(\"coverPhotoLink\").value,\r\n        };\r\n\r\n        return post;\r\n    }\r\n\r\n    const setWrittenPost = (json) =>\r\n    {\r\n        document.getElementById(\"id\").value=json.id;\r\n        document.getElementById(\"title\").value = json.title;\r\n        document.getElementById(\"content\").value = json.content;\r\n        document.getElementById(\"postDate\").value = json.postDate.replace(\" \", \"T\");\r\n        document.getElementById(\"category\").value = json.category;\r\n        document.getElementById(\"coverPhotoLink\").value = json.coverPhotoLink;\r\n    };\r\n\r\n    const resetWrittenPost = () =>\r\n    {\r\n        document.getElementById(\"id\").value = '';\r\n        document.getElementById(\"title\").value = '';\r\n        document.getElementById(\"content\").value = '';\r\n        document.getElementById(\"postDate\").value = '';\r\n        document.getElementById(\"category\").value = '';\r\n        document.getElementById(\"coverPhotoLink\").value = '';\r\n    };\r\n\r\n    const postsSection=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div style={{ height: 570, width: '100%', marginBottom:\"60px\", }}>\r\n                    <DataGrid \r\n                        columns={\r\n                        [\r\n                            {field:\"title\", headerName:\"Title\", sortable:false, disableColumnMenu:true, flex:1, \r\n                                renderCell:(params)=>\r\n                                (\r\n                                    <a style={{display: \"inline-block\", whiteSpace: \"nowrap\", overflow: \"hidden\", \r\n                                        textOverflow: \"ellipsis\", textDecoration: \"none\"}}\r\n                                        href={process.env.REACT_APP_FRONTEND_URL + \"post/\" + params.id + \"/\" + params.value}>\r\n                                    {params.value}\r\n                                    </a>\r\n                                )},\r\n                            {field:\"category\", headerName:\"Category\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"postDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (data) => (convertStringDateTimezoneToClient(data.value))},\r\n                            {field:\"commentsCount\", headerName:\"Number of Comments\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (info) => \r\n                                (\r\n                                    <>\r\n                                        <Button\r\n                                            style={{\r\n                                                backgroundColor: \"#ffcc00\",\r\n                                                width:\"48%\",\r\n                                                marginRight: \"4%\",\r\n                                                padding: \"3px 35px\"\r\n                                            }}\r\n                                            onClick={() => fetchPost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Edit\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#e8605d\",\r\n                                            width:\"48%\",\r\n                                            padding: \"3px 35px\",\r\n                                            }}\r\n\r\n                                            onClick={() => deletePost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Delete\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        ]}\r\n                        rows={posts}\r\n                        getRowId={(row) => row.id}\r\n                        pageSize={8}\r\n                        components={{Toolbar: GridToolbar}}\r\n                        />  \r\n                </div>\r\n                {newPostSection()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const newPostSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"markdownEditor\">\r\n                <label >ID: </label>\r\n                <input className=\"IDLabel\" type=\"number\" id=\"id\" disabled/>\r\n                <button onClick={() => document.getElementById(\"id\").value = null }>Set NULL For New Post</button>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Title: </label>\r\n                <input type=\"text\" id=\"title\" />\r\n                <div className=\"break\"/>\r\n\r\n                <label>Date: </label>\r\n                <input type=\"datetime-local\" id=\"postDate\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Category: </label>\r\n                <select id=\"category\" >\r\n                {\r\n                    categories.map( c=>\r\n                    {\r\n                        return(\r\n                            <option value={c.nameOfCategory}>\r\n                                {c.nameOfCategory}\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n                </select>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Cover Link: </label>\r\n                <input type=\"text\" id=\"coverPhotoLink\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <textarea className=\"textArea\" id=\"content\" \r\n                    onKeyDown={(e)=>\r\n                    {\r\n                        if(e.keyCode == 9) \r\n                        { \r\n                            e.preventDefault();\r\n\r\n                            const element=document.getElementById(\"content\");\r\n\r\n                            const start = element.selectionStart;\r\n                            const end = element.selectionEnd;\r\n\r\n                            element.value = element.value.substring(0, start) + \"\\t\" + element.value.substring(end);\r\n\r\n                            element.selectionStart = element.selectionEnd = start + 1;\r\n                        }\r\n                    }}\r\n                />\r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}} \r\n                    remarkPlugins={[remarkMath]}\r\n                    children={document.getElementById(\"content\")?.value} \r\n                    className={\"markdown\"} />\r\n                <div className=\"break\"/>\r\n\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#000000\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    marginRight:\"7px\"\r\n                    }}\r\n                    onClick={()=>{forceUpdate();}}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Review\r\n                </Button>\r\n                <Button\r\n                    style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"6%\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"7px\",\r\n                    }}\r\n                    onClick={()=>\r\n                    {\r\n                        if(document.getElementById(\"id\").value == '')\r\n                            postPost(getWrittenPost()); \r\n                        else\r\n                            putPost(getWrittenPost()); \r\n                    }}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Post\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"adminScreen\">\r\n            {commentsSection()}\r\n            {subscriptionsSection()}\r\n            {categoriesSection()}\r\n            {postsSection()}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nexport default function Unsubscribe()\r\n{\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const suffixUrl = useLocation().pathname;\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const email=informationUrl[2];\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await deleteSubscription(email);\r\n    }, []);\r\n\r\n    const deleteSubscription=async(email)=>\r\n    {\r\n        const urlToFetch = process.env.REACT_APP_BACKEND_URL + \"SuscribedEmail/\" + email;\r\n        await fetch((urlToFetch),\r\n        {\r\n            method: \"DELETE\",\r\n        }).then(async(response)=>\r\n        {\r\n            if(!response.ok)\r\n                setError(true);\r\n            setLoading(false);\r\n        }).catch(e => alert(e));\r\n    }\r\n\r\n    if(error)\r\n    {\r\n        return(\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">The email does not exist...</h6>\r\n        ); \r\n    }\r\n\r\n    if(loading)\r\n    {\r\n        return (\r\n            <div style={{margin: \"30px auto 120px auto\", textAlign: \"center\"}}>\r\n                <FadeLoader/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Unsubscribed :(</h6>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/personAndGuitar.24374079.jpg\";","import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\nimport logo from '../../Tools/Images/personAndGuitar.jpg';\r\n\r\nimport { prefixURLBackend } from '../PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    async function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n                break;\r\n\r\n            case \"statistics\" :\r\n                history.push(\"/statistics\");\r\n                break;  \r\n\r\n            case \"resume\" :\r\n                history.push(\"/resume\");\r\n                break;  \r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src={logo}/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"resume\")}}>\r\n                                Resume \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"statistics\")}}>\r\n                                Statistics\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n     \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport Resume from \"./Pages/Resume/Resume\";\nimport About from \"./Pages/About/About\";\nimport Statistics from \"./Pages/Statistics/Statistics\";\nimport Login from \"./Pages/Admin/Login\";\nimport Admin from \"./Pages/Admin/Admin\";\nimport Unsubscribe from \"./Pages/Unsubscribe/Unsubscribe\";\n\nimport Header from \"./Tools/Header/Header\";\nimport Footer from \"./Tools/Footer/Footer\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n  <div className=\"mainScreen\">\n    <HashRouter >\n      <Header/>\n      \n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route exact path=\"/resume\" component={Resume}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n      <Route exact path=\"/statistics\" component={Statistics}/>\n      <Route exact path=\"/login\" component={Login}/>\n      <Route exact path=\"/admin\" component={Admin}/>\n      <Route exact path=\"/unsubscribe/:email\" component={Unsubscribe}/>\n\n      <Footer/>\n    </HashRouter>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}