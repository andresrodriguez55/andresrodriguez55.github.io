{"version":3,"sources":["Pages/Post/markdown-styles.module.css","Tools/Images/personAndGuitar.jpg","Tools/PrefixURLBackend/PrefixURLBackend.js","Tools/Header/Header.js","Tools/Footer/Footer.js","Pages/Blog/Blog.js","Pages/Post/Post.js","Pages/About/taza.jpg","Pages/About/About.js","Pages/PanelAdmin/PanelAdmin.js","Pages/Admin/Admin.js","App.js","index.js"],"names":["module","exports","prefixURLBackend","Header","history","useHistory","getUserIP","a","fetch","method","then","information","json","data","ipAddress","catch","e","alert","IP","redirect","category","push","userEmail","prompt","formData","FormData","append","body","response","text","result","className","src","logo","onClick","Footer","href","target","Blog","initialCategory","useLocation","pathname","React","useState","selectedCategory","setSelectedCategory","categories","setCategories","posts","setPosts","areTherePosts","setAreTherePosts","numberOfVisiblePosts","setNumberOfVisiblePosts","useEffect","loadPosts","loadCategories","URLToFetch","JSON","parse","length","showMorePosts","val","convertStringDateTimezoneToClient","stringDate","serverDate","Date","toString","localeCompare","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","id","onChange","selected","document","getElementById","value","options","selectedIndex","updateSelectedCategory","map","c","NameOfCategory","printCategories","slice","post","Category","ID","title","Title","replace","CoverPhotoLink","PostDate","style","display","fontSize","fontWeight","align","Post","informationUrl","split","urlID","urlTitle","setPost","doesPostExist","setDoesPostExist","comments","setComments","clientIP","setClientIP","loadPost","updateClientIP","loadComments","markdownCodeThemeComponent","props","railscasts","language","substring","children","submitComment","preventDefault","window","location","replaceAll","scrollTo","scrollHeight","rehypePlugins","rehypeRaw","remarkGfm","rehypeKatex","components","code","remarkPlugins","remarkMath","Content","reactMarkDown","onSubmit","name","type","placeholder","autoComplete","required","minLength","maxLength","comment","Nick","CommentDate","About","PanelAdmin","user","userComments","setUserComments","newPostContent","setNewPostContent","loadUserComments","updatedComment","newData","row","field","Username","Password","parseInt","UserCommentNick","UserCommentContent","deleteUserComment","updatedCategory","deleteCategory","nameOfCategory","postCategory","deletePost","postID","setNewPostID","newID","postOrUpdatePost","newPostSection","disabled","onKeyDown","keyCode","element","start","selectionStart","end","selectionEnd","Button","backgroundColor","width","padding","marginTop","marginRight","variant","height","marginBottom","columns","headerName","sortable","disableColumnMenu","flex","editable","renderCell","info","rows","pageSize","onCellEditCommit","PostTitle","PostContent","PostCategory","PostCoverPhotoLink","Admin","commentsCountries","setCommentsCountries","commentsCountriesCount","setCommentsCountriesCount","commentsDate","setCommentsDate","commentsDateCount","setCommentsDateCount","setUser","isSessionActive","setIsSessionActive","loadCommentsCountriesInfo","loadCommentsMonthsInfo","tempCommentsCountries","tempCommentsCountriesCount","Country","CommentsCount","tempCommentsMonths","tempCommentsMonthsCount","number","getMonthName","CommentsMonth","submit","autocomplete","labels","datasets","len","colors","temp","getLoopColorsByLength","responsive","maintainAspectRatio","plugins","legend","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d1a4cb69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__sUiWG\"};","export default __webpack_public_path__ + \"static/media/personAndGuitar.24374079.jpg\";","// https://personalblog55.herokuapp.com/\r\nexport const prefixURLBackend =\"https://personalblog55.herokuapp.com/\";","import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\nimport logo from '../../Tools/Images/personAndGuitar.jpg';\r\n\r\nimport { prefixURLBackend } from '../PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    async function getUserIP()\r\n    {\r\n        const IP=await fetch(\"https://api.db-ip.com/v2/free/self\", {method:\"GET\"}).then\r\n        (\r\n            async(information)=> await information.json().then\r\n            ( \r\n                data=>{ return data.ipAddress })\r\n            ).catch(e=>alert(\"Fatal error...\")\r\n        );\r\n\r\n        return IP;\r\n    }\r\n\r\n    async function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n                break;\r\n\r\n            case \"subscribe\":\r\n                const userEmail=prompt(\"Please enter the email to which you want to receive notifications about new posts:\");\r\n\r\n                if(userEmail==null)\r\n                    return;\r\n\r\n                const formData = new FormData();\r\n                formData.append(\"Email\", userEmail);\r\n                const IP=await getUserIP();\r\n                formData.append(\"IP\", IP);\r\n\r\n                await fetch((prefixURLBackend+\"SubscribedEmail/PostEmail.php\"),\r\n                {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                }).then(async(response)=>{await response.text()\r\n                .then((result)=>\r\n                {\r\n                    alert(result);\r\n                })});       \r\n\r\n                break;\r\n\r\n            case \"admin\" :\r\n                history.push(\"/admin\");\r\n                break;  \r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src={logo}/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n     \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"subscribe\")}}>\r\n                                Subscribe\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"admin\")}}>\r\n                                Admin\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Blog.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Blog()\r\n{\r\n    const history=useHistory();\r\n    function redirect(ID, title)\r\n    {\r\n        history.push(\"post/\"+ID+\"/\"+title.replace(\" \", \"%20\"));\r\n    };\r\n\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory]= React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [areTherePosts, setAreTherePosts] = React.useState(true);\r\n    const [numberOfVisiblePosts, setNumberOfVisiblePosts]=React.useState(4);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadPosts();\r\n        if(initialCategory==\"All\")\r\n            loadCategories();\r\n    }, []);\r\n\r\n    const loadCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"Category/ReadCategoriesOfPosts.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert(URLToFetch));\r\n    };\r\n\r\n    const loadPosts=async()=>\r\n    {\r\n        let URLToFetch=prefixURLBackend+\"Post/ReadByCategory.php\"+\r\n            ( (selectedCategory==\"All\")?\"\":(\"?Category=\"+selectedCategory) );\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setPosts(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n\r\n        if(posts.length==0)\r\n            setAreTherePosts(false);\r\n    };\r\n\r\n    const showMorePosts=()=>\r\n    {\r\n        setNumberOfVisiblePosts((val)=>val+4);\r\n    };\r\n\r\n    const ifIsNecesaryHideMoreButton=()=>\r\n    {\r\n        if(posts.length<=numberOfVisiblePosts && posts.length!=0)\r\n            document.getElementById('morePostsButton').style.display = 'none';\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const printCategories=()=>\r\n    {\r\n        if(initialCategory!=\"All\")\r\n            return;\r\n\r\n        return(\r\n            <div className=\"displayCategories\">\r\n                <select id=\"selectedCategory\" \r\n                    onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.NameOfCategory}>\r\n                                    {c.NameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        if(posts.length>0)\r\n        {   \r\n            return( \r\n                <div>\r\n                    <div  className=\"posts\">\r\n                    {\r\n                        posts.slice(0, numberOfVisiblePosts).map((post)=>\r\n                        {\r\n                            if(selectedCategory==\"All\" || post.Category==selectedCategory)\r\n                            {\r\n                                return(\r\n                                    <div className=\"postGrid\" \r\n                                        onClick={()=>{redirect(post.ID.toString(), post.Title)}}>\r\n                                        <img className=\"postGridImage\" src={post.CoverPhotoLink}/>\r\n                                        <div className=\"postGridInformation\">\r\n                                            <h2 className=\"postGridTitle\">{post.Title}</h2>\r\n                                            <p className=\"postGridCategory\">{\"Category: \"+post.Category}</p>\r\n                                            <p className=\"postGridDate\">{convertStringDateTimezoneToClient(post.PostDate)}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        })\r\n                    }{ifIsNecesaryHideMoreButton()}\r\n                    </div>\r\n                    \r\n                    <div className=\"morePostsButtonArea\">\r\n                        <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                            onClick={showMorePosts}>More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(areTherePosts)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return (\r\n                <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n            );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"blogScreen\">\r\n            <Header/>\r\n            <div>{printCategories()}{printPosts()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n    const urlTitle=informationUrl[3];\r\n\r\n    const [post, setPost] = React.useState([]);\r\n    const [doesPostExist, setDoesPostExist] = React.useState(true);\r\n    const [comments, setComments]=React.useState([]);\r\n    const [clientIP, setClientIP]=React.useState(\"0.0.0.0\");\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadPost();\r\n        await updateClientIP();\r\n        await loadComments();\r\n    }, []);\r\n\r\n    const updateClientIP=async()=>\r\n    {\r\n        if(doesPostExist)\r\n        {\r\n            await fetch(\"https://api.db-ip.com/v2/free/self\", {method:\"GET\"}).then(\r\n                async(information)=> await information.json()\r\n                .then( data=>{ setClientIP(data.ipAddress) }))\r\n                .catch(e=>alert(\"Fatal error...\"));\r\n        }\r\n    };\r\n\r\n    const loadPost=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"Post/ReadConcrete.php?ID=\"+urlID.toString()).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then((data)=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                setPost(json);\r\n            })\r\n        }).catch(e => alert('Post content error! Database connection error...'));\r\n\r\n        if(post.length==0)\r\n            setDoesPostExist(false);\r\n    };\r\n\r\n    const loadComments=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"UserComment/ReadForConcretePost.php?PostID=\"+urlID.toString())\r\n            .then(async(information)=>\r\n            { \r\n                await information.text()\r\n                .then(data=>\r\n                    {\r\n                        const json=JSON.parse(data);\r\n                        setComments(json);\r\n                    })\r\n            })\r\n            .catch(e => alert('Comments error! Database connection error...'));\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printComments=()=>\r\n    {\r\n        return(\r\n            comments.map(comment=>\r\n            {\r\n                return(\r\n                    <div className=\"userCommentArea\">\r\n                        <h4 className=\"userCommentNick\">{comment.Nick}</h4>\r\n                        <p className=\"userCommentContent\">{comment.Content}</p>\r\n                        <p className=\"userCommentDate\">\r\n                        {\r\n                            convertStringDateTimezoneToClient(comment.CommentDate)\r\n                        }\r\n                        </p>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    const submitComment=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Nick\", document.getElementById(\"Nick\").value);\r\n        formData.append(\"Content\", document.getElementById(\"Content\").value);\r\n        formData.append(\"PostID\", urlID);\r\n        formData.append(\"IP\", clientIP);\r\n        formData.append(\"ClientURL\", window.location.href);\r\n        formData.append(\"CommentDate\", \r\n            (new Date()).toLocaleString(\"es-ES\", {timeZone: \"Europe/Istanbul\"}).replaceAll(\"/\", \"-\"));\r\n\r\n        await fetch((prefixURLBackend+\"UserComment/Create.php\"),\r\n        {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then(async(response)=>{await response.text()\r\n        .then(async(result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else \r\n                window.scrollTo(0,document.body.scrollHeight);\r\n        })});     \r\n        \r\n        document.getElementById(\"Nick\").value=\"\";\r\n        document.getElementById(\"Content\").value=\"\";\r\n        loadComments();\r\n    };\r\n\r\n    const printCommentsSection= ()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\">\r\n                <form  onSubmit={(e)=>submitComment(e)} className=\"commentsForm\">\r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Nick</label>\r\n                        <input className=\"nickInput\" name=\"Nick\" id=\"Nick\" \r\n                            type=\"text\" placeholder=\"Enter a nick...\" \r\n                            autoComplete=\"off\" required={true} minLength={3}/>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Comment</label>\r\n                        <input className=\"commentInput\" name=\"Content\" id=\"Content\" \r\n                            type=\"text\" placeholder=\"Enter your comment...\" \r\n                            autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                    </div>\r\n        \r\n                    <div>\r\n                        <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                            type=\"submit\" value=\"Post\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"usersCommentsArea\">{printComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const printPostAndCommentsSection=()=>\r\n    {\r\n        if(post && post.Title===urlTitle.replace(\"%20\", \" \"))\r\n        {\r\n            return(\r\n                <div>\r\n                    <div className=\"PostArea\">\r\n                        <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                            components={{code: markdownCodeThemeComponent}}\r\n                            remarkPlugins={[remarkMath]}\r\n                            children={\"<div className='postInfo'><img className='postImage' src='\"+post.CoverPhotoLink+\"'/>\"+\r\n                            \"<div className='postHeaderText'><h1 className='postTitleX' align='center'>\"+post.Title+\"</h1>\"+\r\n                            \"<h6 className='postDate' align='center'>\"+convertStringDateTimezoneToClient(post.PostDate)+\"</h6></div></div>\"+\r\n                            post.Content} \r\n                            className={style.reactMarkDown} />\r\n                    </div>\r\n                    <div>{printCommentsSection()}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(doesPostExist)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">POST NOT EXIST...</h6>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"postScreen\">\r\n            <Header/>\r\n            <div>{printPostAndCommentsSection()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );   \r\n}","export default __webpack_public_path__ + \"static/media/taza.1fa020a4.jpg\";","import Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\n\r\nimport logo from './taza.jpg';\r\n\r\nimport \"./About.css\";\r\n\r\nexport default function About()\r\n{\r\n    return(\r\n        <div className=\"aboutScreen\">\r\n            <Header/>\r\n            <div className=\"aboutArea\">\r\n                <img className=\"aboutPic\" src={logo}/>\r\n                <br/>\r\n                <span >\r\n                    Welcome to my mind! This is my personal space. Here I write any experience, thought or thing that I have just learned.\r\n                    <br/>\r\n                    <br/>\r\n                    I am a Spanish, I was born in 1999 and I study computer engineering at Ege University located in Turkey. I love to learn new things, work hard, play the guitar and socialize with foreigners.\r\n                </span>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\n\r\nimport \"./PanelAdmin.css\"\r\n\r\nexport default function PanelAdmin({user})\r\n{\r\n    const [userComments, setUserComments] = React.useState([]);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n    const [newPostContent, setNewPostContent] = React.useState(\"\");\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadCategories();\r\n        await loadUserComments();\r\n        await loadPosts();\r\n    }, []);\r\n\r\n    const loadCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadCategoriesInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadUserComments=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadUserCommentsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setUserComments(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadPosts=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadPostsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setPosts(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const updatedComment=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(row)\r\n            row[newData.field]=newData.value;\r\n        else \r\n        {    \r\n            loadUserComments();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", parseInt(row.id));\r\n        data.append(\"Nick\", row.UserCommentNick);\r\n        data.append(\"Content\", row.UserCommentContent);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadUserComments();\r\n    };\r\n\r\n    const deleteUserComment=async(id)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", id);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadUserComments();\r\n    };\r\n\r\n    const commentsSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 320, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"PostTitle\", headerName:\"Title of Post\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field:\"UserCommentNick\", headerName:\"Nick of User\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"UserCommentContent\", headerName:\"Content of Comment\", sortable:false, disableColumnMenu:true,  editable:true, flex:1},\r\n                        {field:\"UserCountry\", headerName:\"Country\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field:\"CommentDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteUserComment(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={userComments}\r\n                    pageSize={4}\r\n                    onCellEditCommit={updatedComment}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const updatedCategory=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(!row)\r\n        {\r\n            loadCategories();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"CurrentNameOfCategory\", row.NameOfCategory);\r\n        data.append(\"NewNameOfCategory\", newData.value);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const deleteCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadCategories();\r\n    };\r\n\r\n    const postCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/PostCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n                document.getElementById(\"NewCategory\").value=\"\";\r\n        })});      \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const categoriesSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 320, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"NameOfCategory\", headerName:\"Name\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"NumberOfPosts\", headerName:\"Number of Posts\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteCategory(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={categories}\r\n                    pageSize={4}\r\n                    onCellEditCommit={updatedCategory}/>\r\n\r\n                    <label>New: </label>\r\n                    <input type=\"text\" id=\"NewCategory\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() => postCategory(document.getElementById(\"NewCategory\").value)}\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const deletePost=async(postID)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", postID);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeletePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    };\r\n\r\n    const setNewPostInfoWithExistingPostInfo=(post)=>\r\n    {\r\n        setNewPostID(post.id);\r\n        document.getElementById(\"PostTitle\").value=post.PostTitle;\r\n        document.getElementById(\"PostContent\").value=post.PostContent;\r\n        setNewPostContent(post.PostContent);\r\n        document.getElementById(\"PostDate\").value=post.PostDate.replace(\" \", \"T\");\r\n        document.getElementById(\"PostCategory\").value=post.PostCategory;\r\n        document.getElementById(\"PostCoverLink\").value=post.PostCoverPhotoLink;\r\n    };\r\n\r\n    const setNewPostID=(newID)=>\r\n    {\r\n        document.getElementById(\"PostID\").value=newID;\r\n    };\r\n\r\n    const postsSection=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div style={{ height: 320, width: '100%', marginBottom:\"20px\", }}>\r\n                    <DataGrid \r\n                        columns={\r\n                        [\r\n                            {field:\"PostTitle\", headerName:\"Title\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"PostCategory\", headerName:\"Category\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"PostDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"NumberOfComments\", headerName:\"Number of Comments\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                                renderCell: (info) => \r\n                                (\r\n                                    <>\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#ffcc00\",\r\n                                            width:\"48%\",\r\n                                            marginRight: \"4%\",\r\n                                            padding: \"3px 35px\"\r\n                                            }}\r\n\r\n                                            onClick={() => setNewPostInfoWithExistingPostInfo(info.row)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Edit\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#e8605d\",\r\n                                            width:\"48%\",\r\n                                            padding: \"3px 35px\",\r\n                                            }}\r\n\r\n                                            onClick={() => deletePost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Delete\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        ]}\r\n                        rows={posts}\r\n                        pageSize={4}/>  \r\n                </div>\r\n                {newPostSection()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const postOrUpdatePost=async()=>\r\n    {\r\n        if(!document.getElementById(\"PostID\"))\r\n            return;\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n\r\n        data.append(\"ID\", parseInt(document.getElementById(\"PostID\").value));\r\n        data.append(\"Title\", document.getElementById(\"PostTitle\").value.replaceAll(\"\\\"\", \"\\'\"));\r\n        data.append(\"Content\", document.getElementById(\"PostContent\").value.replaceAll(\"\\\"\", \"\\'\").replaceAll(\"\\\\\", \"\\\\\\\\\"));\r\n        data.append(\"Category\", document.getElementById(\"PostCategory\").value);\r\n        data.append(\"PostDate\", document.getElementById(\"PostDate\").value.replace(\"T\", \" \").replaceAll(\"-\",\".\"));\r\n        data.append(\"CoverPhotoLink\", document.getElementById(\"PostCoverLink\").value);\r\n        \r\n        //notify to backend if its a new post\r\n        data.append(\"isNew\", \r\n            (posts.length==document.getElementById(\"PostID\").value && \r\n            document.getElementById(\"PostCategory\").value!=\"Private\")?\"1\":\"0\");\r\n\r\n        await fetch((prefixURLBackend+\"Admin/PostOrUpdatePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                document.getElementById(\"PostID\").value=\"\";\r\n                document.getElementById(\"PostTitle\").value=\"\";\r\n                document.getElementById(\"PostContent\").value=\"\";\r\n                document.getElementById(\"PostCoverLink\").value=\"\";\r\n                setNewPostContent(\"\");\r\n            }\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    }\r\n\r\n    const newPostSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"markdownEditor\">\r\n                <label >ID: </label>\r\n                <input className=\"IDLabel\" type=\"number\" id=\"PostID\" disabled/>\r\n                <button onClick={()=>setNewPostID(posts.length)}>Set For New Post</button>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Title: </label>\r\n                <input type=\"text\" id=\"PostTitle\" />\r\n                <div className=\"break\"/>\r\n\r\n                <label>Date: </label>\r\n                <input type=\"datetime-local\" id=\"PostDate\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Category: </label>\r\n                <select id=\"PostCategory\" >\r\n                {\r\n                    categories.map(c=>\r\n                    {\r\n                        return(\r\n                            <option value={c.NameOfCategory}>\r\n                                {c.NameOfCategory}\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n                </select>\r\n\r\n                <div className=\"break\"/>\r\n\r\n                <label>Cover Link: </label>\r\n                <input type=\"text\" id=\"PostCoverLink\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <textarea className=\"textArea\" id=\"PostContent\" \r\n                    onKeyDown={(e)=>\r\n                    {\r\n                        if(e.keyCode == 9) \r\n                        { \r\n                            e.preventDefault();\r\n\r\n                            const element=document.getElementById(\"PostContent\");\r\n\r\n                            const start = element.selectionStart;\r\n                            const end = element.selectionEnd;\r\n\r\n                            element.value = element.value.substring(0, start) + \"\\t\" + element.value.substring(end);\r\n\r\n                            element.selectionStart = element.selectionEnd = start + 1;\r\n                        }\r\n                    }}\r\n                />\r\n                \r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}} \r\n                    remarkPlugins={[remarkMath]}\r\n                    children={newPostContent} \r\n                    className={\"markdown\"} />\r\n                <div className=\"break\"/>\r\n\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#000000\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    marginRight:\"7px\"\r\n                    }}\r\n                    onClick={()=>{setNewPostContent(document.getElementById(\"PostContent\").value)}}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Review\r\n                </Button>\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#0c7d06\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    }}\r\n\r\n                    onClick={()=>postOrUpdatePost()}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Post\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"adminScreen\">\r\n            {commentsSection()}\r\n            {categoriesSection()}\r\n            {postsSection()}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Pie, Line} from \"react-chartjs-2\"\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport PanelAdmin from \"../PanelAdmin/PanelAdmin\"\r\n\r\nimport \"./Admin.css\"\r\n\r\nexport default function Admin()\r\n{\r\n    const [commentsCountries, setCommentsCountries]=React.useState([]);\r\n    const [commentsCountriesCount, setCommentsCountriesCount]=React.useState([]);\r\n    const [commentsDate, setCommentsDate]=React.useState([]);\r\n    const [commentsDateCount, setCommentsDateCount]=React.useState([]);\r\n\r\n    const [user, setUser]=React.useState({});\r\n    const [isSessionActive, setIsSessionActive]=React.useState(false);\r\n\r\n    React.useEffect(()=>\r\n    {\r\n        loadCommentsCountriesInfo();\r\n        loadCommentsMonthsInfo();\r\n    }, []);\r\n\r\n    const loadCommentsCountriesInfo=()=>\r\n    {\r\n        const tempCommentsCountries=[];\r\n        const tempCommentsCountriesCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByCountries.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsCountries.push(row.Country);\r\n                    tempCommentsCountriesCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsCountries(tempCommentsCountries);\r\n                setCommentsCountriesCount(tempCommentsCountriesCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getMonthName(number)\r\n    {\r\n        switch(number)\r\n        {\r\n            case \"1\":\r\n                return \"January\";\r\n            case \"2\":\r\n                return \"Frebruary\";\r\n            case \"3\":\r\n                return \"March\";\r\n            case \"4\":\r\n                return \"April\";\r\n            case \"5\":\r\n                return \"May\";\r\n            case \"6\":\r\n                return \"June\";\r\n            case \"7\":\r\n                return \"July\";\r\n            case \"8\":\r\n                return \"August\";\r\n            case \"9\":\r\n                return \"September\";\r\n            case \"10\":\r\n                return \"October\";\r\n            case \"11\":\r\n                return \"November\";\r\n            default:\r\n                return \"December\";\r\n        };\r\n    };\r\n\r\n    const loadCommentsMonthsInfo=()=>\r\n    {\r\n        const tempCommentsMonths=[];\r\n        const tempCommentsMonthsCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByMonths.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsMonths.push(getMonthName(row.CommentsMonth));\r\n                    tempCommentsMonthsCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsDate(tempCommentsMonths);\r\n                setCommentsDateCount(tempCommentsMonthsCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getLoopColorsByLength(len)\r\n    {\r\n        const colors=[\"red\", \"blue\", \"yellow\", \"orange\", \"brown\", \"pink\"];\r\n        let temp=0;\r\n\r\n        while(colors.length<len)\r\n        {\r\n            colors.push(colors[(temp++)%colors.length]);\r\n        }\r\n\r\n        return colors;\r\n    };\r\n\r\n    const submit=(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Username\", document.getElementById(\"Username\").value);\r\n        formData.append(\"Password\", document.getElementById(\"Password\").value);\r\n\r\n        fetch((prefixURLBackend+\"Admin/ReadUserExist.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: formData\r\n        }).then((response)=>{response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                setUser({\r\n                    Username: document.getElementById(\"Username\").value,\r\n                    Password: document.getElementById(\"Password\").value\r\n                });\r\n                setIsSessionActive(true);\r\n            }\r\n        })});      \r\n    };\r\n\r\n    if(isSessionActive==false)\r\n    {\r\n        return(\r\n            <div className=\"loginScreen\">\r\n                <form className=\"loginForm\" onSubmit={(e)=>submit(e)}>\r\n                    <h1>Admin Panel</h1>\r\n                    <input className=\"usernameInput\" name=\"Username\" id=\"Username\" \r\n                            type=\"password\" placeholder=\"Username\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"passwordInput\" name=\"Password\" id=\"Password\" \r\n                            type=\"password\" placeholder=\"Password\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"loginPostButton\" name=\"loginSubmit\" id=\"loginSubmit\" \r\n                                                type=\"submit\" value=\"Login\" />   \r\n                </form>\r\n    \r\n                <h1 align=\"center\">Statistics</h1>\r\n    \r\n                <div className=\"chartArea\">\r\n                    <Pie data=\r\n                        {{\r\n                            labels: commentsCountries,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: getLoopColorsByLength(commentsCountriesCount.length),\r\n                                data: commentsCountriesCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Countries of Comments\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div> \r\n    \r\n                <div className=\"chartArea\">\r\n                    <Line data=\r\n                        {{\r\n                            labels: commentsDate,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                                data: commentsDateCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Months of Comments Counts\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    else\r\n    {\r\n        return(\r\n            <PanelAdmin user={user} />\r\n        );\r\n    }\r\n}","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport About from \"./Pages/About/About\";\nimport Admin from \"./Pages/Admin/Admin\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n    <HashRouter >\n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n\n      <Route exact path=\"/admin\" component={Admin}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}