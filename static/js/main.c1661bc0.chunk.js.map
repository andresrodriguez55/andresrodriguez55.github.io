{"version":3,"sources":["Tools/Header/Header.js","Tools/Footer/Footer.js","Tools/PrefixURLBackend/PrefixURLBackend.js","Pages/Blog/Blog.js","Pages/Post/Post.js","Pages/About/ContentAbout.md","Pages/About/About.js","App.js","index.js","Pages/Post/markdown-styles.module.css","Pages/About/markdown-styles.module.css"],"names":["Header","history","useHistory","redirect","category","push","className","src","onClick","Footer","href","target","prefixURLBackend","Blog","initialCategory","useLocation","pathname","React","useState","selectedCategory","setSelectedCategory","categories","setCategories","posts","setPosts","numberOfVisiblePosts","setNumberOfVisiblePosts","useEffect","loadPosts","loadCategories","fetch","then","information","text","data","json","JSON","parse","catch","e","alert","ifIsNecesaryHideMoreButton","showMorePosts","val","length","document","getElementById","style","display","class","id","onChange","selected","value","options","selectedIndex","updateSelectedCategory","map","c","NameOfCategory","printCategories","slice","post","Category","ID","title","toString","Title","replace","CoverPhotoLink","PostDate","Post","informationUrl","split","urlID","urlTitle","setPost","doesPostExist","setDoesPostExist","comments","setComments","clientIP","setClientIP","a","loadPost","updateClientIP","loadComments","method","ipAddress","markdownCodeThemeComponent","props","railscasts","language","substring","children","rehypePlugins","rehypeRaw","remarkGfm","components","code","Content","reactMarkDown","action","name","type","placeholder","autocomplete","required","minLength","maxLength","window","location","comment","clientDate","Date","CommentDate","getTimezone","TimeZone","utcOffsetStr","Nick","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","replaceAll","fontSize","fontWeight","align","About","markdown","setMarkdown","ContentAbout","content","App","basename","exact","path","component","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.c1661bc0.chunk.js","sourcesContent":["import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src=\"https://drive.google.com/uc?id=1pgByDR1LKavmj_hHA1PcPvfiv5CxY2w1\"/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const prefixURLBackend =\"https://personalblog55.herokuapp.com/\";","import React from 'react';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Blog.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Blog()\r\n{\r\n    const history=useHistory();\r\n    function redirect(ID, title)\r\n    {\r\n        history.push(\"post/\"+ID+\"/\"+title.replace(\" \", \"%20\"));\r\n    };\r\n\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory]= React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [numberOfVisiblePosts, setNumberOfVisiblePosts]=React.useState(4);\r\n\r\n    React.useEffect(()=>\r\n    {\r\n        loadPosts();\r\n        if(initialCategory==\"All\")\r\n            loadCategories();\r\n    }, []);\r\n\r\n    const loadCategories=()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Category/ReadCategoriesOfPosts.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadPosts=()=>\r\n    {\r\n        let URLToFetch=prefixURLBackend+\"/Post/ReadByCategory.php\"+\r\n            ( (selectedCategory==\"All\")?\"\":(\"?Category=\"+selectedCategory) );\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setPosts(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n\r\n        ifIsNecesaryHideMoreButton();\r\n    };\r\n\r\n    const showMorePosts=()=>\r\n    {\r\n        ifIsNecesaryHideMoreButton();\r\n        setNumberOfVisiblePosts((val)=>val+4);\r\n    };\r\n\r\n    const ifIsNecesaryHideMoreButton=()=>\r\n    {\r\n        if(posts.length<=numberOfVisiblePosts)\r\n            document.getElementById('morePostsButton').style.display = 'none';\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const printCategories=()=>\r\n    {\r\n        if(initialCategory!=\"All\")\r\n            return;\r\n\r\n        return(\r\n            <div class=\"displayCategories\">\r\n                <select id=\"selectedCategory\" \r\n                    onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.NameOfCategory}>\r\n                                    {c.NameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div  className=\"posts\">\r\n                {\r\n                    posts.slice(0, numberOfVisiblePosts).map(post=>\r\n                    {\r\n                        if(selectedCategory==\"All\" || post.Category==selectedCategory)\r\n                        {\r\n                            return(\r\n                                <div className=\"postGrid\" \r\n                                    onClick={()=>{redirect(post.ID.toString(), post.Title)}}>\r\n                                    <img className=\"postGridImage\" src={post.CoverPhotoLink}/>\r\n                                    <div className=\"postGridInformation\">\r\n                                        <h2 className=\"postGridTitle\">{post.Title}</h2>\r\n                                        <p className=\"postGridCategory\">{\"Category: \"+post.Category}</p>\r\n                                        <p className=\"postGridDate\">{post.PostDate}</p>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })\r\n                }\r\n                </div>\r\n                \r\n                <div className=\"morePostsButtonArea\">\r\n                    <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                        onClick={showMorePosts}>More</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <div>{printCategories()}{printPosts()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport {getTimezone} from 'countries-and-timezones';\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n    const urlTitle=informationUrl[3];\r\n\r\n    const [post, setPost] = React.useState([]);\r\n    const [doesPostExist, setDoesPostExist] = React.useState(true);\r\n    const [comments, setComments]=React.useState([]);\r\n    const [clientIP, setClientIP]=React.useState(\"0.0.0.0\");\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadPost();\r\n        await updateClientIP();\r\n        await loadComments();\r\n    }, []);\r\n\r\n    const updateClientIP=async()=>\r\n    {\r\n        if(doesPostExist)\r\n        {\r\n            await fetch(\"https://api.db-ip.com/v2/free/self\", {method:\"GET\"}).then(\r\n                async(information)=> await information.json()\r\n                .then( data=>{ setClientIP(data.ipAddress) }))\r\n                .catch(e=>alert(\"Fatal error...\"));\r\n        }\r\n    };\r\n\r\n    const loadPost=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"/Post/ReadConcrete.php?ID=\"+urlID.toString()).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then((data)=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                setPost(json);\r\n            })\r\n        }).catch(e => alert('Post content error! Database connection error...'));\r\n\r\n        if(post.length==0)\r\n            setDoesPostExist(false);\r\n    };\r\n\r\n    const loadComments=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"/UserComment/ReadForConcretePost.php?PostID=\"+urlID.toString())\r\n            .then(async(information)=>\r\n            { \r\n                await information.text()\r\n                .then(data=>\r\n                    {\r\n                        const json=JSON.parse(data);\r\n                        setComments(json);\r\n                    })\r\n            })\r\n            .catch(e => alert('Comments error! Database connection error...'));\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const printComments=()=>\r\n    {\r\n        return(\r\n            comments.map(comment=>\r\n            {\r\n                const clientDate=new Date(comment.CommentDate+\" \"+getTimezone(comment.TimeZone).utcOffsetStr);\r\n\r\n                return(\r\n                    <div className=\"userCommentArea\">\r\n                        <h4 className=\"userCommentNick\">{comment.Nick}</h4>\r\n                        <p className=\"userCommentContent\">{comment.Content}</p>\r\n                        <p className=\"userCommentDate\">\r\n                        {\r\n                            clientDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                                hour12: false }).replaceAll(\"/\", \".\")\r\n                        }\r\n                        </p>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    const printCommentsSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\">\r\n                <form action={(prefixURLBackend+\"/UserComment/Create.php\")} method=\"POST\" class=\"commentsForm\">\r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Nick</label>\r\n                        <input className=\"nickInput\" name=\"Nick\" id=\"Nick\" \r\n                            type=\"text\" placeholder=\"Enter a nick...\" \r\n                            autocomplete=\"off\" required={true} minLength={3}/>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Comment</label>\r\n                        <input className=\"commentInput\" name=\"Content\" id=\"Content\" \r\n                            type=\"text\" placeholder=\"Enter your comment...\" \r\n                            autocomplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                    </div>\r\n\r\n                    <div className=\"hiddenValues\">\r\n                        <input name=\"PostID\" id=\"PostID\" type=\"hidden\" value={urlID} />\r\n                        <input name=\"IP\" id=\"IP\" type=\"hidden\" value={clientIP} />\r\n                        <input name=\"ClientURL\" id=\"ClientURL\" type=\"hidden\" value={window.location.href} />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                            type=\"submit\" value=\"Post\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"usersCommentsArea\">{printComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const printPostAndCommentsSection=()=>\r\n    {\r\n        if(post && post.Title===urlTitle.replace(\"%20\", \" \"))\r\n        {\r\n            return(\r\n                <div>\r\n                    <div className=\"PostArea\">\r\n                        <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm]} \r\n                            components={{code: markdownCodeThemeComponent}}\r\n                            children={\"<div className='postInfo'><img className='postImage' src='\"+post.CoverPhotoLink+\"'/>\"+\r\n                            \"<div className='postHeaderText'><h1 className='postTitle' align='center'>\"+post.Title+\"</h1>\"+\r\n                            \"<h6 className='postDate' align='center'>\"+post.PostDate.substring(0,16)+\"</h6></div></div>\"+\r\n                            post.Content} \r\n                            className={style.reactMarkDown} />\r\n                    </div>\r\n                    <div>{printCommentsSection()}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(doesPostExist)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">POST NOT EXIST...</h6>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <div>{printPostAndCommentsSection()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );   \r\n}","export default __webpack_public_path__ + \"static/media/ContentAbout.65ebf484.md\";","import { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport ContentAbout from \"./ContentAbout.md\";\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nexport default function About()\r\n{\r\n    const [markdown, setMarkdown]=useState(\"\");\r\n    fetch(ContentAbout).then(content => content.text()).then(text => setMarkdown(text));\r\n\r\n    return(\r\n        <div>\r\n        <Header/>\r\n        <ReactMarkdown children={markdown} rehypePlugins={[rehypeRaw]} className={style.reactMarkDown}/>\r\n        <Footer/>\r\n        </div>\r\n    );\r\n}","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport About from \"./Pages/About/About\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__x_VD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__YNP4u\"};"],"sourceRoot":""}