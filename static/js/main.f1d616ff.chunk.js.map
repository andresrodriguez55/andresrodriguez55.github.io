{"version":3,"sources":["Pages/Post/markdown-styles.module.css","Tools/Images/personAndGuitar.jpg","Tools/PrefixURLBackend/PrefixURLBackend.js","Tools/Header/Header.js","Tools/Footer/Footer.js","Tools/Images/defaultPostImage.jpg","Pages/Blog/Blog.js","Pages/Post/Post.js","Pages/About/taza.jpg","Pages/About/About.js","Pages/PanelAdmin/PanelAdmin.js","Pages/Admin/Admin.js","App.js","index.js"],"names":["module","exports","prefixURLBackend","Header","history","useHistory","redirect","category","a","push","userEmail","prompt","formData","FormData","append","fetch","method","body","then","response","text","result","alert","className","src","logo","onClick","Footer","href","target","Blog","initialCategory","useLocation","pathname","React","useState","selectedCategory","setSelectedCategory","categories","setCategories","allPosts","setAllPosts","postsShownToUser","setPostsShownToUser","areTherePosts","setAreTherePosts","numberOfVisiblePosts","setNumberOfVisiblePosts","useEffect","getAndSetCategories","hideSelectCategory","getAndSetAllPosts","hideMoreButtonIfIsNecessary","showMoreButton","setFilteredShownPostsByChoosenCategory","URLToFetch","information","data","json","JSON","parse","catch","e","searchBarOnChange","searchedValue","element","document","getElementById","value","length","filter","post","Title","toLowerCase","includes","Category","updateSelectedCategory","selected","options","selectedIndex","incrementNumberOfVisiblePosts","val","style","visibility","display","hideMoreButton","convertStringDateTimezoneToClient","stringDate","serverDate","Date","toString","localeCompare","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","day","month","year","hour","minute","hour12","id","onChange","map","c","NameOfCategory","type","placeholder","autocomplete","slice","prefixURLFrontend","ID","replace","CoverPhotoLink","onError","currentTarget","onerror","defaultImage","PostDate","fontSize","fontWeight","align","Post","informationUrl","split","urlID","urlTitle","setPost","doesPostExist","setDoesPostExist","comments","setComments","newPostedCommentID","setNewPostedCommentID","clientIP","setClientIP","actualCommentFieldID","loadPost","updateClientIP","loadComments","scrollIntoView","window","scrollTo","scrollY","ip","commentsArray","adjustArrayCommentsArray","resultArray","totalCommentsCount","x","currentComment","ParentID","replies","addChildCommentToParentComment","parentCommentsArray","childComment","commentsCount","y","parentComment","wasChildChildCommentAddedToReplyList","replyCommentsArray","childChildComment","z","replyComment","Content","Nick","switchSubmitCommentArea","newArea","innerHTML","submitComment","preventDefault","checked","replaceAll","location","isNaN","markdownCodeThemeComponent","props","railscasts","language","substring","children","rehypePlugins","rehypeRaw","remarkGfm","rehypeKatex","components","code","remarkPlugins","remarkMath","reactMarkDown","onSubmit","name","autoComplete","required","minLength","maxLength","for","comment","CommentDate","dangerouslySetInnerHTML","__html","About","PanelAdmin","user","userComments","setUserComments","subscribedEmails","setSubscribedEmails","posts","setPosts","newPostContent","setNewPostContent","loadUserComments","loadSubscribedEmails","loadCategories","loadPosts","Username","Password","updatedComment","newData","row","field","parseInt","UserCommentNick","UserCommentContent","UserCommentEmail","UserCommentNotifyReply","deleteUserComment","postSubscriptionEmail","email","deleteSubscribedEmail","updatedCategory","deleteCategory","nameOfCategory","postCategory","deletePost","postID","setNewPostID","newID","postOrUpdatePost","newPostSection","disabled","onKeyDown","keyCode","start","selectionStart","end","selectionEnd","Button","backgroundColor","width","padding","marginTop","marginRight","variant","height","marginBottom","columns","headerName","sortable","disableColumnMenu","flex","renderCell","info","Link","PostID","PostTitle","editable","rows","pageSize","onCellEditCommit","Toolbar","GridToolbar","PostContent","PostCategory","PostCoverPhotoLink","Admin","commentsCountries","setCommentsCountries","commentsCountriesCount","setCommentsCountriesCount","commentsDate","setCommentsDate","commentsDateCount","setCommentsDateCount","setUser","isSessionActive","setIsSessionActive","loadCommentsCountriesInfo","loadCommentsMonthsInfo","tempCommentsCountries","tempCommentsCountriesCount","Country","CommentsCount","tempCommentsMonths","tempCommentsMonthsCount","number","getMonthName","CommentsMonth","submit","labels","datasets","len","colors","temp","getLoopColorsByLength","responsive","maintainAspectRatio","plugins","legend","title","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,cAAgB,yC,8SCDnB,G,OAAA,IAA0B,6CCE5BC,EAAkB,wC,OCKhB,SAASC,IAEpB,IAAMC,EAAQC,cADlB,SAGmBC,EAHnB,8EAGI,WAAwBC,GAAxB,iBAAAC,EAAA,2DAEWD,EAFX,OAIa,SAJb,OAQa,aARb,OAYa,UAZb,OAgBa,cAhBb,OAqCa,UArCb,+BAKYH,EAAQK,KAAK,IALzB,mCASYL,EAAQK,KAAK,aATzB,mCAaYL,EAAQK,KAAK,UAbzB,+BAmB0B,OAFRC,EAAUC,OAAO,uFAjBnC,0DAsBkBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GAvBrC,UAyBkBK,MAAOb,EAAiB,gCAC9B,CACIc,OAAQ,OACRC,KAAML,IACPM,KAJG,uCAIE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEHC,MAAMD,MAHF,2CAJF,uDAzBlB,mDAsCYjB,EAAQK,KAAK,UAtCzB,iEAHJ,wBA8CI,OACI,gCACI,sBAAKc,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,sBAAMA,UAAU,QAAhB,SACK,6CAIT,qBAAKA,UAAU,iBAEf,qBAAKA,UAAU,cAAcC,IAAKC,IAElC,qBAAIF,UAAU,uBAAd,UACI,6BACI,qBAAKA,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqBG,QAAS,WAAKpB,EAAS,SAA5D,sBAMR,6BACI,qBAAKiB,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqBG,QAAS,WAAKpB,EAAS,aAA5D,0BAMR,6BACI,qBAAKiB,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqBG,QAAS,WAAKpB,EAAS,UAA5D,uBAMR,6BACI,qBAAKiB,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqBG,QAAS,WAAKpB,EAAS,cAA5D,2BAMR,6BACI,qBAAKiB,UAAU,qBAAf,SACI,sBAAMA,UAAU,qBAAqBG,QAAS,WAAKpB,EAAS,UAA5D,6BAShB,qBAAKiB,UAAU,sB,OC3FZI,MAlBf,WAEI,OACI,8BACI,qBAAKJ,UAAU,SAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,mBAAGK,KAAK,uCAAuCC,OAAO,SAAtD,SAA+D,mBAAGN,UAAU,oBAC5E,mBAAGK,KAAK,yFAAyFC,OAAO,SAAxG,SAAiH,mBAAGN,UAAU,sBAC9H,mBAAGK,KAAK,uCAAuCC,OAAO,SAAtD,SAA+D,mBAAGN,UAAU,sBAC5E,mBAAGK,KAAK,8CAA8CC,OAAO,SAA7D,SAAsE,mBAAGN,UAAU,wBACnF,mBAAGK,KAAK,gEAAgEC,OAAO,SAA/E,SAAwF,mBAAGN,UAAU,4BACrG,mBAAGK,KAAK,0CAA0CC,OAAO,SAAzD,SAAkE,mBAAGN,UAAU,4BCbpF,G,OAAA,IAA0B,8CCY1B,SAASO,IAEpB,IAAMC,EAAyC,KAAxBC,cAAcC,SAAe,MAAM,WAC1D,EAAgDC,IAAMC,SAASJ,GAA/D,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAoCH,IAAMC,SAAS,IAAnD,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,EAAgCL,IAAMC,SAAS,IAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgDP,IAAMC,SAAS,IAA/D,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAA0CT,IAAMC,UAAS,GAAzD,mBAAOS,EAAP,KAAsBC,EAAtB,KAEA,EAAsDX,IAAMC,SAD1B,GAClC,mBAAOW,EAAP,KAA6BC,EAA7B,KAEAb,IAAMc,UAAN,sBAAgB,sBAAAxC,EAAA,4DAEQ,OAAjBuB,EACCkB,IAGAC,IANQ,SAQNC,IARM,2CASb,IAEHjB,IAAMc,UAAN,sBAAgB,sBAAAxC,EAAA,sDAEZ4C,IAFY,2CAGb,CAACN,IAEJZ,IAAMc,UAAN,sBAAgB,sBAAAxC,EAAA,sDAEZ4C,IAFY,2CAGb,CAACV,IAEJR,IAAMc,UAAN,sBAAgB,sBAAAxC,EAAA,sDAEZuC,EA1B8B,GA2B9BM,IACAC,IAJY,2CAKb,CAAClB,IAEJ,IAAMa,EAAmB,uCAAC,4BAAAzC,EAAA,6DAEhB+C,EAAWrD,EAAiB,qCAFZ,SAIhBa,MAAMwC,GAAYrC,KAAlB,uCAAuB,WAAMsC,GAAN,SAAAhD,EAAA,sEAEnBgD,EAAYpC,OACjBF,MAAK,SAAAuC,GACF,IAAMC,EAAKC,KAAKC,MAAMH,GACtBlB,EAAcmB,MALO,2CAAvB,uDAOHG,OAAM,SAAAC,GAAC,OAAIxC,MAAMiC,MAXE,2CAAD,qDA4BnBQ,EAAkB,WAEpB,IAhBwCC,EAgBlCC,EAAQC,SAASC,eAAe,aAEnCF,IAEoB,IAAfA,EAAQG,OAERrB,EAAwBP,EAAS6B,QAtBDL,EAuBKC,EAAQG,MArBrDzB,EACIH,EAAS8B,QAEL,SAA8BC,GAE1B,OAAOA,EAAKC,MAAMC,cAAcC,SAASV,EAAcS,iBAChC,OAAlBrC,GAA2BmC,EAAKI,UAAUvC,QAmBnDkB,MA6BNA,EAAuC,WAEzCX,EACIH,EAAS8B,QAEL,SAA8BC,GAE1B,MAA0B,OAAlBnC,GAA2BmC,EAAKI,UAAUvC,OAM5De,EAAiB,uCAAC,4BAAA3C,EAAA,6DAEhB+C,EAAWrD,EAAiB,2BACR,OAAjB6B,EAAwB,GAAI,aAAaA,GAH5B,SAMdhB,MAAMwC,GAAYrC,KAAlB,uCAAuB,WAAMsC,GAAN,SAAAhD,EAAA,sEAEnBgD,EAAYpC,OACjBF,MAAK,SAAAuC,GACF,IAAMC,EAAKC,KAAKC,MAAMH,GACtBhB,EAAYiB,GACZf,EAAoBe,MANC,2CAAvB,uDAQHG,OAAM,SAAAC,GAAC,OAAIxC,MAAM,mCAdA,OAgBA,GAAjBkB,EAAS6B,QACRxB,GAAiB,GAjBD,2CAAD,qDAoBjB+B,EAAuB,WAEzB,IAAMC,EAAWX,SAASC,eAAe,oBACnCC,EAAQS,EAASC,QAAQD,EAASE,eAAeX,MAEvD/B,EAAoB+B,IAGlBY,EAA8B,WAEhCjC,GAAwB,SAACkC,GAAD,OAAOA,EAAI,MAGjC/B,EAAmB,WAErB,IAAMe,EAAQC,SAASC,eAAe,oBACnCF,IACCA,EAAQiB,MAAMC,WAAa,WAU7B/B,EAA4B,WAE3BV,EAAiB2B,OAAOvB,GATV,WAEjB,IAAMmB,EAAQC,SAASC,eAAe,mBACnCF,IACCA,EAAQiB,MAAME,QAAU,QAMxBC,IAGFhC,EAAe,WAEjB,IAAMY,EAAQC,SAASC,eAAe,mBACnCF,IACCA,EAAQiB,MAAME,QAAU,iBAG1BE,EAAkC,SAACC,GAErC,IAAMC,EAAW,IAAIC,KAAKF,EAAW,WAErC,OAAwD,GAArDC,EAAWE,WAAWC,cAAc,gBAE5BH,EAAWI,eAAe,QAAS,CAAEC,SAAUC,KAAKC,iBAAiBC,kBAAkBH,SAC1FI,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAAWC,KAAM,UAAWC,OAAO,UAC5EC,QAAQ,KAIT,IAAIb,MAAOG,eAAe,QAAS,CAAGK,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAClFC,KAAM,UAAWC,OAAO,UAAWC,QAAQ,KAkDnD,OACI,sBAAK/E,UAAU,aAAf,UACI,cAAC,EAAD,IACA,gCAjKA,sBAAKA,UAAU,gCAAf,UACI,yBAAQgF,GAAG,mBACPC,SAAU,WAAK5B,KADnB,UAEI,wBAAQR,MAAM,MAAd,iBAEI9B,EAAWmE,KAAI,SAAAC,GAEX,OACI,wBAAQtC,MAAOsC,EAAEC,eAAjB,SACKD,EAAEC,uBAOvB,uBAAOJ,GAAG,YAAYhF,UAAU,YAC5BiF,SAAUzC,EAAmB6C,KAAK,OAAOC,YAAY,YAAYC,aAAa,WAgGvFtE,EAAS6B,OAAO,EAGX,gCACI,qBAAK9C,UAAU,QAAf,SAEImB,EAAiBqE,MAAM,EAAGjE,GAAsB2D,KAAI,SAAClC,GAEjD,OACI,oBAAGhD,UAAU,WAAWK,KAAMoF,8CAA0BzC,EAAK0C,GAAGvB,WAAW,IAAInB,EAAKC,MAAM0C,QAAQ,IAAK,OAAvG,UACI,qBAAK3F,UAAU,gBAAgBC,IAAK+C,EAAK4C,eAAgBC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cAAqBA,EAAcC,QAAU,KAAMD,EAAc7F,IAAI+F,KAC1I,sBAAKhG,UAAU,sBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BgD,EAAKC,QACpC,mBAAGjD,UAAU,mBAAb,SAAiC,aAAagD,EAAKI,WACnD,mBAAGpD,UAAU,eAAb,SAA6B+D,EAAkCf,EAAKiD,uBAQxF,qBAAKjG,UAAU,sBAAf,SACI,wBAAQA,UAAU,kBAAkBgF,GAAG,kBACnC7E,QAASsD,EADb,uBAORpC,EAGA,8BAAM,oBAAIsC,MAAO,CAACuC,SAAS,OAAQC,WAAW,OAAQC,MAAM,SAAtD,0BAON,oBAAIzC,MAAO,CAACuC,SAAS,OAAQC,WAAW,OAAQC,MAAM,SAAtD,sCASJ,cAAC,EAAD,O,8FClPG,SAASC,IAEpB,IAEMC,EAFY7F,cAAcC,SAED6F,MAAM,KAC/BC,EAAMF,EAAe,GACrBG,EAASH,EAAe,GAE9B,EAAwB3F,IAAMC,SAAS,IAAvC,mBAAOoC,EAAP,KAAa0D,EAAb,KACA,EAA0C/F,IAAMC,UAAS,GAAzD,mBAAO+F,EAAP,KAAsBC,EAAtB,KACA,EAA8BjG,IAAMC,SAAS,IAA7C,mBAAOiG,EAAP,KAAiBC,EAAjB,KACA,EAAkDnG,IAAMC,SAAS,GAAjE,mBAAOmG,EAAP,KAA2BC,EAA3B,KACA,EAA8BrG,IAAMC,SAAS,WAA7C,mBAAOqG,EAAP,KAAiBC,EAAjB,KAEIC,GAAsB,EAE1BxG,IAAMc,UAAN,sBAAgB,sBAAAxC,EAAA,sEAENmI,IAFM,uBAGNC,IAHM,uBAINC,IAJM,2CAKb,IAEH3G,IAAMc,WAAU,WAETsF,EAAmB,IAElBpE,SAASC,eAAe,kBAAkBmE,GAAoBQ,iBAC9DC,OAAOC,SAAS,EAAGD,OAAOE,QAAQ,OAEtC,CAACb,IAEL,IAAMQ,EAAc,uCAAC,sBAAApI,EAAA,0DAEd0H,EAFc,gCAIPnH,MAAM,qCAAsC,CAACC,OAAO,QAAQE,KAA5D,uCAEF,WAAMsC,GAAN,SAAAhD,EAAA,sEAA2BgD,EAAYE,OAAOxC,MAE1C,SAAAuC,GAAQgF,EAAYhF,EAAKyF,OAF7B,mFAFE,uDAMJrF,OAAM,SAAAC,OAVK,2CAAD,qDAcd6E,EAAQ,uCAAC,sBAAAnI,EAAA,sEAELO,MAAMb,EAAiB,4BAA4B6H,EAAMrC,YAAYxE,KAArE,uCAA0E,WAAMsC,GAAN,SAAAhD,EAAA,sEAEtEgD,EAAYpC,OACjBF,MAAK,SAACuC,GAEH,IAAMC,EAAKC,KAAKC,MAAMH,GACtBwE,EAAQvE,MANgE,2CAA1E,uDAQHG,OAAM,SAAAC,GAAC,OAAIxC,MAAM,uDAVT,OAYK,GAAbiD,EAAKF,QACJ8D,GAAiB,GAbV,2CAAD,qDAgBRU,EAAY,uCAAC,sBAAArI,EAAA,sEAETO,MAAMb,EAAiB,8CAA8C6H,EAAMrC,YAC5ExE,KADC,uCACI,WAAMsC,GAAN,SAAAhD,EAAA,sEAEIgD,EAAYpC,OACjBF,MAAK,SAAAuC,GAEE,IAAMC,EAAKC,KAAKC,MAAMH,GAChB0F,EAAcC,EAAyB1F,GAC7C2E,EAAYc,MAPlB,2CADJ,uDAWDtF,OAAM,SAAAC,GAAC,OAAIxC,MAAM,mDAbP,2CAAD,qDAgBZ8H,EAAyB,SAACD,GAK5B,IAHA,IAAME,EAAY,GACZC,EAAmBH,EAAc9E,OAE/BkF,EAAE,EAAGA,EAAED,EAAoBC,IACnC,CACI,IAAMC,EAAeL,EAAcI,GAEL,MAA3BC,EAAeC,UAEdD,EAAeE,QAAQ,GACvBL,EAAY5I,KAAK+I,IAKjBG,EAA+BN,EAAaG,GAIpD,OAAOH,GAGLM,EAA+B,SAACC,EAAqBC,GAIvD,IAFA,IAAMC,EAAcF,EAAoBvF,OAEhC0F,EAAE,EAAGA,EAAED,EAAeC,IAC9B,CACI,IAAMC,EAAcJ,EAAoBG,GAExC,GAAGC,EAAc/C,IAAI4C,EAAaJ,SAClC,CACIO,EAAcN,QAAQjJ,KAAKoJ,GAC3B,MAGC,GAAGI,EAAqCD,EAAcN,QAASG,GAEhE,QAKNI,EAAqC,SAACC,EAAoBC,GAI5D,IAFA,IAAML,EAAcI,EAAmB7F,OAE/B+F,EAAE,EAAGA,EAAEN,EAAeM,IAC9B,CACI,IAAMC,EAAaH,EAAmBE,GAEtC,GAAGC,EAAapD,IAAIkD,EAAkBV,SAIlC,OAFAU,EAAkBG,QAAQ,OAAOD,EAAaE,KAAK,QAAQJ,EAAkBG,QAC7EJ,EAAmBzJ,KAAK0J,IACjB,EAIf,OAAO,GAGL7E,EAAkC,SAACC,GAErC,IAAMC,EAAW,IAAIC,KAAKF,EAAW,WAErC,OAAwD,GAArDC,EAAWE,WAAWC,cAAc,gBAE5BH,EAAWI,eAAe,QAAS,CAAEC,SAAUC,KAAKC,iBAAiBC,kBAAkBH,SAC1FI,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAAWC,KAAM,UAAWC,OAAO,UAC5EC,QAAQ,KAIT,IAAIb,MAAOG,eAAe,QAAS,CAAGK,IAAK,UAAYC,MAAO,UAAWC,KAAM,UAClFC,KAAM,UAAWC,OAAO,UAAWC,QAAQ,KAG7CkE,EAAwB,SAACjE,GAE3B,IAAIkE,EAAUvG,SAASC,eAAeoC,GAER,SAA1BkE,EAAQvF,MAAME,SAEGlB,SAASC,eAAeuE,GAC9BxD,MAAME,QAAQ,QAEC,GAAvBsD,IAECxE,SAASC,eAAe,aAAauE,GAAsBgC,UAAY,SAG3ED,EAAQvF,MAAME,QAAU,SAChB,GAALmB,IACCrC,SAASC,eAAe,aAAaoC,GAAImE,UAAY,gBAEzDhC,EAAqBnC,IAKJrC,SAASC,eAAeoC,GAC9BrB,MAAME,QAAQ,OACzBlB,SAASC,eAAe,aAAaoC,GAAImE,UAAY,QAErDhC,GAAsB,EACtBxE,SAASC,eAAeuE,GAAsBxD,MAAME,QAAU,UAIhEuF,EAAa,uCAAC,WAAM7G,GAAN,eAAAtD,EAAA,6DAEhBsD,EAAE8G,kBAEIhK,EAAW,IAAIC,UACZC,OAAO,OAAQoD,SAASC,eAAe,OAAOuE,GAAsBtE,OAC7ExD,EAASE,OAAO,UAAWoD,SAASC,eAAe,UAAUuE,GAAsBtE,OACnFxD,EAASE,OAAO,QAASoD,SAASC,eAAe,QAAQuE,GAAsBtE,OAC/ExD,EAASE,OAAO,cACXoD,SAASC,eAAe,+BAA+BuE,GAAsBmC,QAAS,EAAE,GAC7FjK,EAASE,OAAO,YAAoC,GAAvB4H,EAA0B,KAAKA,GAC5D9H,EAASE,OAAO,SAAUiH,GAC1BnH,EAASE,OAAO,KAAM0H,GACtB5H,EAASE,OAAO,eACX,IAAI2E,MAAQG,eAAe,QAAS,CAACC,SAAU,oBAAoBiF,WAAW,IAAK,MACxFlK,EAASE,OAAO,WAAY,YAC5BF,EAASE,OAAO,WAAYyD,EAAKC,OACjC5D,EAASE,OAAO,WAAYiI,OAAOgC,SAASnJ,MAjB5B,UAmBVb,MAAOb,EAAiB,yBAC9B,CACIc,OAAQ,OACRC,KAAML,IACPM,KAJG,uCAIE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,KAD+B,uCAC1B,WAAMG,GAAN,SAAAb,EAAA,sDAECwK,MAAM3J,GACLC,MAAMD,IAGN6C,SAASC,eAAe,OAAOuE,GAAsBtE,MAAM,GAC3DF,SAASC,eAAe,UAAUuE,GAAsBtE,MAAM,GAC9DF,SAASC,eAAe,QAAQuE,GAAsBtE,MAAM,GAC5DF,SAASC,eAAe,+BAA+BuE,GAAsBmC,SAAQ,EAGrFhC,IACAN,EAAsBlH,IACI,GAAvBqH,GAEC8B,GAAyB,IAhB/B,2CAD0B,uDAAxB,2CAJF,uDAnBU,4CAAD,sDA8MbS,EAA2B,SAACC,GAE9B,OACI,cAAC,IAAD,CAAmBhG,MAAOiG,IAAYC,SAAWF,EAAM3J,UAAW2J,EAAM3J,UAAU8J,UAAU,GAAG,GAC3FC,SAAWJ,EAAMI,SAAUJ,EAAMI,SAAS,MAqCtD,OACI,sBAAK/J,UAAU,aAAf,UACI,cAAC,EAAD,IACA,8BAlCDgD,GAAQA,EAAKC,QAAQwD,EAASd,QAAQ,MAAO,KAGxC,gCACI,qBAAK3F,UAAU,WAAf,SACI,cAAC,IAAD,CAAegK,cAAe,CAACC,IAAWC,IAAWC,KACjDC,WAAY,CAACC,KAAMX,GACnBY,cAAe,CAACC,KAChBR,SAAU,oEAAoE/G,EAAK4C,eAAzE,iFACmE5C,EAAKC,MADxE,gDAEiCc,EAAkCf,EAAKiD,UAAU,6BAC5FjD,EAAK+F,QACL/I,UAAW2D,IAAM6G,kBAEzB,8BAjER,sBAAKxK,UAAU,eAAf,UACI,uBAAOyK,SAAU,SAAClI,GAAD,OAAK6G,EAAc7G,IAAIvC,UAAU,eAAegF,IAAK,EAAtE,UACI,gCACI,uBAAOhF,UAAU,oBAAjB,kBACA,uBAAOA,UAAU,YAAY0K,KAAK,OAAO1F,GAAI,OAAOmC,EAChD9B,KAAK,OAAOC,YAAY,kBACxBqF,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,QAGpE,gCACI,uBAAO9K,UAAU,oBAAjB,mBACA,uBAAOA,UAAU,aAAa0K,KAAK,QAAQ1F,GAAI,QAAQmC,EACnD9B,KAAK,QAAQC,YAAY,yBACzBqF,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,QAGpE,gCACI,uBAAO9K,UAAU,oBAAjB,qBACA,uBAAOA,UAAU,eAAe0K,KAAK,UAAU1F,GAAI,UAAUmC,EACzD9B,KAAK,OAAOC,YAAY,wBACxBqF,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,SAGpE,qBAAK9K,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoB0K,KAAK,SAAS1F,GAAG,SAClDK,KAAK,SAASxC,MAAM,WAG5B,sBAAK7C,UAAU,kCAAf,UACI,uBAAOqF,KAAK,WAAWL,GAAI,+BAA+BmC,EAAsBuD,KAAK,+BAA+B7H,MAAM,MAC1H,uBAAO7C,UAAU,oCAAoC+K,IAAI,+BAAzD,yCAMR,qBAAK/K,UAAU,oBAAf,SAxJJ6G,EAAS3B,KAAI,SAAA8F,GAET,OACI,gCACI,sBAAKhL,UAAU,kBAAkBgF,GAAI,kBAAkBgG,EAAQtF,GAA/D,UACI,oBAAI1F,UAAU,kBAAd,SAAiCgL,EAAQhC,OACzC,mBAAGhJ,UAAU,kBAAb,SAEI+D,EAAkCiH,EAAQC,eAG9C,mBAAGjL,UAAU,qBAAb,SAAmCgL,EAAQjC,UAC3C,mBAAG/D,GAAI,aAAagG,EAAQtF,GAAI1F,UAAU,aAAaG,QAAS,kBAAI8I,EAAwB+B,EAAQtF,KAApG,sBAGJ,uBAAMV,GAAIgG,EAAQtF,GAAI+E,SAAU,SAAClI,GAAD,OAAK6G,EAAc7G,IAAIvC,UAAU,eAC7D2D,MAAO,CAACE,QAAQ,QADpB,UAEI,gCACI,uBAAO7D,UAAU,oBAAjB,kBACA,uBAAOA,UAAU,YAAY0K,KAAK,OAAO1F,GAAI,OAAOgG,EAAQtF,GACxDL,KAAK,OAAOC,YAAY,kBACxBqF,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,QAGpE,gCACI,uBAAO9K,UAAU,oBAAjB,mBACA,uBAAOA,UAAU,aAAa0K,KAAK,QAAQ1F,GAAI,QAAQgG,EAAQtF,GAC3DL,KAAK,QAAQC,YAAY,yBACzBqF,aAAa,MAAMC,UAAU,EAAOC,UAAW,EAAGC,UAAW,QAGrE,gCACI,uBAAO9K,UAAU,oBAAjB,qBACA,uBAAOA,UAAU,eAAe0K,KAAK,UAAU1F,GAAI,UAAUgG,EAAQtF,GACjEL,KAAK,OAAOC,YAAY,wBACxBqF,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,SAGpE,qBAAK9K,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoB0K,KAAK,SAAS1F,GAAG,SAClDK,KAAK,SAASxC,MAAM,WAG5B,sBAAK7C,UAAU,kCAAf,UACI,uBAAOqF,KAAK,WAAWL,GAAI,+BAA+BgG,EAAQtF,GAAIgF,KAAK,+BAA+B7H,MAAM,MAChH,uBAAO7C,UAAU,oCAAoC+K,IAAI,+BAAzD,yCAQJC,EAAQ7C,QAAQjD,KAAI,SAAAoD,GAEhB,OACI,gCACI,sBAAKtI,UAAU,uBAAuBgF,GAAI,kBAAkBsD,EAAa5C,GAAzE,UACI,oBAAI1F,UAAU,kBAAd,SAAiCsI,EAAaU,OAC9C,mBAAGhJ,UAAU,kBAAb,SAEI+D,EAAkCuE,EAAa2C,eAGnD,mBAAGjL,UAAU,qBAAb,SAAkC,qBAAKkL,wBAAyB,CAACC,OAAQ7C,EAAaS,aACtF,mBAAG/D,GAAI,aAAasD,EAAa5C,GAAI1F,UAAU,aAAaG,QAAS,kBAAI8I,EAAwBX,EAAa5C,KAA9G,sBAGJ,uBAAMV,GAAIsD,EAAa5C,GAAI+E,SAAU,SAAClI,GAAD,OAAK6G,EAAc7G,IAAIvC,UAAU,eAClE2D,MAAO,CAACE,QAAQ,QADpB,UAEI,gCACI,uBAAO7D,UAAU,oBAAjB,kBACA,uBAAOA,UAAU,YAAY0K,KAAK,OAAO1F,GAAI,OAAOsD,EAAa5C,GAC7DL,KAAK,OAAOC,YAAY,kBACxBqF,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,QAGpE,gCACI,uBAAO9K,UAAU,oBAAjB,mBACA,uBAAOA,UAAU,aAAa0K,KAAK,QAAQ1F,GAAI,QAAQsD,EAAa5C,GAChEL,KAAK,QAAQC,YAAY,yBACzBqF,aAAa,MAAMC,UAAU,EAAOC,UAAW,EAAGC,UAAW,QAGrE,gCACI,uBAAO9K,UAAU,oBAAjB,qBACA,uBAAOA,UAAU,eAAe0K,KAAK,UAAU1F,GAAI,UAAUsD,EAAa5C,GACtEL,KAAK,OAAOC,YAAY,wBACxBqF,aAAa,MAAMC,UAAU,EAAMC,UAAW,EAAGC,UAAW,SAGpE,qBAAK9K,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoB0K,KAAK,SAAS1F,GAAG,SAClDK,KAAK,SAASxC,MAAM,WAG5B,sBAAK7C,UAAU,kCAAf,UACI,uBAAOqF,KAAK,WAAWL,GAAI,+BAA+BsD,EAAa5C,GAAIgF,KAAK,+BAA+B7H,MAAM,MACrH,uBAAO7C,UAAU,oCAAoC+K,IAAI,+BAAzD,+DAwFhCpE,EAGA,8BAAM,oBAAIhD,MAAO,CAACuC,SAAS,OAAQC,WAAW,OAAQC,MAAM,SAAtD,0BAKV,oBAAIzC,MAAO,CAACuC,SAAS,OAAQC,WAAW,OAAQC,MAAM,SAAtD,iCAQA,cAAC,EAAD,OC7cG,UAA0B,iC,OCO1B,SAASgF,IAEpB,OACI,sBAAKpL,UAAU,cAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAWC,IAAKC,IAC/B,uBACA,0JAEI,uBACA,uBAHJ,uMAOJ,cAAC,EAAD,O,6CCFG,SAASmL,EAAT,GACd,IADmCC,EACpC,EADoCA,KAEhC,EAAwC3K,IAAMC,SAAS,IAAvD,mBAAO2K,EAAP,KAAqBC,EAArB,KACA,EAAgD7K,IAAMC,SAAS,IAA/D,mBAAO6K,EAAP,KAAyBC,EAAzB,KACA,EAAoC/K,IAAMC,SAAS,IAAnD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BL,IAAMC,SAAS,IAAzC,mBAAO+K,EAAP,KAAcC,EAAd,KAEA,EAA4CjL,IAAMC,SAAS,IAA3D,mBAAOiL,EAAP,KAAuBC,EAAvB,KAEAnL,IAAMc,UAAN,sBAAgB,sBAAAxC,EAAA,sEAEN8M,IAFM,uBAGNC,IAHM,uBAINC,IAJM,uBAKNC,IALM,2CAMb,IAEH,IAAMD,EAAc,uCAAC,sBAAAhN,EAAA,6DAEAN,EAAiB,gCAFjB,SAIXa,MAFWb,sEAEOgB,KAAlB,uCAAuB,WAAMsC,GAAN,SAAAhD,EAAA,sEAEnBgD,EAAYpC,OACjBF,MAAK,SAAAuC,GACF,IAAMC,EAAKC,KAAKC,MAAMH,GACtBlB,EAAcmB,MALO,2CAAvB,uDAOHG,OAAM,SAAAC,GAAC,OAAIxC,MAAM,mCAXH,2CAAD,qDAcdgM,EAAgB,uCAAC,sBAAA9M,EAAA,6DAEFN,EAAiB,kCAFf,SAIba,MAFWb,wEAEOgB,KAAlB,uCAAuB,WAAMsC,GAAN,SAAAhD,EAAA,sEAEnBgD,EAAYpC,OACjBF,MAAK,SAAAuC,GACF,IAAMC,EAAKC,KAAKC,MAAMH,GACtBsJ,EAAgBrJ,MALK,2CAAvB,uDAOHG,OAAM,SAAAC,GAAC,OAAIxC,MAAM,mCAXD,2CAAD,qDAchBiM,EAAoB,uCAAC,4BAAA/M,EAAA,6DAEjB+C,EAAWrD,EAAiB,gDAC9B2M,EAAKa,SAAS,aAAab,EAAKc,SAHb,SAKjB5M,MAAMwC,GAAYrC,KAAlB,uCAAuB,WAAMsC,GAAN,SAAAhD,EAAA,sEAEnBgD,EAAYpC,OACjBF,MAAK,SAAAuC,GACF,IAAMC,EAAKC,KAAKC,MAAMH,GACtBwJ,EAAoBvJ,MALC,2CAAvB,uDAOHG,OAAM,SAAAC,GAAC,OAAIxC,MAAM,mCAZG,2CAAD,qDAepBmM,EAAS,uCAAC,sBAAAjN,EAAA,6DAEKN,EAAiB,2BAFtB,SAINa,MAFWb,iEAEOgB,KAAlB,uCAAuB,WAAMsC,GAAN,SAAAhD,EAAA,sEAEnBgD,EAAYpC,OACjBF,MAAK,SAAAuC,GACF,IAAMC,EAAKC,KAAKC,MAAMH,GACtB0J,EAASzJ,MALY,2CAAvB,uDAOHG,OAAM,SAAAC,GAAC,OAAIxC,MAAM,mCAXR,2CAAD,qDAcTsM,EAAc,uCAAC,WAAMC,GAAN,iBAAArN,EAAA,2DAEXsN,EAAID,EAAQC,KAFD,gBAKbA,EAAID,EAAQE,OAAOF,EAAQzJ,MALd,6BAQbkJ,IARa,iCAYX7J,EAAO,IAAI5C,UACZC,OAAO,WAAY+L,EAAKa,UAC7BjK,EAAK3C,OAAO,WAAY+L,EAAKc,UAE7BlK,EAAK3C,OAAO,KAAMkN,SAASF,EAAIvH,KAC/B9C,EAAK3C,OAAO,OAAQgN,EAAIG,iBACxBxK,EAAK3C,OAAO,UAAWgN,EAAII,oBAC3BzK,EAAK3C,OAAO,QAASgN,EAAIK,kBACzB1K,EAAK3C,OAAO,cAAegN,EAAIM,wBApBd,UAsBXrN,MAAOb,EAAiB,0BAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEQ,IAARA,GACCC,MAAMD,MAJN,2CALF,uDAtBW,QAkCjBiM,IAlCiB,4CAAD,sDAqCde,EAAiB,uCAAC,WAAM9H,GAAN,eAAA/F,EAAA,6DAEdiD,EAAO,IAAI5C,UACZC,OAAO,WAAY+L,EAAKa,UAC7BjK,EAAK3C,OAAO,WAAY+L,EAAKc,UAE7BlK,EAAK3C,OAAO,KAAMyF,GANE,SAQdxF,MAAOb,EAAiB,0BAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEQ,IAARA,GACCC,MAAMD,MAJN,2CALF,uDARc,OAoBpBoM,IACAH,IArBoB,2CAAD,sDAwEjBgB,EAAqB,uCAAC,WAAMC,GAAN,eAAA/N,EAAA,6DAElBiD,EAAO,IAAI5C,UACZC,OAAO,QAASyN,GAHG,SAKlBxN,MAAOb,EAAiB,gCAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEH6C,SAASC,eAAe,sBAAsBC,MAAM,MAHhD,2CALF,uDALkB,OAgBxBmJ,IAhBwB,2CAAD,sDAmBrBiB,EAAqB,uCAAC,WAAMD,GAAN,SAAA/N,EAAA,sEAElBO,MAAOb,EAAiB,yCAAyCqO,GAF/C,OAGxBhB,IAHwB,2CAAD,sDAgErBkB,EAAe,uCAAC,WAAMZ,GAAN,iBAAArN,EAAA,yDAEZsN,EAAID,EAAQC,IAFA,uBAMdN,IANc,iCAUZ/J,EAAO,IAAI5C,UACZC,OAAO,WAAY+L,EAAKa,UAC7BjK,EAAK3C,OAAO,WAAY+L,EAAKc,UAC7BlK,EAAK3C,OAAO,wBAAyBgN,EAAInH,gBACzClD,EAAK3C,OAAO,oBAAqB+M,EAAQzJ,OAdvB,UAgBZrD,MAAOb,EAAiB,2BAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEQ,IAARA,GACCC,MAAMD,MAJN,2CALF,uDAhBY,QA4BlBmM,IA5BkB,4CAAD,sDA+BfkB,EAAc,uCAAC,WAAMC,GAAN,eAAAnO,EAAA,6DAEXiD,EAAO,IAAI5C,UACZC,OAAO,WAAY+L,EAAKa,UAC7BjK,EAAK3C,OAAO,WAAY+L,EAAKc,UAC7BlK,EAAK3C,OAAO,iBAAkB6N,GALb,SAOX5N,MAAOb,EAAiB,2BAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEQ,IAARA,GACCC,MAAMD,MAJN,2CALF,uDAPW,OAmBjBoM,IACAD,IApBiB,2CAAD,sDAuBdoB,EAAY,uCAAC,WAAMD,GAAN,eAAAnO,EAAA,6DAETiD,EAAO,IAAI5C,UACZC,OAAO,WAAY+L,EAAKa,UAC7BjK,EAAK3C,OAAO,WAAY+L,EAAKc,UAC7BlK,EAAK3C,OAAO,iBAAkB6N,GALf,SAOT5N,MAAOb,EAAiB,yBAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEQ,IAARA,EACCC,MAAMD,GAEN6C,SAASC,eAAe,eAAeC,MAAM,MAN7C,2CALF,uDAPS,OAqBfoJ,IArBe,2CAAD,sDA4EZqB,EAAU,uCAAC,WAAMC,GAAN,eAAAtO,EAAA,6DAEPiD,EAAO,IAAI5C,UACZC,OAAO,WAAY+L,EAAKa,UAC7BjK,EAAK3C,OAAO,WAAY+L,EAAKc,UAC7BlK,EAAK3C,OAAO,KAAMgO,GALL,SAOP/N,MAAOb,EAAiB,uBAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEQ,IAARA,GACCC,MAAMD,MAJN,2CALF,uDAPO,OAmBbmM,IACAC,IApBa,2CAAD,sDAkCVsB,EAAa,SAACC,GAEhB9K,SAASC,eAAe,UAAUC,MAAM4K,GAgEtC/D,EAA2B,SAACC,GAE9B,OACI,cAAC,IAAD,CAAmBhG,MAAOiG,IAAYC,SAAWF,EAAM3J,UAAW2J,EAAM3J,UAAU8J,UAAU,GAAG,GAC3FC,SAAWJ,EAAMI,SAAUJ,EAAMI,SAAS,MAIhD2D,EAAgB,uCAAC,4BAAAzO,EAAA,yDAEf0D,SAASC,eAAe,UAFT,wDAKbV,EAAO,IAAI5C,UACZC,OAAO,WAAY+L,EAAKa,UAC7BjK,EAAK3C,OAAO,WAAY+L,EAAKc,UAE7BlK,EAAK3C,OAAO,KAAMkN,SAAS9J,SAASC,eAAe,UAAUC,QAC7DX,EAAK3C,OAAO,QAASoD,SAASC,eAAe,aAAaC,MAAM0G,WAAW,IAAM,MACjFrH,EAAK3C,OAAO,UAAWoD,SAASC,eAAe,eAAeC,MAAM0G,WAAW,IAAM,KAAMA,WAAW,KAAM,SAC5GrH,EAAK3C,OAAO,WAAYoD,SAASC,eAAe,gBAAgBC,OAChEX,EAAK3C,OAAO,WAAYoD,SAASC,eAAe,YAAYC,MAAM8C,QAAQ,IAAK,KAAK4D,WAAW,IAAI,MACnGrH,EAAK3C,OAAO,iBAAkBoD,SAASC,eAAe,iBAAiBC,OAdpD,UAgBbrD,MAAOb,EAAiB,6BAC9B,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAMwC,IACPvC,KALG,uCAKE,WAAMC,GAAN,SAAAX,EAAA,sEAAwBW,EAASC,OACxCF,MAAK,SAACG,GAEQ,IAARA,EACCC,MAAMD,IAGN6C,SAASC,eAAe,UAAUC,MAAM,GACxCF,SAASC,eAAe,aAAaC,MAAM,GAC3CF,SAASC,eAAe,eAAeC,MAAM,GAC7CF,SAASC,eAAe,iBAAiBC,MAAM,GAC/CiJ,EAAkB,QAXlB,2CALF,uDAhBa,QAoCnBG,IACAC,IArCmB,4CAAD,qDAwChByB,EAAe,WAEjB,OACI,sBAAK3N,UAAU,iBAAf,UACI,yCACA,uBAAOA,UAAU,UAAUqF,KAAK,SAASL,GAAG,SAAS4I,UAAQ,IAC7D,wBAAQzN,QAAS,kBAAIqN,EAAa,OAAlC,mCACA,qBAAKxN,UAAU,UAEf,4CACA,uBAAOqF,KAAK,OAAOL,GAAG,cACtB,qBAAKhF,UAAU,UAEf,2CACA,uBAAOqF,KAAK,iBAAiBL,GAAG,aAChC,qBAAKhF,UAAU,UAEf,+CACA,wBAAQgF,GAAG,eAAX,SAEIjE,EAAWmE,KAAI,SAAAC,GAEX,OACI,wBAAQtC,MAAOsC,EAAEC,eAAjB,SACKD,EAAEC,sBAOnB,qBAAKpF,UAAU,UAEf,iDACA,uBAAOqF,KAAK,OAAOL,GAAG,kBACtB,qBAAKhF,UAAU,UAEf,0BAAUA,UAAU,WAAWgF,GAAG,cAC9B6I,UAAW,SAACtL,GAER,GAAgB,GAAbA,EAAEuL,QACL,CACIvL,EAAE8G,iBAEF,IAAM3G,EAAQC,SAASC,eAAe,eAEhCmL,EAAQrL,EAAQsL,eAChBC,EAAMvL,EAAQwL,aAEpBxL,EAAQG,MAAQH,EAAQG,MAAMiH,UAAU,EAAGiE,GAAS,KAAOrL,EAAQG,MAAMiH,UAAUmE,GAEnFvL,EAAQsL,eAAiBtL,EAAQwL,aAAeH,EAAQ,MAKpE,cAAC,IAAD,CAAe/D,cAAe,CAACC,IAAWC,IAAWC,KACjDC,WAAY,CAACC,KAAMX,GACnBY,cAAe,CAACC,KAChBR,SAAU8B,EACV7L,UAAW,aACf,qBAAKA,UAAU,UAEf,cAACmO,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBC,MAAM,KACNC,QAAS,WACTC,UAAU,MACVC,YAAY,OAEZrO,QAAS,WAAK2L,EAAkBnJ,SAASC,eAAe,eAAeC,QACvE4L,QAAQ,YACRpJ,KAAK,SAVT,oBAaA,cAAC8I,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBC,MAAM,KACNC,QAAS,WACTC,UAAU,OAGVpO,QAAS,kBAAIuN,KACbe,QAAQ,YACRpJ,KAAK,SAVT,sBAiBZ,OACI,sBAAKrF,UAAU,cAAf,UACI,0CArfA,qBAAK2D,MAAO,CAAE+K,OAAQ,IAAKL,MAAO,OAASM,aAAa,QAAxD,SACI,cAAC,IAAD,CACIC,QACA,CACI,CAACpC,MAAM,YAAaqC,WAAW,OAAQC,UAAS,EAAOC,mBAAkB,EAAOC,KAAK,EACjFC,WAAY,SAACC,GAAD,OAER,cAACC,EAAA,EAAD,CAAM9O,KAAI,WAAM,QAAQ6O,EAAK3C,IAAI6C,OAAO,IAAIF,EAAK3C,IAAI8C,WAAa/O,OAAO,SAAzE,SAAmF4O,EAAK3C,IAAI8C,cAGpG,CAAC7C,MAAM,kBAAmBqC,WAAW,OAAQC,UAAS,EAAOC,mBAAkB,EAAMO,UAAS,EAAMN,KAAK,GACzG,CAACxC,MAAM,qBAAsBqC,WAAW,UAAWC,UAAS,EAAOC,mBAAkB,EAAOO,UAAS,EAAMN,KAAK,GAChH,CAACxC,MAAM,mBAAoBqC,WAAW,QAASC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,EAAKM,UAAS,GAC1G,CAAC9C,MAAM,yBAA0BqC,WAAW,eAAgBC,UAAS,EAAOC,mBAAkB,EAAOO,UAAS,EAAMN,KAAK,GACzH,CAACxC,MAAM,cAAeqC,WAAW,UAAWC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,GACzF,CAACxC,MAAM,cAAeqC,WAAW,OAAQC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,GACtF,CAACxC,MAAO,SAAUqC,WAAW,SAAUC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,EAChFC,WAAY,SAACC,GAAD,OAER,cAACf,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBE,QAAS,WACTD,MAAM,QAGNlO,QAAS,kBAAM2M,EAAkBoC,EAAKlK,KACtCyJ,QAAQ,YACRpJ,KAAK,SATT,uBAgBZkK,KAAMhE,EACNiE,SAAU,EACVC,iBAAkBpD,EAClBjC,WAAY,CAAEsF,QAASC,SAid/B,mDA9aA,sBAAKhM,MAAO,CAAE+K,OAAQ,IAAKL,MAAO,OAAQM,aAAa,QAAvD,UACI,cAAC,IAAD,CACIC,QACA,CACI,CAACpC,MAAM,KAAMqC,WAAW,mBAAoBC,UAAS,EAAOC,mBAAkB,EAAOC,KAAK,GAC1F,CAACxC,MAAM,mBAAoBqC,WAAW,OAAQC,UAAS,EAAOC,mBAAkB,EAAOC,KAAK,GAC5F,CAACxC,MAAO,SAAUqC,WAAW,SAAUC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,EAChFC,WAAY,SAACC,GAAD,OAER,cAACf,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBE,QAAS,WACTD,MAAM,QAGNlO,QAAS,kBAAM8M,EAAsBiC,EAAKlK,KAC1CyJ,QAAQ,YACRpJ,KAAK,SATT,uBAeZkK,KAAM9D,EACN+D,SAAU,EACVpF,WAAY,CAAEsF,QAASC,OAGvB,6DACA,uBAAOtK,KAAK,OAAOL,GAAG,uBAEtB,cAACmJ,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBC,MAAM,KACNK,OAAQ,OACRJ,QAAS,WACTC,UAAU,OAGVpO,QAAS,kBAAK4M,EAAsBpK,SAASC,eAAe,sBAAsBC,QAClF4L,QAAQ,YACRpJ,KAAK,SAXT,qBAgZR,qDAxSA,sBAAK1B,MAAO,CAAE+K,OAAQ,IAAKL,MAAO,OAAQM,aAAa,QAAvD,UACI,cAAC,IAAD,CACIC,QACA,CACI,CAACpC,MAAM,iBAAkBqC,WAAW,OAAQC,UAAS,EAAOC,mBAAkB,EAAMO,UAAS,EAAMN,KAAK,GACxG,CAACxC,MAAM,gBAAiBqC,WAAW,kBAAmBC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,GACnG,CAACxC,MAAO,SAAUqC,WAAW,SAAUC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,EAChFC,WAAY,SAACC,GAAD,OAER,cAACf,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBE,QAAS,WACTD,MAAM,QAGNlO,QAAS,kBAAMgN,EAAe+B,EAAKlK,KACnCyJ,QAAQ,YACRpJ,KAAK,SATT,uBAeZkK,KAAMxO,EACNyO,SAAU,EACVC,iBAAkBvC,IAElB,0CACA,uBAAO7H,KAAK,OAAOL,GAAG,gBAEtB,cAACmJ,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBC,MAAM,KACNK,OAAQ,OACRJ,QAAS,WACTC,UAAU,OAGVpO,QAAS,kBAAMkN,EAAa1K,SAASC,eAAe,eAAeC,QACnE4L,QAAQ,YACRpJ,KAAK,SAXT,qBA2QR,uCA/MA,gCACI,qBAAK1B,MAAO,CAAE+K,OAAQ,IAAKL,MAAO,OAAQM,aAAa,QAAvD,SACI,cAAC,IAAD,CACIC,QACA,CACI,CAACpC,MAAM,YAAaqC,WAAW,QAASC,UAAS,EAAOC,mBAAkB,EAAOC,KAAK,EAClFC,WAAY,SAACC,GAAD,OAER,cAACC,EAAA,EAAD,CAAM9O,KAAI,WAAM,QAAQ6O,EAAK3C,IAAIvH,GAAG,IAAIkK,EAAK3C,IAAI8C,WAAa/O,OAAO,SAArE,SAA+E4O,EAAK3C,IAAI8C,cAGhG,CAAC7C,MAAM,eAAgBqC,WAAW,WAAYC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,GAC3F,CAACxC,MAAM,WAAYqC,WAAW,OAAQC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,GACnF,CAACxC,MAAM,mBAAoBqC,WAAW,qBAAsBC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,GACzG,CAACxC,MAAO,SAAUqC,WAAW,SAAUC,UAAS,EAAOC,mBAAkB,EAAMC,KAAK,EAChFC,WAAY,SAACC,GAAD,OAER,qCACI,cAACf,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBC,MAAM,MACNG,YAAa,KACbF,QAAS,YAGTnO,QAAS,kBA7CP6C,EA6CgDkM,EAAK3C,IA3C3FiB,EAAaxK,EAAKgC,IAClBrC,SAASC,eAAe,aAAaC,MAAMG,EAAKqM,UAChD1M,SAASC,eAAe,eAAeC,MAAMG,EAAK4M,YAClD9D,EAAkB9I,EAAK4M,aACvBjN,SAASC,eAAe,YAAYC,MAAMG,EAAKiD,SAASN,QAAQ,IAAK,KACrEhD,SAASC,eAAe,gBAAgBC,MAAMG,EAAK6M,kBACnDlN,SAASC,eAAe,iBAAiBC,MAAMG,EAAK8M,oBARf,IAAC9M,GA8CFyL,QAAQ,YACRpJ,KAAK,SAVT,kBAcA,cAAC8I,EAAA,EAAD,CACIxK,MAAO,CACPyK,gBAAiB,UACjBC,MAAM,MACNC,QAAS,YAGTnO,QAAS,kBAAMmN,EAAW4B,EAAKlK,KAC/ByJ,QAAQ,YACRpJ,KAAK,SATT,0BAgBhBkK,KAAM5D,EACN6D,SAAU,EACVpF,WAAY,CAAEsF,QAASC,SAG9BhC,U,OCrfF,SAASoC,IAEpB,MAAgDpP,IAAMC,SAAS,IAA/D,mBAAOoP,EAAP,KAA0BC,EAA1B,KACA,EAA0DtP,IAAMC,SAAS,IAAzE,mBAAOsP,EAAP,KAA+BC,EAA/B,KACA,EAAsCxP,IAAMC,SAAS,IAArD,mBAAOwP,EAAP,KAAqBC,EAArB,KACA,EAAgD1P,IAAMC,SAAS,IAA/D,mBAAO0P,EAAP,KAA0BC,EAA1B,KAEA,EAAsB5P,IAAMC,SAAS,IAArC,mBAAO0K,EAAP,KAAakF,EAAb,KACA,EAA4C7P,IAAMC,UAAS,GAA3D,mBAAO6P,EAAP,KAAwBC,EAAxB,KAEA/P,IAAMc,WAAU,WAEZkP,IACAC,MACD,IAEH,IAAMD,EAA0B,WAE5B,IAAME,EAAsB,GACtBC,EAA2B,GAIjCtR,MAFiBb,uFAECgB,MAAK,SAACsC,GAEpBA,EAAYpC,OACXF,MAAK,SAAAuC,GAESE,KAAKC,MAAMH,GACjBgD,KAAI,SAAAqH,GAELsE,EAAsB3R,KAAKqN,EAAIwE,SAC/BD,EAA2B5R,KAAKqN,EAAIyE,kBAGxCf,EAAqBY,GACrBV,EAA0BW,SAE/BxO,OAAM,SAAAC,GAAC,OAAIxC,MAAM,oCAkCxB,IAAM6Q,EAAuB,WAEzB,IAAMK,EAAmB,GACnBC,EAAwB,GAI9B1R,MAFiBb,oFAECgB,MAAK,SAACsC,GAEpBA,EAAYpC,OACXF,MAAK,SAAAuC,GAESE,KAAKC,MAAMH,GACjBgD,KAAI,SAAAqH,GAEL0E,EAAmB/R,KA9CnC,SAAsBiS,GAElB,OAAOA,GAEH,IAAK,IACD,MAAO,UACX,IAAK,IACD,MAAO,YACX,IAAK,IACD,MAAO,QACX,IAAK,IACD,MAAO,QACX,IAAK,IACD,MAAO,MACX,IAAK,IACD,MAAO,OACX,IAAK,IACD,MAAO,OACX,IAAK,IACD,MAAO,SACX,IAAK,IACD,MAAO,YACX,IAAK,KACD,MAAO,UACX,IAAK,KACD,MAAO,WACX,QACI,MAAO,YAmBqBC,CAAa7E,EAAI8E,gBACzCH,EAAwBhS,KAAKqN,EAAIyE,kBAGrCX,EAAgBY,GAChBV,EAAqBW,SAE1B5O,OAAM,SAAAC,GAAC,OAAIxC,MAAM,oCA6CxB,OAAoB,GAAjB0Q,EAGK,sBAAKzQ,UAAU,cAAf,UACI,uBAAMA,UAAU,YAAYyK,SAAU,SAAClI,GAAD,OAjCrC,SAACA,GAEVA,EAAE8G,iBAEF,IAAMhK,EAAW,IAAIC,SACrBD,EAASE,OAAO,WAAYoD,SAASC,eAAe,YAAYC,OAChExD,EAASE,OAAO,WAAYoD,SAASC,eAAe,YAAYC,OAEhErD,MAAOb,EAAiB,0BACxB,CACIc,OAAQ,OACR,eAAgB,mBAChBC,KAAML,IACPM,MAAK,SAACC,GAAYA,EAASC,OAC7BF,MAAK,SAACG,GAEQ,IAARA,EACCC,MAAMD,IAGN0Q,EAAQ,CACJrE,SAAUxJ,SAASC,eAAe,YAAYC,MAC9CuJ,SAAUzJ,SAASC,eAAe,YAAYC,QAElD6N,GAAmB,UASwBY,CAAO/O,IAAlD,UACI,6CACA,uBAAOvC,UAAU,gBAAgB0K,KAAK,WAAW1F,GAAG,WAC5CK,KAAK,WAAWC,YAAY,WAC5BC,aAAa,QAErB,uBAAOvF,UAAU,gBAAgB0K,KAAK,WAAW1F,GAAG,WAC5CK,KAAK,WAAWC,YAAY,WAC5BC,aAAa,QAErB,uBAAOvF,UAAU,kBAAkB0K,KAAK,cAAc1F,GAAG,cAC7BK,KAAK,SAASxC,MAAM,aAGpD,oBAAIuD,MAAM,SAAV,wBAEA,qBAAKpG,UAAU,YAAf,SACI,cAAC,IAAD,CAAKkC,KACA,CACGqP,OAAQvB,EACRwB,SACA,CAAC,CACGpD,gBApE5B,SAA+BqD,GAK3B,IAHA,IAAMC,EAAO,CAAC,MAAO,OAAQ,SAAU,SAAU,QAAS,QACtDC,EAAK,EAEHD,EAAO5O,OAAO2O,GAEhBC,EAAOxS,KAAKwS,EAAQC,IAAQD,EAAO5O,SAGvC,OAAO4O,EA0DkCE,CAAsB1B,EAAuBpN,QAC9DZ,KAAMgO,KAId3M,QACC,CACGsO,YAAY,EACZC,qBAAqB,EACrBC,QACA,CACIC,OAAO,CAACnO,SAAQ,GAChBoO,MAAM,CAACpS,KAAK,wBAAyBgE,SAAQ,KAGzD6K,OAAQ,QAGZ,qBAAK1O,UAAU,YAAf,SACI,cAAC,IAAD,CAAMkC,KACD,CACGqP,OAAQnB,EACRoB,SACA,CAAC,CACGpD,gBAAiB,uBACjBlM,KAAMoO,KAId/M,QACC,CACGsO,YAAY,EACZC,qBAAqB,EACrBC,QACA,CACIC,OAAO,CAACnO,SAAQ,GAChBoO,MAAM,CAACpS,KAAK,+BAAgCgE,SAAQ,KAGhE6K,OAAQ,WAShB,cAAC,EAAD,CAAYpD,KAAMA,I,OCzMf4G,MAdf,WAEE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9R,IACjC,cAAC,IAAD,CAAO4R,OAAK,EAACC,KAAK,YAAYC,UAAW9R,IACzC,cAAC,IAAD,CAAO4R,OAAK,EAACC,KAAK,SAASC,UAAWjH,IACtC,cAAC,IAAD,CAAOgH,KAAK,mBAAmBC,UAAWhM,IAE1C,cAAC,IAAD,CAAO8L,OAAK,EAACC,KAAK,SAASC,UAAWtC,QCb5CuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7P,SAASC,eAAe,W","file":"static/js/main.f1d616ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactMarkDown\":\"markdown-styles_reactMarkDown__2HtaS\"};","export default __webpack_public_path__ + \"static/media/personAndGuitar.24374079.jpg\";","// https://personalblog55.herokuapp.com/\r\n//http://localhost:3000/\r\nexport const prefixURLBackend =\"https://personalblog55.herokuapp.com/\";","import {useHistory} from \"react-router-dom\";\r\n\r\nimport \"./Header.css\"\r\nimport logo from '../../Tools/Images/personAndGuitar.jpg';\r\n\r\nimport { prefixURLBackend } from '../PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Header() \r\n{\r\n    const history=useHistory();\r\n\r\n    async function redirect(category)\r\n    {\r\n        switch(category)\r\n        {\r\n            case \"blog\":\r\n                history.push(\"\");\r\n                break;\r\n\r\n            case \"projects\":\r\n                history.push(\"/projects\");\r\n                break;\r\n\r\n            case \"about\":\r\n                history.push(\"/about\");\r\n                break;\r\n\r\n            case \"subscribe\":\r\n                const userEmail=prompt(\"Please enter the email to which you want to receive notifications about new posts:\");\r\n\r\n                if(userEmail==null)\r\n                    return;\r\n\r\n                const formData = new FormData();\r\n                formData.append(\"Email\", userEmail);\r\n\r\n                await fetch((prefixURLBackend+\"SubscribedEmail/PostEmail.php\"),\r\n                {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                }).then(async(response)=>{await response.text()\r\n                .then((result)=>\r\n                {\r\n                    alert(result);\r\n                })});       \r\n\r\n                break;\r\n\r\n            case \"admin\" :\r\n                history.push(\"/admin\");\r\n                break;  \r\n        }   \r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"headerArea\">\r\n                <div className=\"headerTitleArea\">\r\n                    <span className=\"title\">\r\n                        {\"Andres \\nArturo \\nRodriguez \\nCalderon\"}\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"verticalLine\"/>\r\n\r\n                <img className=\"headerImage\" src={logo}/>\r\n\r\n                <ul className=\"listHeaderCategories\">\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"blog\")}}>\r\n                                Blog\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"projects\")}}>\r\n                                Projects \r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n     \r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"about\")}}>\r\n                                About\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"subscribe\")}}>\r\n                                Subscribe\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <div className=\"headerCategoryArea\">\r\n                            <span className=\"headerCategoryFont\" onClick={()=>{redirect(\"admin\")}}>\r\n                                Admin\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n         \r\n            </div>\r\n\r\n            <div className=\"horizontalLine\"/>\r\n\r\n        </div>\r\n    );\r\n}   ","import \"./Footer.css\";\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"footerSocialIconsArea\">\r\n                    <a href=\"https://github.com/andresrodriguez55\" target=\"_blank\"><i className=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://www.linkedin.com/in/andr%C3%A9s-arturo-rodr%C3%ADguez-calder%C3%B3n-623873197/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                    <a href=\"mailto:andrescalderonn1995@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                    <a href=\"https://www.hackerrank.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-hackerrank\"></i></a>\r\n                    <a href=\"https://www.mathworks.com/matlabcentral/cody/players/23052170\" target=\"_blank\"><i className=\"fa fa-square-root-alt\"></i></a>\r\n                    <a href=\"https://www.kaggle.com/andrescalderon55\" target=\"_blank\"><i className=\"fab fa-kaggle\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/defaultPostImage.30d33787.jpg\";","import React from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Blog.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\nimport { prefixURLFrontend } from '../../Tools/PrefixURLFrontend/PrefixURLFrontend';\r\n\r\nimport defaultImage from '../../Tools/Images/defaultPostImage.jpg';\r\n\r\nexport default function Blog()\r\n{\r\n    const initialCategory=(useLocation().pathname==\"/\")?\"All\":\"Projects\";\r\n    const [selectedCategory, setSelectedCategory] = React.useState(initialCategory);\r\n    const [categories, setCategories] = React.useState([]);\r\n\r\n    const [allPosts, setAllPosts] = React.useState([]);\r\n    const [postsShownToUser, setPostsShownToUser] = React.useState([]);\r\n    const [areTherePosts, setAreTherePosts] = React.useState(true);\r\n    const initialNumberOfVisiblePosts=4;\r\n    const [numberOfVisiblePosts, setNumberOfVisiblePosts]=React.useState(initialNumberOfVisiblePosts);\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        if(initialCategory==\"All\")\r\n            getAndSetCategories();\r\n\r\n        else \r\n            hideSelectCategory();\r\n\r\n        await getAndSetAllPosts();\r\n    }, []); //Only once time\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        hideMoreButtonIfIsNecessary();\r\n    }, [numberOfVisiblePosts]); \r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        hideMoreButtonIfIsNecessary();\r\n    }, [postsShownToUser]); \r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        setNumberOfVisiblePosts(initialNumberOfVisiblePosts);\r\n        showMoreButton(); //Show the button again if is necessary\r\n        setFilteredShownPostsByChoosenCategory(); //Update shown posts   \r\n    }, [selectedCategory])\r\n\r\n    const getAndSetCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"Category/ReadCategoriesOfPosts.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert(URLToFetch));\r\n    };\r\n\r\n    const setFilteredShownPostsBySearchedValue=(searchedValue)=>\r\n    {\r\n        setPostsShownToUser(\r\n            allPosts.filter\r\n            (\r\n                function belongsToTheCategory(post)\r\n                { \r\n                    return post.Title.toLowerCase().includes(searchedValue.toLowerCase()) &&  \r\n                        (selectedCategory==\"All\" || post.Category==selectedCategory);\r\n                }\r\n            )\r\n        );\r\n    };\r\n\r\n    const searchBarOnChange=()=>\r\n    {\r\n        const element=document.getElementById('searchBar');\r\n\r\n        if(element)\r\n        {\r\n            if (element.value!=\"\")\r\n            {    \r\n                setNumberOfVisiblePosts(allPosts.length);\r\n                setFilteredShownPostsBySearchedValue(element.value);\r\n            }\r\n\r\n            else\r\n                setFilteredShownPostsByChoosenCategory();\r\n        }\r\n    };\r\n\r\n    const printCategoriesAndSearchBar=()=>\r\n    {\r\n        return(\r\n            <div className=\"displayCategoriesAndSearchBar\">\r\n                <select id=\"selectedCategory\" \r\n                    onChange={()=>{updateSelectedCategory()}}>\r\n                    <option value=\"All\">All</option>\r\n                    {\r\n                        categories.map(c=>\r\n                        {\r\n                            return(\r\n                                <option value={c.NameOfCategory}>\r\n                                    {c.NameOfCategory}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    }\r\n                </select>\r\n\r\n                <input id=\"searchBar\" className=\"searchBar\" \r\n                    onChange={searchBarOnChange} type=\"text\" placeholder='Search...' autocomplete=\"off\"/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const setFilteredShownPostsByChoosenCategory=()=>\r\n    {\r\n        setPostsShownToUser(\r\n            allPosts.filter\r\n            (\r\n                function belongsToTheCategory(post)\r\n                { \r\n                    return (selectedCategory==\"All\" || post.Category==selectedCategory)\r\n                }\r\n            )\r\n        );\r\n    };\r\n\r\n    const getAndSetAllPosts=async()=>\r\n    {\r\n        let URLToFetch=prefixURLBackend+\"Post/ReadByCategory.php\"+\r\n            ( (initialCategory==\"All\")?\"\":(\"?Category=\"+initialCategory) );\r\n        //Get all posts or only projects posts\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setAllPosts(json);\r\n                setPostsShownToUser(json); \r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n\r\n        if(allPosts.length==0)\r\n            setAreTherePosts(false);\r\n    };\r\n\r\n    const updateSelectedCategory=()=>\r\n    {\r\n        const selected = document.getElementById('selectedCategory');\r\n        const value = selected.options[selected.selectedIndex].value;\r\n        \r\n        setSelectedCategory(value);\r\n    };\r\n\r\n    const incrementNumberOfVisiblePosts=()=>\r\n    {\r\n        setNumberOfVisiblePosts((val)=>val+4);\r\n    };\r\n\r\n    const hideSelectCategory=()=>\r\n    {\r\n        const element=document.getElementById('selectedCategory');\r\n        if(element)\r\n            element.style.visibility = 'hidden';\r\n    };\r\n\r\n    const hideMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'none';\r\n    };\r\n\r\n    const hideMoreButtonIfIsNecessary=()=>\r\n    {\r\n        if(postsShownToUser.length<numberOfVisiblePosts)\r\n            hideMoreButton();\r\n    };\r\n\r\n    const showMoreButton=()=>\r\n    {\r\n        const element=document.getElementById('morePostsButton');\r\n        if(element)\r\n            element.style.display = 'inline-block';\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const printPosts=()=>\r\n    {\r\n        if(allPosts.length>0)\r\n        {   \r\n            return( \r\n                <div>\r\n                    <div className=\"posts\">\r\n                    {\r\n                        postsShownToUser.slice(0, numberOfVisiblePosts).map((post)=>\r\n                        {\r\n                            return(\r\n                                <a className=\"postGrid\" href={prefixURLFrontend+\"post/\"+post.ID.toString()+\"/\"+post.Title.replace(\" \", \"%20\")}>\r\n                                    <img className=\"postGridImage\" src={post.CoverPhotoLink} onError={({ currentTarget }) => {currentTarget.onerror = null; currentTarget.src=defaultImage}}/>\r\n                                    <div className=\"postGridInformation\">\r\n                                        <h2 className=\"postGridTitle\">{post.Title}</h2>\r\n                                        <p className=\"postGridCategory\">{\"Category: \"+post.Category}</p>\r\n                                        <p className=\"postGridDate\">{convertStringDateTimezoneToClient(post.PostDate)}</p>\r\n                                    </div>\r\n                                </a>\r\n                            );   \r\n                        })\r\n                    }\r\n                    </div>\r\n                    \r\n                    <div className=\"morePostsButtonArea\">\r\n                        <button className=\"morePostsButton\" id=\"morePostsButton\"\r\n                            onClick={incrementNumberOfVisiblePosts}>More</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(areTherePosts)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return (\r\n                <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">There are no posts...</h6>\r\n            );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"blogScreen\">\r\n            <Header/>\r\n            <div>{printCategoriesAndSearchBar()}{printPosts()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\nimport \"./Post.css\";\r\nimport style from \"./markdown-styles.module.css\";\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nexport default function Post()\r\n{\r\n    const suffixUrl = useLocation().pathname;\r\n\r\n    const informationUrl=suffixUrl.split(\"/\");\r\n    const urlID=informationUrl[2];\r\n    const urlTitle=informationUrl[3];\r\n\r\n    const [post, setPost] = React.useState([]);\r\n    const [doesPostExist, setDoesPostExist] = React.useState(true);\r\n    const [comments, setComments]=React.useState([]);\r\n    const [newPostedCommentID, setNewPostedCommentID]=React.useState(0);\r\n    const [clientIP, setClientIP]=React.useState(\"Unknown\");\r\n\r\n    let actualCommentFieldID=-1;\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadPost();\r\n        await updateClientIP();\r\n        await loadComments();\r\n    }, []);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        if(newPostedCommentID>0)\r\n        {    \r\n            document.getElementById(\"userCommentArea\"+newPostedCommentID).scrollIntoView();\r\n            window.scrollTo(0, window.scrollY-40);\r\n        }\r\n     }, [comments]);\r\n\r\n    const updateClientIP=async()=>\r\n    {\r\n        if(doesPostExist)\r\n        {\r\n            await fetch(\"https://api.ipify.org/?format=json\", {method:\"GET\"}).then\r\n            (\r\n                async(information)=> await information.json().then\r\n                ( \r\n                    data=>{ setClientIP(data.ip);}\r\n                )\r\n            ).catch(e=>{}); //do nothing\r\n        }\r\n    };\r\n\r\n    const loadPost=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"Post/ReadConcrete.php?ID=\"+urlID.toString()).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then((data)=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                setPost(json);\r\n            })\r\n        }).catch(e => alert('Post content error! Database connection error...'));\r\n\r\n        if(post.length==0)\r\n            setDoesPostExist(false);\r\n    };\r\n\r\n    const loadComments=async()=>\r\n    {\r\n        await fetch(prefixURLBackend+\"UserComment/ReadForConcretePost.php?PostID=\"+urlID.toString())\r\n            .then(async(information)=>\r\n            { \r\n                await information.text()\r\n                .then(data=>\r\n                    {\r\n                        const json=JSON.parse(data);\r\n                        const commentsArray=adjustArrayCommentsArray(json);\r\n                        setComments(commentsArray);\r\n                    })\r\n            })\r\n            .catch(e => alert('Comments error! Database connection error...'));\r\n    };\r\n\r\n    const adjustArrayCommentsArray=(commentsArray)=>\r\n    {\r\n        const resultArray=[];\r\n        const totalCommentsCount=commentsArray.length;\r\n\r\n        for(let x=0; x<totalCommentsCount; x++) //checking all comments linearly\r\n        {\r\n            const currentComment=commentsArray[x];\r\n\r\n            if(currentComment.ParentID == null) //if the current comment its a parent comment append it\r\n            {\r\n                currentComment.replies=[];\r\n                resultArray.push(currentComment);\r\n            }\r\n\r\n            else \r\n            {\r\n                addChildCommentToParentComment(resultArray, currentComment);\r\n            }\r\n        }\r\n\r\n        return resultArray;\r\n    };\r\n\r\n    const addChildCommentToParentComment=(parentCommentsArray, childComment)=>\r\n    {\r\n        const commentsCount=parentCommentsArray.length;\r\n\r\n        for(let y=0; y<commentsCount; y++) // if the current comment is a child check parent comments to find its father\r\n        {\r\n            const parentComment=parentCommentsArray[y];\r\n\r\n            if(parentComment.ID==childComment.ParentID) //if its father its a parent comment\r\n            {\r\n                parentComment.replies.push(childComment);\r\n                break;\r\n            }\r\n\r\n            else if(wasChildChildCommentAddedToReplyList(parentComment.replies, childComment)) //if its father its an another child comment\r\n            {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const wasChildChildCommentAddedToReplyList=(replyCommentsArray, childChildComment)=>\r\n    {\r\n        const commentsCount=replyCommentsArray.length;\r\n\r\n        for(let z=0; z<commentsCount; z++) //checking childs\r\n        {\r\n            const replyComment=replyCommentsArray[z];\r\n\r\n            if(replyComment.ID==childChildComment.ParentID) //if father is finded, append to the end of list of replies\r\n            {\r\n                childChildComment.Content=\"<b>@\"+replyComment.Nick+\"</b> \"+childChildComment.Content;\r\n                replyCommentsArray.push(childChildComment); //add to the end of the list, like youtube comments, no nested comments\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const convertStringDateTimezoneToClient=(stringDate)=>\r\n    {\r\n        const serverDate=new Date(stringDate+\" +03:00\"); //Server timezone\r\n\r\n        if(serverDate.toString().localeCompare(\"Invalid Date\")!=0)\r\n        {\r\n            return serverDate.toLocaleString('es-ES', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, \r\n                day: 'numeric',  month: '2-digit', year: 'numeric', hour: \"2-digit\", minute:\"2-digit\",\r\n                hour12: false });\r\n        }\r\n    \r\n        //Prevent invalid date, return actual client date\r\n        return new Date().toLocaleString('es-ES', {  day: 'numeric',  month: '2-digit', year: 'numeric', \r\n            hour: \"2-digit\", minute:\"2-digit\", hour12: false });\r\n    };\r\n\r\n    const switchSubmitCommentArea=(id)=>\r\n    {\r\n        let newArea = document.getElementById(id);\r\n\r\n        if (newArea.style.display === \"none\") \r\n        {\r\n            let actualArea = document.getElementById(actualCommentFieldID);\r\n            actualArea.style.display=\"none\";\r\n            \r\n            if(actualCommentFieldID!=-1)\r\n            {\r\n                document.getElementById(\"replyLabel\"+actualCommentFieldID).innerHTML = \"Reply\";\r\n            }\r\n\r\n            newArea.style.display = \"block\";\r\n            if(id!=-1)\r\n                document.getElementById(\"replyLabel\"+id).innerHTML = \"Cancel Reply\";\r\n\r\n            actualCommentFieldID=id;\r\n        } \r\n        \r\n        else\r\n        {\r\n            let actualArea = document.getElementById(id);\r\n            actualArea.style.display=\"none\";\r\n            document.getElementById(\"replyLabel\"+id).innerHTML = \"Reply\";\r\n\r\n            actualCommentFieldID=-1;\r\n            document.getElementById(actualCommentFieldID).style.display = \"block\";   \r\n        }\r\n    };\r\n\r\n    const submitComment=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Nick\", document.getElementById(\"Nick\"+actualCommentFieldID).value);\r\n        formData.append(\"Content\", document.getElementById(\"Content\"+actualCommentFieldID).value);\r\n        formData.append(\"Email\", document.getElementById(\"Email\"+actualCommentFieldID).value);\r\n        formData.append(\"NotifyReply\", \r\n            (document.getElementById(\"commentRepliesNotifyCheckBox\"+actualCommentFieldID).checked)?1:0);\r\n        formData.append(\"ParentID\", (actualCommentFieldID==-1)?null:actualCommentFieldID);\r\n        formData.append(\"PostID\", urlID);\r\n        formData.append(\"IP\", clientIP);\r\n        formData.append(\"CommentDate\", \r\n            (new Date()).toLocaleString(\"es-ES\", {timeZone: \"Europe/Istanbul\"}).replaceAll(\"/\", \"-\"));\r\n        formData.append(\"Honeypot\", \"Honeypot\");\r\n        formData.append(\"PostName\", post.Title);\r\n        formData.append(\"PostLink\", window.location.href);\r\n\r\n        await fetch((prefixURLBackend+\"UserComment/Create.php\"),\r\n        {\r\n            method: \"POST\",\r\n            body: formData\r\n        }).then(async(response)=>{await response.text()\r\n        .then(async(result)=>\r\n        {\r\n            if(isNaN(result))\r\n                alert(result);\r\n            else \r\n            {    \r\n                document.getElementById('Nick'+actualCommentFieldID).value=\"\";\r\n                document.getElementById('Content'+actualCommentFieldID).value=\"\";\r\n                document.getElementById('Email'+actualCommentFieldID).value=\"\";\r\n                document.getElementById('commentRepliesNotifyCheckBox'+actualCommentFieldID).checked=false;\r\n                \r\n                \r\n                loadComments();\r\n                setNewPostedCommentID(result);\r\n                if(actualCommentFieldID!=-1)\r\n                {\r\n                    switchSubmitCommentArea(-1);\r\n                } \r\n            }\r\n        })});\r\n    };\r\n\r\n    const printAllComments=()=>\r\n    {\r\n        return(\r\n            comments.map(comment=>\r\n            {\r\n                return(\r\n                    <div>\r\n                        <div className=\"userCommentArea\" id={\"userCommentArea\"+comment.ID}>\r\n                            <h4 className=\"userCommentNick\">{comment.Nick}</h4>\r\n                            <p className=\"userCommentDate\">\r\n                            {\r\n                                convertStringDateTimezoneToClient(comment.CommentDate)\r\n                            }\r\n                            </p>\r\n                            <p className=\"userCommentContent\">{comment.Content}</p>\r\n                            <p id={\"replyLabel\"+comment.ID} className=\"replyLabel\" onClick={()=>switchSubmitCommentArea(comment.ID)}>Reply</p>\r\n                        </div>\r\n\r\n                        <form id={comment.ID} onSubmit={(e)=>submitComment(e)} className=\"commentsForm\" \r\n                            style={{display:\"none\"}}>\r\n                            <div>\r\n                                <label className=\"commentInputLabel\">Nick</label>\r\n                                <input className=\"nickInput\" name=\"Nick\" id={\"Nick\"+comment.ID} \r\n                                    type=\"text\" placeholder=\"Enter a nick...\" \r\n                                    autoComplete=\"off\" required={true} minLength={3} maxLength={30}/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"commentInputLabel\">Email</label>\r\n                                <input className=\"emailInput\" name=\"Email\" id={\"Email\"+comment.ID}  \r\n                                    type=\"email\" placeholder=\"Enter a valid email...\" \r\n                                    autoComplete=\"off\" required={true}  minLength={7} maxLength={60}/>\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <label className=\"commentInputLabel\">Comment</label>\r\n                                <input className=\"commentInput\" name=\"Content\" id={\"Content\"+comment.ID}  \r\n                                    type=\"text\" placeholder=\"Enter your comment...\" \r\n                                    autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                            </div>\r\n                \r\n                            <div className=\"commentPostButton\">\r\n                                <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                                    type=\"submit\" value=\"Post\" />\r\n                            </div>\r\n\r\n                            <div className='commentRepliesNotifyCheckBoxDiv'>\r\n                                <input type=\"checkbox\" id={\"commentRepliesNotifyCheckBox\"+comment.ID} name=\"commentRepliesNotifyCheckBox\" value=\"1\"/>\r\n                                <label className='commentRepliesNotifyCheckBoxLabel' for=\"commentRepliesNotifyCheckBox\"> \r\n                                    Notify me for replies\r\n                                </label>\r\n                            </div>\r\n                            \r\n                        </form>\r\n\r\n                        {\r\n                            comment.replies.map(childComment=>\r\n                            {\r\n                                return(\r\n                                    <div>\r\n                                        <div className=\"userReplyCommentArea\" id={\"userCommentArea\"+childComment.ID}>\r\n                                            <h4 className=\"userCommentNick\">{childComment.Nick}</h4>\r\n                                            <p className=\"userCommentDate\">\r\n                                            {\r\n                                                convertStringDateTimezoneToClient(childComment.CommentDate)\r\n                                            }\r\n                                            </p>\r\n                                            <p className=\"userCommentContent\"><div dangerouslySetInnerHTML={{__html: childComment.Content}} /></p>\r\n                                            <p id={\"replyLabel\"+childComment.ID} className=\"replyLabel\" onClick={()=>switchSubmitCommentArea(childComment.ID)}>Reply</p>\r\n                                        </div>\r\n\r\n                                        <form id={childComment.ID} onSubmit={(e)=>submitComment(e)} className=\"commentsForm\" \r\n                                            style={{display:\"none\"}}>\r\n                                            <div>\r\n                                                <label className=\"commentInputLabel\">Nick</label>\r\n                                                <input className=\"nickInput\" name=\"Nick\" id={\"Nick\"+childComment.ID}\r\n                                                    type=\"text\" placeholder=\"Enter a nick...\" \r\n                                                    autoComplete=\"off\" required={true} minLength={3} maxLength={30}/>\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <label className=\"commentInputLabel\">Email</label>\r\n                                                <input className=\"emailInput\" name=\"Email\" id={\"Email\"+childComment.ID} \r\n                                                    type=\"email\" placeholder=\"Enter a valid email...\" \r\n                                                    autoComplete=\"off\" required={true}  minLength={7} maxLength={60}/>\r\n                                            </div>\r\n                                            \r\n                                            <div>\r\n                                                <label className=\"commentInputLabel\">Comment</label>\r\n                                                <input className=\"commentInput\" name=\"Content\" id={\"Content\"+childComment.ID}\r\n                                                    type=\"text\" placeholder=\"Enter your comment...\" \r\n                                                    autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                                            </div>\r\n                                \r\n                                            <div className=\"commentPostButton\">\r\n                                                <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                                                    type=\"submit\" value=\"Post\" />\r\n                                            </div>\r\n\r\n                                            <div className='commentRepliesNotifyCheckBoxDiv'>\r\n                                                <input type=\"checkbox\" id={\"commentRepliesNotifyCheckBox\"+childComment.ID} name=\"commentRepliesNotifyCheckBox\" value=\"1\"/>\r\n                                                <label className='commentRepliesNotifyCheckBoxLabel' for=\"commentRepliesNotifyCheckBox\"> \r\n                                                    Notify me for replies\r\n                                                </label>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    const printCommentsSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"commentsArea\" >\r\n                <form  onSubmit={(e)=>submitComment(e)} className=\"commentsForm\" id={-1}>\r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Nick</label>\r\n                        <input className=\"nickInput\" name=\"Nick\" id={\"Nick\"+actualCommentFieldID}\r\n                            type=\"text\" placeholder=\"Enter a nick...\" \r\n                            autoComplete=\"off\" required={true} minLength={3} maxLength={30}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Email</label>\r\n                        <input className=\"emailInput\" name=\"Email\" id={\"Email\"+actualCommentFieldID}\r\n                            type=\"email\" placeholder=\"Enter a valid email...\" \r\n                            autoComplete=\"off\" required={true} minLength={7} maxLength={60}/>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <label className=\"commentInputLabel\">Comment</label>\r\n                        <input className=\"commentInput\" name=\"Content\" id={\"Content\"+actualCommentFieldID}\r\n                            type=\"text\" placeholder=\"Enter your comment...\" \r\n                            autoComplete=\"off\" required={true} minLength={2} maxLength={280}/>\r\n                    </div>\r\n        \r\n                    <div className=\"commentPostButton\">\r\n                        <input className=\"commentPostButton\" name=\"Submit\" id=\"Submit\" \r\n                            type=\"submit\" value=\"Post\" />\r\n                    </div>\r\n\r\n                    <div className='commentRepliesNotifyCheckBoxDiv'>\r\n                        <input type=\"checkbox\" id={\"commentRepliesNotifyCheckBox\"+actualCommentFieldID} name=\"commentRepliesNotifyCheckBox\" value=\"1\"/>\r\n                        <label className='commentRepliesNotifyCheckBoxLabel' for=\"commentRepliesNotifyCheckBox\"> \r\n                            Notify me for replies\r\n                        </label>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"usersCommentsArea\">{printAllComments()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const printPostAndCommentsSection=()=>\r\n    {\r\n        if(post && post.Title===urlTitle.replace(\"%20\", \" \"))\r\n        {\r\n            return(\r\n                <div>\r\n                    <div className=\"PostArea\">\r\n                        <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                            components={{code: markdownCodeThemeComponent}}\r\n                            remarkPlugins={[remarkMath]}\r\n                            children={\"<div className='postInfo'><img alt='' className='postImage' src='\"+post.CoverPhotoLink+\"' />\"+\r\n                            \"<div className='postHeaderText'><h1 className='postTitleX' align='center'>\"+post.Title+\"</h1>\"+\r\n                            \"<h6 className='postDate' align='center'>\"+convertStringDateTimezoneToClient(post.PostDate)+\"</h6></div></div></br>\\n\\n\"+\r\n                            post.Content} \r\n                            className={style.reactMarkDown} />\r\n                    </div>\r\n                    <div>{printCommentsSection()}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if(doesPostExist)\r\n        {\r\n            return (\r\n                <div ><h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">Loading...</h6></div>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <h6 style={{fontSize:\"150%\", fontWeight:\"100\"}} align=\"center\">POST NOT EXIST...</h6>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"postScreen\">\r\n            <Header/>\r\n            <div>{printPostAndCommentsSection()}</div>\r\n            <Footer/>\r\n        </div>\r\n    );   \r\n}","export default __webpack_public_path__ + \"static/media/taza.1fa020a4.jpg\";","import Header from '../../Tools/Header/Header';\r\nimport Footer from '../../Tools/Footer/Footer';\r\n\r\nimport logo from './taza.jpg';\r\n\r\nimport \"./About.css\";\r\n\r\nexport default function About()\r\n{\r\n    return(\r\n        <div className=\"aboutScreen\">\r\n            <Header/>\r\n            <div className=\"aboutArea\">\r\n                <img className=\"aboutPic\" src={logo}/>\r\n                <br/>\r\n                <span >\r\n                    Welcome to my mind! This is my personal space. Here I write any experience, thought or thing that I have just learned.\r\n                    <br/>\r\n                    <br/>\r\n                    I am a Spanish, I was born in 1999 and I study computer engineering at Ege University located in Turkey. I love to learn new things, work hard, play the guitar and socialize with foreigners.\r\n                </span>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport { DataGrid, GridToolbar  } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Link';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport  railscasts  from 'react-syntax-highlighter/dist/esm/styles/hljs/railscasts';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\n\r\n\r\nimport \"./PanelAdmin.css\"\r\n\r\nexport default function PanelAdmin({user})\r\n{\r\n    const [userComments, setUserComments] = React.useState([]);\r\n    const [subscribedEmails, setSubscribedEmails] = React.useState([]);\r\n    const [categories, setCategories] = React.useState([]);\r\n    const [posts, setPosts] = React.useState([]);\r\n\r\n    const [newPostContent, setNewPostContent] = React.useState(\"\");\r\n\r\n    React.useEffect(async()=>\r\n    {\r\n        await loadUserComments();\r\n        await loadSubscribedEmails();\r\n        await loadCategories(); \r\n        await loadPosts();\r\n    }, []);\r\n\r\n    const loadCategories=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadCategoriesInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setCategories(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadUserComments=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadUserCommentsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setUserComments(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadSubscribedEmails=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadSubscribedEmailsInfo.php?Username=\"+\r\n            user.Username+\"&Password=\"+user.Password;\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setSubscribedEmails(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const loadPosts=async()=>\r\n    {\r\n        const URLToFetch=prefixURLBackend+\"/Admin/ReadPostsInfo.php\";\r\n\r\n        await fetch(URLToFetch).then(async(information)=>\r\n        { \r\n            await information.text()\r\n            .then(data=>{\r\n                const json=JSON.parse(data);\r\n                setPosts(json);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    const updatedComment=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(row)\r\n            row[newData.field]=newData.value;\r\n        else \r\n        {    \r\n            loadUserComments();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n\r\n        data.append(\"ID\", parseInt(row.id));\r\n        data.append(\"Nick\", row.UserCommentNick);\r\n        data.append(\"Content\", row.UserCommentContent);\r\n        data.append(\"Email\", row.UserCommentEmail);\r\n        data.append(\"NotifyReply\", row.UserCommentNotifyReply);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadUserComments();\r\n    };\r\n\r\n    const deleteUserComment=async(id)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n\r\n        data.append(\"ID\", id);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteComment.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadUserComments();\r\n    };\r\n\r\n    const commentsSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 563, width: '100%',  marginBottom:\"40px\",}}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"PostTitle\", headerName:\"Post\", sortable:false, disableColumnMenu:false, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Link href={`#${\"post/\"+info.row.PostID+\"/\"+info.row.PostTitle}`} target=\"_blank\">{info.row.PostTitle}</Link>\r\n                            )\r\n                        },\r\n                        {field:\"UserCommentNick\", headerName:\"Nick\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"UserCommentContent\", headerName:\"Content\", sortable:false, disableColumnMenu:true,  editable:true, flex:1},\r\n                        {field:\"UserCommentEmail\", headerName:\"Email\", sortable:false, disableColumnMenu:true, flex:1 ,  editable:true},\r\n                        {field:\"UserCommentNotifyReply\", headerName:\"Notify reply\", sortable:false, disableColumnMenu:true,  editable:true, flex:1},\r\n                        {field:\"UserCountry\", headerName:\"Country\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field:\"CommentDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteUserComment(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                \r\n                    rows={userComments}\r\n                    pageSize={8}\r\n                    onCellEditCommit={updatedComment}\r\n                    components={{ Toolbar: GridToolbar, }}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    const postSubscriptionEmail=async(email)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Email\", email);\r\n\r\n        await fetch((prefixURLBackend+\"SubscribedEmail/PostEmail.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            document.getElementById(\"NewSubscribedEmail\").value=\"\";\r\n        })});      \r\n\r\n        loadSubscribedEmails();\r\n    };\r\n\r\n    const deleteSubscribedEmail=async(email)=>\r\n    {\r\n        await fetch((prefixURLBackend+\"SubscribedEmail/DeleteEmail.php?Email=\"+email));   \r\n        loadSubscribedEmails();\r\n    };\r\n\r\n    const subscribedUsersSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 520, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"id\", headerName:\"Subscribed Email\", sortable:false, disableColumnMenu:false, flex:1},\r\n                        {field:\"SubscriptionDate\", headerName:\"Date\", sortable:false, disableColumnMenu:false, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteSubscribedEmail(info.id)} //DELETE SUBSCRIPTION\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={subscribedEmails}\r\n                    pageSize={7}\r\n                    components={{ Toolbar: GridToolbar, }}\r\n                    />\r\n\r\n                    <label>New subscription email: </label>\r\n                    <input type=\"text\" id=\"NewSubscribedEmail\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() =>postSubscriptionEmail(document.getElementById(\"NewSubscribedEmail\").value)} //POST NEW EMAIL\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const updatedCategory=async(newData)=>\r\n    {\r\n        const row=newData.row;\r\n\r\n        if(!row)\r\n        {\r\n            loadCategories();\r\n            return;\r\n        }\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"CurrentNameOfCategory\", row.NameOfCategory);\r\n        data.append(\"NewNameOfCategory\", newData.value);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/UpdateCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});  \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const deleteCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeleteCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadPosts();\r\n        loadCategories();\r\n    };\r\n\r\n    const postCategory=async(nameOfCategory)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"NameOfCategory\", nameOfCategory);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/PostCategory.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n                document.getElementById(\"NewCategory\").value=\"\";\r\n        })});      \r\n\r\n        loadCategories();\r\n    };\r\n\r\n    const categoriesSection=()=>\r\n    {\r\n        return(\r\n            <div style={{ height: 320, width: '100%', marginBottom:\"80px\" }}>\r\n                <DataGrid \r\n                    columns={\r\n                    [\r\n                        {field:\"NameOfCategory\", headerName:\"Name\", sortable:false, disableColumnMenu:true, editable:true, flex:1},\r\n                        {field:\"NumberOfPosts\", headerName:\"Number of Posts\", sortable:false, disableColumnMenu:true, flex:1},\r\n                        {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1,\r\n                            renderCell: (info) => \r\n                            (\r\n                                <Button\r\n                                    style={{\r\n                                    backgroundColor: \"#e8605d\",\r\n                                    padding: \"3px 35px\",\r\n                                    width:\"100%\"\r\n                                    }}\r\n\r\n                                    onClick={() => deleteCategory(info.id)}\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\">\r\n                                    Delete\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    ]}\r\n                    rows={categories}\r\n                    pageSize={4}\r\n                    onCellEditCommit={updatedCategory}/>\r\n\r\n                    <label>New: </label>\r\n                    <input type=\"text\" id=\"NewCategory\" />\r\n\r\n                    <Button\r\n                        style={{\r\n                        backgroundColor: \"#0c7d06\",\r\n                        width:\"1%\",\r\n                        height: \"25px\",\r\n                        padding: \"3px 35px\",\r\n                        marginTop:\"2px\",\r\n                        }}\r\n\r\n                        onClick={() => postCategory(document.getElementById(\"NewCategory\").value)}\r\n                        variant=\"contained\"\r\n                        type=\"submit\">\r\n                        POST\r\n                    </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const deletePost=async(postID)=>\r\n    {\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n        data.append(\"ID\", postID);\r\n\r\n        await fetch((prefixURLBackend+\"Admin/DeletePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    };\r\n\r\n    const setNewPostInfoWithExistingPostInfo=(post)=>\r\n    {\r\n        setNewPostID(post.id);\r\n        document.getElementById(\"PostTitle\").value=post.PostTitle;\r\n        document.getElementById(\"PostContent\").value=post.PostContent;\r\n        setNewPostContent(post.PostContent);\r\n        document.getElementById(\"PostDate\").value=post.PostDate.replace(\" \", \"T\");\r\n        document.getElementById(\"PostCategory\").value=post.PostCategory;\r\n        document.getElementById(\"PostCoverLink\").value=post.PostCoverPhotoLink;\r\n    };\r\n\r\n    const setNewPostID=(newID)=>\r\n    {\r\n        document.getElementById(\"PostID\").value=newID;\r\n    };\r\n\r\n    const postsSection=()=>\r\n    {\r\n        return(\r\n            <div>\r\n                <div style={{ height: 630, width: '100%', marginBottom:\"20px\", }}>\r\n                    <DataGrid \r\n                        columns={\r\n                        [\r\n                            {field:\"PostTitle\", headerName:\"Title\", sortable:false, disableColumnMenu:false, flex:1,\r\n                                renderCell: (info) => \r\n                                (\r\n                                    <Link href={`#${\"post/\"+info.row.id+\"/\"+info.row.PostTitle}`} target=\"_blank\">{info.row.PostTitle}</Link>\r\n                                )\r\n                            },\r\n                            {field:\"PostCategory\", headerName:\"Category\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"PostDate\", headerName:\"Date\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field:\"NumberOfComments\", headerName:\"Number of Comments\", sortable:false, disableColumnMenu:true, flex:1},\r\n                            {field: \"action\", headerName:\"Action\", sortable:false, disableColumnMenu:true, flex:1, \r\n                                renderCell: (info) => \r\n                                (\r\n                                    <>\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#ffcc00\",\r\n                                            width:\"48%\",\r\n                                            marginRight: \"4%\",\r\n                                            padding: \"3px 35px\"\r\n                                            }}\r\n\r\n                                            onClick={() => setNewPostInfoWithExistingPostInfo(info.row)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Edit\r\n                                        </Button>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                            backgroundColor: \"#e8605d\",\r\n                                            width:\"48%\",\r\n                                            padding: \"3px 35px\",\r\n                                            }}\r\n\r\n                                            onClick={() => deletePost(info.id)}\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\">\r\n                                            Delete\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        ]}\r\n                        rows={posts}\r\n                        pageSize={9}\r\n                        components={{ Toolbar: GridToolbar, }}\r\n                        />  \r\n                </div>\r\n                {newPostSection()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const markdownCodeThemeComponent=(props)=>\r\n    {\r\n        return (\r\n            <SyntaxHighlighter style={railscasts} language={(props.className)?props.className.substring(9):\"\"} \r\n                children={(props.children)?props.children:\"\"}/>\r\n        );\r\n    };\r\n\r\n    const postOrUpdatePost=async()=>\r\n    {\r\n        if(!document.getElementById(\"PostID\"))\r\n            return;\r\n\r\n        const data = new FormData();\r\n        data.append(\"Username\", user.Username);\r\n        data.append(\"Password\", user.Password);\r\n\r\n        data.append(\"ID\", parseInt(document.getElementById(\"PostID\").value));\r\n        data.append(\"Title\", document.getElementById(\"PostTitle\").value.replaceAll(\"\\\"\", \"\\'\"));\r\n        data.append(\"Content\", document.getElementById(\"PostContent\").value.replaceAll(\"\\\"\", \"\\'\").replaceAll(\"\\\\\", \"\\\\\\\\\"));\r\n        data.append(\"Category\", document.getElementById(\"PostCategory\").value);\r\n        data.append(\"PostDate\", document.getElementById(\"PostDate\").value.replace(\"T\", \" \").replaceAll(\"-\",\".\"));\r\n        data.append(\"CoverPhotoLink\", document.getElementById(\"PostCoverLink\").value);\r\n        \r\n        await fetch((prefixURLBackend+\"Admin/PostOrUpdatePost.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: data\r\n        }).then(async(response)=>{await response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                document.getElementById(\"PostID\").value=\"\";\r\n                document.getElementById(\"PostTitle\").value=\"\";\r\n                document.getElementById(\"PostContent\").value=\"\";\r\n                document.getElementById(\"PostCoverLink\").value=\"\";\r\n                setNewPostContent(\"\");\r\n            }\r\n        })});      \r\n\r\n        loadCategories();\r\n        loadPosts();\r\n    }\r\n\r\n    const newPostSection=()=>\r\n    {\r\n        return(\r\n            <div className=\"markdownEditor\">\r\n                <label >ID: </label>\r\n                <input className=\"IDLabel\" type=\"number\" id=\"PostID\" disabled/>\r\n                <button onClick={()=>setNewPostID(null)}>Set NULL For New Post</button>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Title: </label>\r\n                <input type=\"text\" id=\"PostTitle\" />\r\n                <div className=\"break\"/>\r\n\r\n                <label>Date: </label>\r\n                <input type=\"datetime-local\" id=\"PostDate\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <label>Category: </label>\r\n                <select id=\"PostCategory\" >\r\n                {\r\n                    categories.map(c=>\r\n                    {\r\n                        return(\r\n                            <option value={c.NameOfCategory}>\r\n                                {c.NameOfCategory}\r\n                            </option>\r\n                        );\r\n                    })\r\n                }\r\n                </select>\r\n\r\n                <div className=\"break\"/>\r\n\r\n                <label>Cover Link: </label>\r\n                <input type=\"text\" id=\"PostCoverLink\"/>\r\n                <div className=\"break\"/>\r\n\r\n                <textarea className=\"textArea\" id=\"PostContent\" \r\n                    onKeyDown={(e)=>\r\n                    {\r\n                        if(e.keyCode == 9) \r\n                        { \r\n                            e.preventDefault();\r\n\r\n                            const element=document.getElementById(\"PostContent\");\r\n\r\n                            const start = element.selectionStart;\r\n                            const end = element.selectionEnd;\r\n\r\n                            element.value = element.value.substring(0, start) + \"\\t\" + element.value.substring(end);\r\n\r\n                            element.selectionStart = element.selectionEnd = start + 1;\r\n                        }\r\n                    }}\r\n                />\r\n                \r\n                <ReactMarkdown rehypePlugins={[rehypeRaw, remarkGfm, rehypeKatex]} \r\n                    components={{code: markdownCodeThemeComponent}} \r\n                    remarkPlugins={[remarkMath]}\r\n                    children={newPostContent} \r\n                    className={\"markdown\"} />\r\n                <div className=\"break\"/>\r\n\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#000000\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    marginRight:\"7px\"\r\n                    }}\r\n                    onClick={()=>{setNewPostContent(document.getElementById(\"PostContent\").value)}}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Review\r\n                </Button>\r\n                <Button\r\n                    style={{\r\n                    backgroundColor: \"#0c7d06\",\r\n                    width:\"6%\",\r\n                    padding: \"3px 35px\",\r\n                    marginTop:\"7px\",\r\n                    }}\r\n\r\n                    onClick={()=>postOrUpdatePost()}\r\n                    variant=\"contained\"\r\n                    type=\"submit\">\r\n                    Post\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className=\"adminScreen\">\r\n            <h1>Comments</h1>\r\n            {commentsSection()}\r\n            <h1>Subscribed Emails</h1>\r\n            {subscribedUsersSection()}\r\n            <h1>Categories of Posts</h1>\r\n            {categoriesSection()}\r\n            <h1>Posts</h1>\r\n            {postsSection()}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Pie, Line} from \"react-chartjs-2\"\r\n\r\nimport { prefixURLBackend } from '../../Tools/PrefixURLBackend/PrefixURLBackend';\r\n\r\nimport PanelAdmin from \"../PanelAdmin/PanelAdmin\"\r\n\r\nimport \"./Admin.css\"\r\n\r\nexport default function Admin()\r\n{\r\n    const [commentsCountries, setCommentsCountries]=React.useState([]);\r\n    const [commentsCountriesCount, setCommentsCountriesCount]=React.useState([]);\r\n    const [commentsDate, setCommentsDate]=React.useState([]);\r\n    const [commentsDateCount, setCommentsDateCount]=React.useState([]);\r\n\r\n    const [user, setUser]=React.useState({});\r\n    const [isSessionActive, setIsSessionActive]=React.useState(false);\r\n\r\n    React.useEffect(()=>\r\n    {\r\n        loadCommentsCountriesInfo();\r\n        loadCommentsMonthsInfo();\r\n    }, []);\r\n\r\n    const loadCommentsCountriesInfo=()=>\r\n    {\r\n        const tempCommentsCountries=[];\r\n        const tempCommentsCountriesCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByCountries.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsCountries.push(row.Country);\r\n                    tempCommentsCountriesCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsCountries(tempCommentsCountries);\r\n                setCommentsCountriesCount(tempCommentsCountriesCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getMonthName(number)\r\n    {\r\n        switch(number)\r\n        {\r\n            case \"1\":\r\n                return \"January\";\r\n            case \"2\":\r\n                return \"Frebruary\";\r\n            case \"3\":\r\n                return \"March\";\r\n            case \"4\":\r\n                return \"April\";\r\n            case \"5\":\r\n                return \"May\";\r\n            case \"6\":\r\n                return \"June\";\r\n            case \"7\":\r\n                return \"July\";\r\n            case \"8\":\r\n                return \"August\";\r\n            case \"9\":\r\n                return \"September\";\r\n            case \"10\":\r\n                return \"October\";\r\n            case \"11\":\r\n                return \"November\";\r\n            default:\r\n                return \"December\";\r\n        };\r\n    };\r\n\r\n    const loadCommentsMonthsInfo=()=>\r\n    {\r\n        const tempCommentsMonths=[];\r\n        const tempCommentsMonthsCount=[];\r\n\r\n        const URLToFetch=prefixURLBackend+\"UserComment/ReadCountOfCommentsByMonths.php\";\r\n\r\n        fetch(URLToFetch).then((information)=>\r\n        { \r\n            information.text()\r\n            .then(data=>\r\n            {\r\n                const json=JSON.parse(data);\r\n                json.map(row=>\r\n                {\r\n                    tempCommentsMonths.push(getMonthName(row.CommentsMonth));\r\n                    tempCommentsMonthsCount.push(row.CommentsCount);\r\n                })\r\n\r\n                setCommentsDate(tempCommentsMonths);\r\n                setCommentsDateCount(tempCommentsMonthsCount);\r\n            })\r\n        }).catch(e => alert('Database connection error...'));\r\n    };\r\n\r\n    function getLoopColorsByLength(len)\r\n    {\r\n        const colors=[\"red\", \"blue\", \"yellow\", \"orange\", \"brown\", \"pink\"];\r\n        let temp=0;\r\n\r\n        while(colors.length<len)\r\n        {\r\n            colors.push(colors[(temp++)%colors.length]);\r\n        }\r\n\r\n        return colors;\r\n    };\r\n\r\n    const submit=(e)=>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"Username\", document.getElementById(\"Username\").value);\r\n        formData.append(\"Password\", document.getElementById(\"Password\").value);\r\n\r\n        fetch((prefixURLBackend+\"Admin/ReadUserExist.php\"),\r\n        {\r\n            method: \"POST\",\r\n            'Content-Type': \"application/json\",\r\n            body: formData\r\n        }).then((response)=>{response.text()\r\n        .then((result)=>\r\n        {\r\n            if(result!=\"\")\r\n                alert(result);\r\n            else\r\n            {\r\n                setUser({\r\n                    Username: document.getElementById(\"Username\").value,\r\n                    Password: document.getElementById(\"Password\").value\r\n                });\r\n                setIsSessionActive(true);\r\n            }\r\n        })});      \r\n    };\r\n\r\n    if(isSessionActive==false)\r\n    {\r\n        return(\r\n            <div className=\"loginScreen\">\r\n                <form className=\"loginForm\" onSubmit={(e)=>submit(e)}>\r\n                    <h1>Admin Panel</h1>\r\n                    <input className=\"usernameInput\" name=\"Username\" id=\"Username\" \r\n                            type=\"password\" placeholder=\"Username\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"passwordInput\" name=\"Password\" id=\"Password\" \r\n                            type=\"password\" placeholder=\"Password\" \r\n                            autocomplete=\"off\"/>\r\n    \r\n                    <input className=\"loginPostButton\" name=\"loginSubmit\" id=\"loginSubmit\" \r\n                                                type=\"submit\" value=\"Login\" />   \r\n                </form>\r\n    \r\n                <h1 align=\"center\">Statistics</h1>\r\n    \r\n                <div className=\"chartArea\">\r\n                    <Pie data=\r\n                        {{\r\n                            labels: commentsCountries,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: getLoopColorsByLength(commentsCountriesCount.length),\r\n                                data: commentsCountriesCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Countries of Comments\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div> \r\n    \r\n                <div className=\"chartArea\">\r\n                    <Line data=\r\n                        {{\r\n                            labels: commentsDate,\r\n                            datasets: \r\n                            [{\r\n                                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                                data: commentsDateCount, \r\n                            }]\r\n                        }} \r\n                        \r\n                        options=\r\n                        {{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            plugins:\r\n                            {\r\n                                legend:{display:false},\r\n                                title:{text:\"Number of Comments Per Month\", display:true}\r\n                            }\r\n                        }}\r\n                    height={290}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    else\r\n    {\r\n        return(\r\n            <PanelAdmin user={user} />\r\n        );\r\n    }\r\n}","import {Route, HashRouter} from \"react-router-dom\";\nimport Blog from \"./Pages/Blog/Blog\";\nimport Post from \"./Pages/Post/Post\";\nimport About from \"./Pages/About/About\";\nimport Admin from \"./Pages/Admin/Admin\";\n\nimport \"./App.css\";\n\nfunction App() \n{\n  return (\n    <HashRouter >\n      <Route exact path=\"/\" component={Blog} />\n      <Route exact path=\"/projects\" component={Blog}/>\n      <Route exact path=\"/about\" component={About}/>\n      <Route path=\"/post/:id/:title\" component={Post}/>\n\n      <Route exact path=\"/admin\" component={Admin}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}